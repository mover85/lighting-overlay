{"mappings":"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","sources":["node_modules/lodash.clone/index.js","node_modules/@lit/reactive-element/src/css-tag.ts","node_modules/@lit/reactive-element/src/reactive-element.ts","node_modules/lit-html/src/lit-html.ts","node_modules/lit-element/src/lit-element.ts","node_modules/haunted/lib/interface.js","node_modules/haunted/lib/symbols.js","node_modules/haunted/lib/state.js","node_modules/haunted/lib/scheduler.js","node_modules/haunted/lib/component.js","node_modules/haunted/lib/hook.js","node_modules/haunted/lib/create-effect.js","node_modules/haunted/lib/use-effect.js","node_modules/haunted/lib/use-context.js","node_modules/haunted/lib/create-context.js","node_modules/haunted/lib/use-memo.js","node_modules/haunted/lib/use-callback.js","node_modules/haunted/lib/use-layout-effect.js","node_modules/haunted/lib/use-state.js","node_modules/haunted/lib/use-controller.js","node_modules/haunted/lib/use-reducer.js","node_modules/lit-html/src/directive.ts","node_modules/lit-html/src/directive-helpers.ts","node_modules/haunted/lib/virtual.js","node_modules/haunted/lib/lit-haunted.js","node_modules/haunted/lib/core.js","node_modules/lit-html/src/directives/class-map.ts","src/hooks/use-replicant.js","node_modules/lit-html/src/directives/when.ts","node_modules/lit-html/src/directives/map.ts","node_modules/lit-html/src/directives/unsafe-html.ts","node_modules/@webcomponents/shadycss/src/style-settings.js","node_modules/@webcomponents/shadycss/src/css-parse.js","node_modules/@webcomponents/shadycss/src/common-regex.js","node_modules/@webcomponents/shadycss/src/unscoped-style-handler.js","node_modules/@webcomponents/shadycss/src/style-util.js","node_modules/@webcomponents/shadycss/src/common-utils.js","node_modules/@webcomponents/shadycss/src/apply-shim.js","node_modules/@webcomponents/shadycss/src/template-map.js","node_modules/@webcomponents/shadycss/src/apply-shim-utils.js","node_modules/@webcomponents/shadycss/src/document-wait.js","node_modules/@webcomponents/shadycss/src/custom-style-interface.js","node_modules/@webcomponents/shadycss/entrypoints/apply-shim.js","node_modules/@polymer/polymer/lib/utils/boot.js","node_modules/@polymer/polymer/lib/utils/resolve-url.js","node_modules/@polymer/polymer/lib/utils/settings.js","node_modules/@polymer/polymer/lib/utils/mixin.js","node_modules/@polymer/polymer/lib/elements/dom-module.js","node_modules/@polymer/polymer/lib/utils/style-gather.js","node_modules/@polymer/polymer/lib/utils/wrap.js","node_modules/@polymer/polymer/lib/utils/path.js","node_modules/@polymer/polymer/lib/utils/case-map.js","node_modules/@polymer/polymer/lib/utils/async.js","node_modules/@polymer/polymer/lib/mixins/properties-changed.js","node_modules/@polymer/polymer/lib/mixins/property-accessors.js","node_modules/@polymer/polymer/lib/mixins/template-stamp.js","node_modules/@polymer/polymer/lib/mixins/property-effects.js","node_modules/@polymer/polymer/lib/utils/telemetry.js","node_modules/@polymer/polymer/lib/mixins/properties-mixin.js","node_modules/@polymer/polymer/lib/mixins/element-mixin.js","node_modules/@polymer/polymer/lib/utils/debounce.js","node_modules/@polymer/polymer/lib/utils/gestures.js","node_modules/@polymer/polymer/lib/mixins/gesture-event-listeners.js","node_modules/@polymer/polymer/lib/mixins/dir-mixin.js","node_modules/@polymer/polymer/lib/utils/unresolved.js","node_modules/@polymer/polymer/lib/utils/array-splice.js","node_modules/@polymer/polymer/lib/utils/flattened-nodes-observer.js","node_modules/@polymer/polymer/lib/utils/flush.js","node_modules/@polymer/polymer/lib/legacy/polymer.dom.js","node_modules/@polymer/polymer/lib/utils/scope-subtree.js","node_modules/@polymer/polymer/lib/mixins/disable-upgrade-mixin.js","node_modules/@polymer/polymer/lib/legacy/legacy-element-mixin.js","node_modules/@polymer/polymer/lib/legacy/class.js","node_modules/@polymer/polymer/lib/legacy/polymer-fn.js","node_modules/@polymer/polymer/lib/mixins/mutable-data.js","node_modules/@polymer/polymer/lib/utils/templatize.js","node_modules/@polymer/polymer/lib/utils/hide-template-controls.js","node_modules/@polymer/polymer/lib/elements/dom-bind.js","node_modules/@polymer/polymer/lib/utils/html-tag.js","node_modules/@polymer/polymer/polymer-element.js","node_modules/@polymer/polymer/lib/elements/dom-repeat.js","node_modules/@polymer/polymer/lib/elements/dom-if.js","node_modules/@polymer/polymer/lib/elements/array-selector.js","node_modules/@webcomponents/shadycss/entrypoints/custom-style-interface.js","node_modules/@polymer/polymer/lib/elements/custom-style.js","node_modules/@polymer/polymer/lib/legacy/mutable-data-behavior.js","node_modules/@polymer/polymer/polymer-legacy.js","node_modules/@polymer/iron-image/iron-image.js","src/dashboard/elements/dash-twitter/dash-twitter-tweet.js","node_modules/tslib/tslib.es6.js","node_modules/@lit/reactive-element/src/decorators/custom-element.ts","node_modules/@lit/reactive-element/src/decorators/property.ts","node_modules/@lit/reactive-element/src/decorators/state.ts","node_modules/@lit/reactive-element/src/decorators/base.ts","node_modules/@lit/reactive-element/src/decorators/query.ts","node_modules/@lit/reactive-element/src/decorators/query-assigned-elements.ts","node_modules/@material/mwc-icon/mwc-icon-host.css.ts","node_modules/@material/mwc-icon/mwc-icon.ts","node_modules/@material/dom/ponyfill.ts","node_modules/@material/mwc-base/utils.ts","node_modules/@material/mwc-base/base-element.ts","node_modules/@material/base/foundation.ts","node_modules/@material/ripple/constants.ts","node_modules/@material/ripple/util.ts","node_modules/@material/ripple/foundation.ts","node_modules/lit-html/src/directives/style-map.ts","node_modules/@material/mwc-ripple/mwc-ripple-base.ts","node_modules/@material/mwc-ripple/mwc-ripple.css.ts","node_modules/@material/mwc-ripple/mwc-ripple.ts","node_modules/@material/mwc-ripple/ripple-handlers.ts","node_modules/@material/mwc-button/mwc-button-base.ts","node_modules/lit-html/src/directives/if-defined.ts","node_modules/@lit/reactive-element/src/decorators/query-async.ts","node_modules/@material/mwc-base/aria-property.ts","node_modules/@lit/reactive-element/src/decorators/event-options.ts","node_modules/@material/mwc-button/styles.css.ts","node_modules/@material/mwc-button/mwc-button.ts","src/dashboard/elements/dash-twitter/dash-twitter.js","src/dashboard/elements/dash-nowplaying/dash-nowplaying.js","node_modules/@polymer/iron-flex-layout/iron-flex-layout.js","node_modules/@polymer/iron-meta/iron-meta.js","node_modules/@polymer/iron-icon/iron-icon.js","node_modules/@polymer/iron-iconset-svg/iron-iconset-svg.js","node_modules/@polymer/iron-icons/social-icons.js","node_modules/@polymer/iron-icons/av-icons.js","src/dashboard/elements/dash-section/dash-section.js"],"sourcesContent":["/**\n * lodash (Custom Build) <https://lodash.com/>\n * Build: `lodash modularize exports=\"npm\" -o ./`\n * Copyright jQuery Foundation and other contributors <https://jquery.org/>\n * Released under MIT license <https://lodash.com/license>\n * Based on Underscore.js 1.8.3 <http://underscorejs.org/LICENSE>\n * Copyright Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors\n */\n\n/** Used as the size to enable large array optimizations. */\nvar LARGE_ARRAY_SIZE = 200;\n\n/** Used to stand-in for `undefined` hash values. */\nvar HASH_UNDEFINED = '__lodash_hash_undefined__';\n\n/** Used as references for various `Number` constants. */\nvar MAX_SAFE_INTEGER = 9007199254740991;\n\n/** `Object#toString` result references. */\nvar argsTag = '[object Arguments]',\n    arrayTag = '[object Array]',\n    boolTag = '[object Boolean]',\n    dateTag = '[object Date]',\n    errorTag = '[object Error]',\n    funcTag = '[object Function]',\n    genTag = '[object GeneratorFunction]',\n    mapTag = '[object Map]',\n    numberTag = '[object Number]',\n    objectTag = '[object Object]',\n    promiseTag = '[object Promise]',\n    regexpTag = '[object RegExp]',\n    setTag = '[object Set]',\n    stringTag = '[object String]',\n    symbolTag = '[object Symbol]',\n    weakMapTag = '[object WeakMap]';\n\nvar arrayBufferTag = '[object ArrayBuffer]',\n    dataViewTag = '[object DataView]',\n    float32Tag = '[object Float32Array]',\n    float64Tag = '[object Float64Array]',\n    int8Tag = '[object Int8Array]',\n    int16Tag = '[object Int16Array]',\n    int32Tag = '[object Int32Array]',\n    uint8Tag = '[object Uint8Array]',\n    uint8ClampedTag = '[object Uint8ClampedArray]',\n    uint16Tag = '[object Uint16Array]',\n    uint32Tag = '[object Uint32Array]';\n\n/**\n * Used to match `RegExp`\n * [syntax characters](http://ecma-international.org/ecma-262/7.0/#sec-patterns).\n */\nvar reRegExpChar = /[\\\\^$.*+?()[\\]{}|]/g;\n\n/** Used to match `RegExp` flags from their coerced string values. */\nvar reFlags = /\\w*$/;\n\n/** Used to detect host constructors (Safari). */\nvar reIsHostCtor = /^\\[object .+?Constructor\\]$/;\n\n/** Used to detect unsigned integer values. */\nvar reIsUint = /^(?:0|[1-9]\\d*)$/;\n\n/** Used to identify `toStringTag` values supported by `_.clone`. */\nvar cloneableTags = {};\ncloneableTags[argsTag] = cloneableTags[arrayTag] =\ncloneableTags[arrayBufferTag] = cloneableTags[dataViewTag] =\ncloneableTags[boolTag] = cloneableTags[dateTag] =\ncloneableTags[float32Tag] = cloneableTags[float64Tag] =\ncloneableTags[int8Tag] = cloneableTags[int16Tag] =\ncloneableTags[int32Tag] = cloneableTags[mapTag] =\ncloneableTags[numberTag] = cloneableTags[objectTag] =\ncloneableTags[regexpTag] = cloneableTags[setTag] =\ncloneableTags[stringTag] = cloneableTags[symbolTag] =\ncloneableTags[uint8Tag] = cloneableTags[uint8ClampedTag] =\ncloneableTags[uint16Tag] = cloneableTags[uint32Tag] = true;\ncloneableTags[errorTag] = cloneableTags[funcTag] =\ncloneableTags[weakMapTag] = false;\n\n/** Detect free variable `global` from Node.js. */\nvar freeGlobal = typeof global == 'object' && global && global.Object === Object && global;\n\n/** Detect free variable `self`. */\nvar freeSelf = typeof self == 'object' && self && self.Object === Object && self;\n\n/** Used as a reference to the global object. */\nvar root = freeGlobal || freeSelf || Function('return this')();\n\n/** Detect free variable `exports`. */\nvar freeExports = typeof exports == 'object' && exports && !exports.nodeType && exports;\n\n/** Detect free variable `module`. */\nvar freeModule = freeExports && typeof module == 'object' && module && !module.nodeType && module;\n\n/** Detect the popular CommonJS extension `module.exports`. */\nvar moduleExports = freeModule && freeModule.exports === freeExports;\n\n/**\n * Adds the key-value `pair` to `map`.\n *\n * @private\n * @param {Object} map The map to modify.\n * @param {Array} pair The key-value pair to add.\n * @returns {Object} Returns `map`.\n */\nfunction addMapEntry(map, pair) {\n  // Don't return `map.set` because it's not chainable in IE 11.\n  map.set(pair[0], pair[1]);\n  return map;\n}\n\n/**\n * Adds `value` to `set`.\n *\n * @private\n * @param {Object} set The set to modify.\n * @param {*} value The value to add.\n * @returns {Object} Returns `set`.\n */\nfunction addSetEntry(set, value) {\n  // Don't return `set.add` because it's not chainable in IE 11.\n  set.add(value);\n  return set;\n}\n\n/**\n * A specialized version of `_.forEach` for arrays without support for\n * iteratee shorthands.\n *\n * @private\n * @param {Array} [array] The array to iterate over.\n * @param {Function} iteratee The function invoked per iteration.\n * @returns {Array} Returns `array`.\n */\nfunction arrayEach(array, iteratee) {\n  var index = -1,\n      length = array ? array.length : 0;\n\n  while (++index < length) {\n    if (iteratee(array[index], index, array) === false) {\n      break;\n    }\n  }\n  return array;\n}\n\n/**\n * Appends the elements of `values` to `array`.\n *\n * @private\n * @param {Array} array The array to modify.\n * @param {Array} values The values to append.\n * @returns {Array} Returns `array`.\n */\nfunction arrayPush(array, values) {\n  var index = -1,\n      length = values.length,\n      offset = array.length;\n\n  while (++index < length) {\n    array[offset + index] = values[index];\n  }\n  return array;\n}\n\n/**\n * A specialized version of `_.reduce` for arrays without support for\n * iteratee shorthands.\n *\n * @private\n * @param {Array} [array] The array to iterate over.\n * @param {Function} iteratee The function invoked per iteration.\n * @param {*} [accumulator] The initial value.\n * @param {boolean} [initAccum] Specify using the first element of `array` as\n *  the initial value.\n * @returns {*} Returns the accumulated value.\n */\nfunction arrayReduce(array, iteratee, accumulator, initAccum) {\n  var index = -1,\n      length = array ? array.length : 0;\n\n  if (initAccum && length) {\n    accumulator = array[++index];\n  }\n  while (++index < length) {\n    accumulator = iteratee(accumulator, array[index], index, array);\n  }\n  return accumulator;\n}\n\n/**\n * The base implementation of `_.times` without support for iteratee shorthands\n * or max array length checks.\n *\n * @private\n * @param {number} n The number of times to invoke `iteratee`.\n * @param {Function} iteratee The function invoked per iteration.\n * @returns {Array} Returns the array of results.\n */\nfunction baseTimes(n, iteratee) {\n  var index = -1,\n      result = Array(n);\n\n  while (++index < n) {\n    result[index] = iteratee(index);\n  }\n  return result;\n}\n\n/**\n * Gets the value at `key` of `object`.\n *\n * @private\n * @param {Object} [object] The object to query.\n * @param {string} key The key of the property to get.\n * @returns {*} Returns the property value.\n */\nfunction getValue(object, key) {\n  return object == null ? undefined : object[key];\n}\n\n/**\n * Checks if `value` is a host object in IE < 9.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a host object, else `false`.\n */\nfunction isHostObject(value) {\n  // Many host objects are `Object` objects that can coerce to strings\n  // despite having improperly defined `toString` methods.\n  var result = false;\n  if (value != null && typeof value.toString != 'function') {\n    try {\n      result = !!(value + '');\n    } catch (e) {}\n  }\n  return result;\n}\n\n/**\n * Converts `map` to its key-value pairs.\n *\n * @private\n * @param {Object} map The map to convert.\n * @returns {Array} Returns the key-value pairs.\n */\nfunction mapToArray(map) {\n  var index = -1,\n      result = Array(map.size);\n\n  map.forEach(function(value, key) {\n    result[++index] = [key, value];\n  });\n  return result;\n}\n\n/**\n * Creates a unary function that invokes `func` with its argument transformed.\n *\n * @private\n * @param {Function} func The function to wrap.\n * @param {Function} transform The argument transform.\n * @returns {Function} Returns the new function.\n */\nfunction overArg(func, transform) {\n  return function(arg) {\n    return func(transform(arg));\n  };\n}\n\n/**\n * Converts `set` to an array of its values.\n *\n * @private\n * @param {Object} set The set to convert.\n * @returns {Array} Returns the values.\n */\nfunction setToArray(set) {\n  var index = -1,\n      result = Array(set.size);\n\n  set.forEach(function(value) {\n    result[++index] = value;\n  });\n  return result;\n}\n\n/** Used for built-in method references. */\nvar arrayProto = Array.prototype,\n    funcProto = Function.prototype,\n    objectProto = Object.prototype;\n\n/** Used to detect overreaching core-js shims. */\nvar coreJsData = root['__core-js_shared__'];\n\n/** Used to detect methods masquerading as native. */\nvar maskSrcKey = (function() {\n  var uid = /[^.]+$/.exec(coreJsData && coreJsData.keys && coreJsData.keys.IE_PROTO || '');\n  return uid ? ('Symbol(src)_1.' + uid) : '';\n}());\n\n/** Used to resolve the decompiled source of functions. */\nvar funcToString = funcProto.toString;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/**\n * Used to resolve the\n * [`toStringTag`](http://ecma-international.org/ecma-262/7.0/#sec-object.prototype.tostring)\n * of values.\n */\nvar objectToString = objectProto.toString;\n\n/** Used to detect if a method is native. */\nvar reIsNative = RegExp('^' +\n  funcToString.call(hasOwnProperty).replace(reRegExpChar, '\\\\$&')\n  .replace(/hasOwnProperty|(function).*?(?=\\\\\\()| for .+?(?=\\\\\\])/g, '$1.*?') + '$'\n);\n\n/** Built-in value references. */\nvar Buffer = moduleExports ? root.Buffer : undefined,\n    Symbol = root.Symbol,\n    Uint8Array = root.Uint8Array,\n    getPrototype = overArg(Object.getPrototypeOf, Object),\n    objectCreate = Object.create,\n    propertyIsEnumerable = objectProto.propertyIsEnumerable,\n    splice = arrayProto.splice;\n\n/* Built-in method references for those with the same name as other `lodash` methods. */\nvar nativeGetSymbols = Object.getOwnPropertySymbols,\n    nativeIsBuffer = Buffer ? Buffer.isBuffer : undefined,\n    nativeKeys = overArg(Object.keys, Object);\n\n/* Built-in method references that are verified to be native. */\nvar DataView = getNative(root, 'DataView'),\n    Map = getNative(root, 'Map'),\n    Promise = getNative(root, 'Promise'),\n    Set = getNative(root, 'Set'),\n    WeakMap = getNative(root, 'WeakMap'),\n    nativeCreate = getNative(Object, 'create');\n\n/** Used to detect maps, sets, and weakmaps. */\nvar dataViewCtorString = toSource(DataView),\n    mapCtorString = toSource(Map),\n    promiseCtorString = toSource(Promise),\n    setCtorString = toSource(Set),\n    weakMapCtorString = toSource(WeakMap);\n\n/** Used to convert symbols to primitives and strings. */\nvar symbolProto = Symbol ? Symbol.prototype : undefined,\n    symbolValueOf = symbolProto ? symbolProto.valueOf : undefined;\n\n/**\n * Creates a hash object.\n *\n * @private\n * @constructor\n * @param {Array} [entries] The key-value pairs to cache.\n */\nfunction Hash(entries) {\n  var index = -1,\n      length = entries ? entries.length : 0;\n\n  this.clear();\n  while (++index < length) {\n    var entry = entries[index];\n    this.set(entry[0], entry[1]);\n  }\n}\n\n/**\n * Removes all key-value entries from the hash.\n *\n * @private\n * @name clear\n * @memberOf Hash\n */\nfunction hashClear() {\n  this.__data__ = nativeCreate ? nativeCreate(null) : {};\n}\n\n/**\n * Removes `key` and its value from the hash.\n *\n * @private\n * @name delete\n * @memberOf Hash\n * @param {Object} hash The hash to modify.\n * @param {string} key The key of the value to remove.\n * @returns {boolean} Returns `true` if the entry was removed, else `false`.\n */\nfunction hashDelete(key) {\n  return this.has(key) && delete this.__data__[key];\n}\n\n/**\n * Gets the hash value for `key`.\n *\n * @private\n * @name get\n * @memberOf Hash\n * @param {string} key The key of the value to get.\n * @returns {*} Returns the entry value.\n */\nfunction hashGet(key) {\n  var data = this.__data__;\n  if (nativeCreate) {\n    var result = data[key];\n    return result === HASH_UNDEFINED ? undefined : result;\n  }\n  return hasOwnProperty.call(data, key) ? data[key] : undefined;\n}\n\n/**\n * Checks if a hash value for `key` exists.\n *\n * @private\n * @name has\n * @memberOf Hash\n * @param {string} key The key of the entry to check.\n * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n */\nfunction hashHas(key) {\n  var data = this.__data__;\n  return nativeCreate ? data[key] !== undefined : hasOwnProperty.call(data, key);\n}\n\n/**\n * Sets the hash `key` to `value`.\n *\n * @private\n * @name set\n * @memberOf Hash\n * @param {string} key The key of the value to set.\n * @param {*} value The value to set.\n * @returns {Object} Returns the hash instance.\n */\nfunction hashSet(key, value) {\n  var data = this.__data__;\n  data[key] = (nativeCreate && value === undefined) ? HASH_UNDEFINED : value;\n  return this;\n}\n\n// Add methods to `Hash`.\nHash.prototype.clear = hashClear;\nHash.prototype['delete'] = hashDelete;\nHash.prototype.get = hashGet;\nHash.prototype.has = hashHas;\nHash.prototype.set = hashSet;\n\n/**\n * Creates an list cache object.\n *\n * @private\n * @constructor\n * @param {Array} [entries] The key-value pairs to cache.\n */\nfunction ListCache(entries) {\n  var index = -1,\n      length = entries ? entries.length : 0;\n\n  this.clear();\n  while (++index < length) {\n    var entry = entries[index];\n    this.set(entry[0], entry[1]);\n  }\n}\n\n/**\n * Removes all key-value entries from the list cache.\n *\n * @private\n * @name clear\n * @memberOf ListCache\n */\nfunction listCacheClear() {\n  this.__data__ = [];\n}\n\n/**\n * Removes `key` and its value from the list cache.\n *\n * @private\n * @name delete\n * @memberOf ListCache\n * @param {string} key The key of the value to remove.\n * @returns {boolean} Returns `true` if the entry was removed, else `false`.\n */\nfunction listCacheDelete(key) {\n  var data = this.__data__,\n      index = assocIndexOf(data, key);\n\n  if (index < 0) {\n    return false;\n  }\n  var lastIndex = data.length - 1;\n  if (index == lastIndex) {\n    data.pop();\n  } else {\n    splice.call(data, index, 1);\n  }\n  return true;\n}\n\n/**\n * Gets the list cache value for `key`.\n *\n * @private\n * @name get\n * @memberOf ListCache\n * @param {string} key The key of the value to get.\n * @returns {*} Returns the entry value.\n */\nfunction listCacheGet(key) {\n  var data = this.__data__,\n      index = assocIndexOf(data, key);\n\n  return index < 0 ? undefined : data[index][1];\n}\n\n/**\n * Checks if a list cache value for `key` exists.\n *\n * @private\n * @name has\n * @memberOf ListCache\n * @param {string} key The key of the entry to check.\n * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n */\nfunction listCacheHas(key) {\n  return assocIndexOf(this.__data__, key) > -1;\n}\n\n/**\n * Sets the list cache `key` to `value`.\n *\n * @private\n * @name set\n * @memberOf ListCache\n * @param {string} key The key of the value to set.\n * @param {*} value The value to set.\n * @returns {Object} Returns the list cache instance.\n */\nfunction listCacheSet(key, value) {\n  var data = this.__data__,\n      index = assocIndexOf(data, key);\n\n  if (index < 0) {\n    data.push([key, value]);\n  } else {\n    data[index][1] = value;\n  }\n  return this;\n}\n\n// Add methods to `ListCache`.\nListCache.prototype.clear = listCacheClear;\nListCache.prototype['delete'] = listCacheDelete;\nListCache.prototype.get = listCacheGet;\nListCache.prototype.has = listCacheHas;\nListCache.prototype.set = listCacheSet;\n\n/**\n * Creates a map cache object to store key-value pairs.\n *\n * @private\n * @constructor\n * @param {Array} [entries] The key-value pairs to cache.\n */\nfunction MapCache(entries) {\n  var index = -1,\n      length = entries ? entries.length : 0;\n\n  this.clear();\n  while (++index < length) {\n    var entry = entries[index];\n    this.set(entry[0], entry[1]);\n  }\n}\n\n/**\n * Removes all key-value entries from the map.\n *\n * @private\n * @name clear\n * @memberOf MapCache\n */\nfunction mapCacheClear() {\n  this.__data__ = {\n    'hash': new Hash,\n    'map': new (Map || ListCache),\n    'string': new Hash\n  };\n}\n\n/**\n * Removes `key` and its value from the map.\n *\n * @private\n * @name delete\n * @memberOf MapCache\n * @param {string} key The key of the value to remove.\n * @returns {boolean} Returns `true` if the entry was removed, else `false`.\n */\nfunction mapCacheDelete(key) {\n  return getMapData(this, key)['delete'](key);\n}\n\n/**\n * Gets the map value for `key`.\n *\n * @private\n * @name get\n * @memberOf MapCache\n * @param {string} key The key of the value to get.\n * @returns {*} Returns the entry value.\n */\nfunction mapCacheGet(key) {\n  return getMapData(this, key).get(key);\n}\n\n/**\n * Checks if a map value for `key` exists.\n *\n * @private\n * @name has\n * @memberOf MapCache\n * @param {string} key The key of the entry to check.\n * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n */\nfunction mapCacheHas(key) {\n  return getMapData(this, key).has(key);\n}\n\n/**\n * Sets the map `key` to `value`.\n *\n * @private\n * @name set\n * @memberOf MapCache\n * @param {string} key The key of the value to set.\n * @param {*} value The value to set.\n * @returns {Object} Returns the map cache instance.\n */\nfunction mapCacheSet(key, value) {\n  getMapData(this, key).set(key, value);\n  return this;\n}\n\n// Add methods to `MapCache`.\nMapCache.prototype.clear = mapCacheClear;\nMapCache.prototype['delete'] = mapCacheDelete;\nMapCache.prototype.get = mapCacheGet;\nMapCache.prototype.has = mapCacheHas;\nMapCache.prototype.set = mapCacheSet;\n\n/**\n * Creates a stack cache object to store key-value pairs.\n *\n * @private\n * @constructor\n * @param {Array} [entries] The key-value pairs to cache.\n */\nfunction Stack(entries) {\n  this.__data__ = new ListCache(entries);\n}\n\n/**\n * Removes all key-value entries from the stack.\n *\n * @private\n * @name clear\n * @memberOf Stack\n */\nfunction stackClear() {\n  this.__data__ = new ListCache;\n}\n\n/**\n * Removes `key` and its value from the stack.\n *\n * @private\n * @name delete\n * @memberOf Stack\n * @param {string} key The key of the value to remove.\n * @returns {boolean} Returns `true` if the entry was removed, else `false`.\n */\nfunction stackDelete(key) {\n  return this.__data__['delete'](key);\n}\n\n/**\n * Gets the stack value for `key`.\n *\n * @private\n * @name get\n * @memberOf Stack\n * @param {string} key The key of the value to get.\n * @returns {*} Returns the entry value.\n */\nfunction stackGet(key) {\n  return this.__data__.get(key);\n}\n\n/**\n * Checks if a stack value for `key` exists.\n *\n * @private\n * @name has\n * @memberOf Stack\n * @param {string} key The key of the entry to check.\n * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n */\nfunction stackHas(key) {\n  return this.__data__.has(key);\n}\n\n/**\n * Sets the stack `key` to `value`.\n *\n * @private\n * @name set\n * @memberOf Stack\n * @param {string} key The key of the value to set.\n * @param {*} value The value to set.\n * @returns {Object} Returns the stack cache instance.\n */\nfunction stackSet(key, value) {\n  var cache = this.__data__;\n  if (cache instanceof ListCache) {\n    var pairs = cache.__data__;\n    if (!Map || (pairs.length < LARGE_ARRAY_SIZE - 1)) {\n      pairs.push([key, value]);\n      return this;\n    }\n    cache = this.__data__ = new MapCache(pairs);\n  }\n  cache.set(key, value);\n  return this;\n}\n\n// Add methods to `Stack`.\nStack.prototype.clear = stackClear;\nStack.prototype['delete'] = stackDelete;\nStack.prototype.get = stackGet;\nStack.prototype.has = stackHas;\nStack.prototype.set = stackSet;\n\n/**\n * Creates an array of the enumerable property names of the array-like `value`.\n *\n * @private\n * @param {*} value The value to query.\n * @param {boolean} inherited Specify returning inherited property names.\n * @returns {Array} Returns the array of property names.\n */\nfunction arrayLikeKeys(value, inherited) {\n  // Safari 8.1 makes `arguments.callee` enumerable in strict mode.\n  // Safari 9 makes `arguments.length` enumerable in strict mode.\n  var result = (isArray(value) || isArguments(value))\n    ? baseTimes(value.length, String)\n    : [];\n\n  var length = result.length,\n      skipIndexes = !!length;\n\n  for (var key in value) {\n    if ((inherited || hasOwnProperty.call(value, key)) &&\n        !(skipIndexes && (key == 'length' || isIndex(key, length)))) {\n      result.push(key);\n    }\n  }\n  return result;\n}\n\n/**\n * Assigns `value` to `key` of `object` if the existing value is not equivalent\n * using [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\n * for equality comparisons.\n *\n * @private\n * @param {Object} object The object to modify.\n * @param {string} key The key of the property to assign.\n * @param {*} value The value to assign.\n */\nfunction assignValue(object, key, value) {\n  var objValue = object[key];\n  if (!(hasOwnProperty.call(object, key) && eq(objValue, value)) ||\n      (value === undefined && !(key in object))) {\n    object[key] = value;\n  }\n}\n\n/**\n * Gets the index at which the `key` is found in `array` of key-value pairs.\n *\n * @private\n * @param {Array} array The array to inspect.\n * @param {*} key The key to search for.\n * @returns {number} Returns the index of the matched value, else `-1`.\n */\nfunction assocIndexOf(array, key) {\n  var length = array.length;\n  while (length--) {\n    if (eq(array[length][0], key)) {\n      return length;\n    }\n  }\n  return -1;\n}\n\n/**\n * The base implementation of `_.assign` without support for multiple sources\n * or `customizer` functions.\n *\n * @private\n * @param {Object} object The destination object.\n * @param {Object} source The source object.\n * @returns {Object} Returns `object`.\n */\nfunction baseAssign(object, source) {\n  return object && copyObject(source, keys(source), object);\n}\n\n/**\n * The base implementation of `_.clone` and `_.cloneDeep` which tracks\n * traversed objects.\n *\n * @private\n * @param {*} value The value to clone.\n * @param {boolean} [isDeep] Specify a deep clone.\n * @param {boolean} [isFull] Specify a clone including symbols.\n * @param {Function} [customizer] The function to customize cloning.\n * @param {string} [key] The key of `value`.\n * @param {Object} [object] The parent object of `value`.\n * @param {Object} [stack] Tracks traversed objects and their clone counterparts.\n * @returns {*} Returns the cloned value.\n */\nfunction baseClone(value, isDeep, isFull, customizer, key, object, stack) {\n  var result;\n  if (customizer) {\n    result = object ? customizer(value, key, object, stack) : customizer(value);\n  }\n  if (result !== undefined) {\n    return result;\n  }\n  if (!isObject(value)) {\n    return value;\n  }\n  var isArr = isArray(value);\n  if (isArr) {\n    result = initCloneArray(value);\n    if (!isDeep) {\n      return copyArray(value, result);\n    }\n  } else {\n    var tag = getTag(value),\n        isFunc = tag == funcTag || tag == genTag;\n\n    if (isBuffer(value)) {\n      return cloneBuffer(value, isDeep);\n    }\n    if (tag == objectTag || tag == argsTag || (isFunc && !object)) {\n      if (isHostObject(value)) {\n        return object ? value : {};\n      }\n      result = initCloneObject(isFunc ? {} : value);\n      if (!isDeep) {\n        return copySymbols(value, baseAssign(result, value));\n      }\n    } else {\n      if (!cloneableTags[tag]) {\n        return object ? value : {};\n      }\n      result = initCloneByTag(value, tag, baseClone, isDeep);\n    }\n  }\n  // Check for circular references and return its corresponding clone.\n  stack || (stack = new Stack);\n  var stacked = stack.get(value);\n  if (stacked) {\n    return stacked;\n  }\n  stack.set(value, result);\n\n  if (!isArr) {\n    var props = isFull ? getAllKeys(value) : keys(value);\n  }\n  arrayEach(props || value, function(subValue, key) {\n    if (props) {\n      key = subValue;\n      subValue = value[key];\n    }\n    // Recursively populate clone (susceptible to call stack limits).\n    assignValue(result, key, baseClone(subValue, isDeep, isFull, customizer, key, value, stack));\n  });\n  return result;\n}\n\n/**\n * The base implementation of `_.create` without support for assigning\n * properties to the created object.\n *\n * @private\n * @param {Object} prototype The object to inherit from.\n * @returns {Object} Returns the new object.\n */\nfunction baseCreate(proto) {\n  return isObject(proto) ? objectCreate(proto) : {};\n}\n\n/**\n * The base implementation of `getAllKeys` and `getAllKeysIn` which uses\n * `keysFunc` and `symbolsFunc` to get the enumerable property names and\n * symbols of `object`.\n *\n * @private\n * @param {Object} object The object to query.\n * @param {Function} keysFunc The function to get the keys of `object`.\n * @param {Function} symbolsFunc The function to get the symbols of `object`.\n * @returns {Array} Returns the array of property names and symbols.\n */\nfunction baseGetAllKeys(object, keysFunc, symbolsFunc) {\n  var result = keysFunc(object);\n  return isArray(object) ? result : arrayPush(result, symbolsFunc(object));\n}\n\n/**\n * The base implementation of `getTag`.\n *\n * @private\n * @param {*} value The value to query.\n * @returns {string} Returns the `toStringTag`.\n */\nfunction baseGetTag(value) {\n  return objectToString.call(value);\n}\n\n/**\n * The base implementation of `_.isNative` without bad shim checks.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a native function,\n *  else `false`.\n */\nfunction baseIsNative(value) {\n  if (!isObject(value) || isMasked(value)) {\n    return false;\n  }\n  var pattern = (isFunction(value) || isHostObject(value)) ? reIsNative : reIsHostCtor;\n  return pattern.test(toSource(value));\n}\n\n/**\n * The base implementation of `_.keys` which doesn't treat sparse arrays as dense.\n *\n * @private\n * @param {Object} object The object to query.\n * @returns {Array} Returns the array of property names.\n */\nfunction baseKeys(object) {\n  if (!isPrototype(object)) {\n    return nativeKeys(object);\n  }\n  var result = [];\n  for (var key in Object(object)) {\n    if (hasOwnProperty.call(object, key) && key != 'constructor') {\n      result.push(key);\n    }\n  }\n  return result;\n}\n\n/**\n * Creates a clone of  `buffer`.\n *\n * @private\n * @param {Buffer} buffer The buffer to clone.\n * @param {boolean} [isDeep] Specify a deep clone.\n * @returns {Buffer} Returns the cloned buffer.\n */\nfunction cloneBuffer(buffer, isDeep) {\n  if (isDeep) {\n    return buffer.slice();\n  }\n  var result = new buffer.constructor(buffer.length);\n  buffer.copy(result);\n  return result;\n}\n\n/**\n * Creates a clone of `arrayBuffer`.\n *\n * @private\n * @param {ArrayBuffer} arrayBuffer The array buffer to clone.\n * @returns {ArrayBuffer} Returns the cloned array buffer.\n */\nfunction cloneArrayBuffer(arrayBuffer) {\n  var result = new arrayBuffer.constructor(arrayBuffer.byteLength);\n  new Uint8Array(result).set(new Uint8Array(arrayBuffer));\n  return result;\n}\n\n/**\n * Creates a clone of `dataView`.\n *\n * @private\n * @param {Object} dataView The data view to clone.\n * @param {boolean} [isDeep] Specify a deep clone.\n * @returns {Object} Returns the cloned data view.\n */\nfunction cloneDataView(dataView, isDeep) {\n  var buffer = isDeep ? cloneArrayBuffer(dataView.buffer) : dataView.buffer;\n  return new dataView.constructor(buffer, dataView.byteOffset, dataView.byteLength);\n}\n\n/**\n * Creates a clone of `map`.\n *\n * @private\n * @param {Object} map The map to clone.\n * @param {Function} cloneFunc The function to clone values.\n * @param {boolean} [isDeep] Specify a deep clone.\n * @returns {Object} Returns the cloned map.\n */\nfunction cloneMap(map, isDeep, cloneFunc) {\n  var array = isDeep ? cloneFunc(mapToArray(map), true) : mapToArray(map);\n  return arrayReduce(array, addMapEntry, new map.constructor);\n}\n\n/**\n * Creates a clone of `regexp`.\n *\n * @private\n * @param {Object} regexp The regexp to clone.\n * @returns {Object} Returns the cloned regexp.\n */\nfunction cloneRegExp(regexp) {\n  var result = new regexp.constructor(regexp.source, reFlags.exec(regexp));\n  result.lastIndex = regexp.lastIndex;\n  return result;\n}\n\n/**\n * Creates a clone of `set`.\n *\n * @private\n * @param {Object} set The set to clone.\n * @param {Function} cloneFunc The function to clone values.\n * @param {boolean} [isDeep] Specify a deep clone.\n * @returns {Object} Returns the cloned set.\n */\nfunction cloneSet(set, isDeep, cloneFunc) {\n  var array = isDeep ? cloneFunc(setToArray(set), true) : setToArray(set);\n  return arrayReduce(array, addSetEntry, new set.constructor);\n}\n\n/**\n * Creates a clone of the `symbol` object.\n *\n * @private\n * @param {Object} symbol The symbol object to clone.\n * @returns {Object} Returns the cloned symbol object.\n */\nfunction cloneSymbol(symbol) {\n  return symbolValueOf ? Object(symbolValueOf.call(symbol)) : {};\n}\n\n/**\n * Creates a clone of `typedArray`.\n *\n * @private\n * @param {Object} typedArray The typed array to clone.\n * @param {boolean} [isDeep] Specify a deep clone.\n * @returns {Object} Returns the cloned typed array.\n */\nfunction cloneTypedArray(typedArray, isDeep) {\n  var buffer = isDeep ? cloneArrayBuffer(typedArray.buffer) : typedArray.buffer;\n  return new typedArray.constructor(buffer, typedArray.byteOffset, typedArray.length);\n}\n\n/**\n * Copies the values of `source` to `array`.\n *\n * @private\n * @param {Array} source The array to copy values from.\n * @param {Array} [array=[]] The array to copy values to.\n * @returns {Array} Returns `array`.\n */\nfunction copyArray(source, array) {\n  var index = -1,\n      length = source.length;\n\n  array || (array = Array(length));\n  while (++index < length) {\n    array[index] = source[index];\n  }\n  return array;\n}\n\n/**\n * Copies properties of `source` to `object`.\n *\n * @private\n * @param {Object} source The object to copy properties from.\n * @param {Array} props The property identifiers to copy.\n * @param {Object} [object={}] The object to copy properties to.\n * @param {Function} [customizer] The function to customize copied values.\n * @returns {Object} Returns `object`.\n */\nfunction copyObject(source, props, object, customizer) {\n  object || (object = {});\n\n  var index = -1,\n      length = props.length;\n\n  while (++index < length) {\n    var key = props[index];\n\n    var newValue = customizer\n      ? customizer(object[key], source[key], key, object, source)\n      : undefined;\n\n    assignValue(object, key, newValue === undefined ? source[key] : newValue);\n  }\n  return object;\n}\n\n/**\n * Copies own symbol properties of `source` to `object`.\n *\n * @private\n * @param {Object} source The object to copy symbols from.\n * @param {Object} [object={}] The object to copy symbols to.\n * @returns {Object} Returns `object`.\n */\nfunction copySymbols(source, object) {\n  return copyObject(source, getSymbols(source), object);\n}\n\n/**\n * Creates an array of own enumerable property names and symbols of `object`.\n *\n * @private\n * @param {Object} object The object to query.\n * @returns {Array} Returns the array of property names and symbols.\n */\nfunction getAllKeys(object) {\n  return baseGetAllKeys(object, keys, getSymbols);\n}\n\n/**\n * Gets the data for `map`.\n *\n * @private\n * @param {Object} map The map to query.\n * @param {string} key The reference key.\n * @returns {*} Returns the map data.\n */\nfunction getMapData(map, key) {\n  var data = map.__data__;\n  return isKeyable(key)\n    ? data[typeof key == 'string' ? 'string' : 'hash']\n    : data.map;\n}\n\n/**\n * Gets the native function at `key` of `object`.\n *\n * @private\n * @param {Object} object The object to query.\n * @param {string} key The key of the method to get.\n * @returns {*} Returns the function if it's native, else `undefined`.\n */\nfunction getNative(object, key) {\n  var value = getValue(object, key);\n  return baseIsNative(value) ? value : undefined;\n}\n\n/**\n * Creates an array of the own enumerable symbol properties of `object`.\n *\n * @private\n * @param {Object} object The object to query.\n * @returns {Array} Returns the array of symbols.\n */\nvar getSymbols = nativeGetSymbols ? overArg(nativeGetSymbols, Object) : stubArray;\n\n/**\n * Gets the `toStringTag` of `value`.\n *\n * @private\n * @param {*} value The value to query.\n * @returns {string} Returns the `toStringTag`.\n */\nvar getTag = baseGetTag;\n\n// Fallback for data views, maps, sets, and weak maps in IE 11,\n// for data views in Edge < 14, and promises in Node.js.\nif ((DataView && getTag(new DataView(new ArrayBuffer(1))) != dataViewTag) ||\n    (Map && getTag(new Map) != mapTag) ||\n    (Promise && getTag(Promise.resolve()) != promiseTag) ||\n    (Set && getTag(new Set) != setTag) ||\n    (WeakMap && getTag(new WeakMap) != weakMapTag)) {\n  getTag = function(value) {\n    var result = objectToString.call(value),\n        Ctor = result == objectTag ? value.constructor : undefined,\n        ctorString = Ctor ? toSource(Ctor) : undefined;\n\n    if (ctorString) {\n      switch (ctorString) {\n        case dataViewCtorString: return dataViewTag;\n        case mapCtorString: return mapTag;\n        case promiseCtorString: return promiseTag;\n        case setCtorString: return setTag;\n        case weakMapCtorString: return weakMapTag;\n      }\n    }\n    return result;\n  };\n}\n\n/**\n * Initializes an array clone.\n *\n * @private\n * @param {Array} array The array to clone.\n * @returns {Array} Returns the initialized clone.\n */\nfunction initCloneArray(array) {\n  var length = array.length,\n      result = array.constructor(length);\n\n  // Add properties assigned by `RegExp#exec`.\n  if (length && typeof array[0] == 'string' && hasOwnProperty.call(array, 'index')) {\n    result.index = array.index;\n    result.input = array.input;\n  }\n  return result;\n}\n\n/**\n * Initializes an object clone.\n *\n * @private\n * @param {Object} object The object to clone.\n * @returns {Object} Returns the initialized clone.\n */\nfunction initCloneObject(object) {\n  return (typeof object.constructor == 'function' && !isPrototype(object))\n    ? baseCreate(getPrototype(object))\n    : {};\n}\n\n/**\n * Initializes an object clone based on its `toStringTag`.\n *\n * **Note:** This function only supports cloning values with tags of\n * `Boolean`, `Date`, `Error`, `Number`, `RegExp`, or `String`.\n *\n * @private\n * @param {Object} object The object to clone.\n * @param {string} tag The `toStringTag` of the object to clone.\n * @param {Function} cloneFunc The function to clone values.\n * @param {boolean} [isDeep] Specify a deep clone.\n * @returns {Object} Returns the initialized clone.\n */\nfunction initCloneByTag(object, tag, cloneFunc, isDeep) {\n  var Ctor = object.constructor;\n  switch (tag) {\n    case arrayBufferTag:\n      return cloneArrayBuffer(object);\n\n    case boolTag:\n    case dateTag:\n      return new Ctor(+object);\n\n    case dataViewTag:\n      return cloneDataView(object, isDeep);\n\n    case float32Tag: case float64Tag:\n    case int8Tag: case int16Tag: case int32Tag:\n    case uint8Tag: case uint8ClampedTag: case uint16Tag: case uint32Tag:\n      return cloneTypedArray(object, isDeep);\n\n    case mapTag:\n      return cloneMap(object, isDeep, cloneFunc);\n\n    case numberTag:\n    case stringTag:\n      return new Ctor(object);\n\n    case regexpTag:\n      return cloneRegExp(object);\n\n    case setTag:\n      return cloneSet(object, isDeep, cloneFunc);\n\n    case symbolTag:\n      return cloneSymbol(object);\n  }\n}\n\n/**\n * Checks if `value` is a valid array-like index.\n *\n * @private\n * @param {*} value The value to check.\n * @param {number} [length=MAX_SAFE_INTEGER] The upper bounds of a valid index.\n * @returns {boolean} Returns `true` if `value` is a valid index, else `false`.\n */\nfunction isIndex(value, length) {\n  length = length == null ? MAX_SAFE_INTEGER : length;\n  return !!length &&\n    (typeof value == 'number' || reIsUint.test(value)) &&\n    (value > -1 && value % 1 == 0 && value < length);\n}\n\n/**\n * Checks if `value` is suitable for use as unique object key.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is suitable, else `false`.\n */\nfunction isKeyable(value) {\n  var type = typeof value;\n  return (type == 'string' || type == 'number' || type == 'symbol' || type == 'boolean')\n    ? (value !== '__proto__')\n    : (value === null);\n}\n\n/**\n * Checks if `func` has its source masked.\n *\n * @private\n * @param {Function} func The function to check.\n * @returns {boolean} Returns `true` if `func` is masked, else `false`.\n */\nfunction isMasked(func) {\n  return !!maskSrcKey && (maskSrcKey in func);\n}\n\n/**\n * Checks if `value` is likely a prototype object.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a prototype, else `false`.\n */\nfunction isPrototype(value) {\n  var Ctor = value && value.constructor,\n      proto = (typeof Ctor == 'function' && Ctor.prototype) || objectProto;\n\n  return value === proto;\n}\n\n/**\n * Converts `func` to its source code.\n *\n * @private\n * @param {Function} func The function to process.\n * @returns {string} Returns the source code.\n */\nfunction toSource(func) {\n  if (func != null) {\n    try {\n      return funcToString.call(func);\n    } catch (e) {}\n    try {\n      return (func + '');\n    } catch (e) {}\n  }\n  return '';\n}\n\n/**\n * Creates a shallow clone of `value`.\n *\n * **Note:** This method is loosely based on the\n * [structured clone algorithm](https://mdn.io/Structured_clone_algorithm)\n * and supports cloning arrays, array buffers, booleans, date objects, maps,\n * numbers, `Object` objects, regexes, sets, strings, symbols, and typed\n * arrays. The own enumerable properties of `arguments` objects are cloned\n * as plain objects. An empty object is returned for uncloneable values such\n * as error objects, functions, DOM nodes, and WeakMaps.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to clone.\n * @returns {*} Returns the cloned value.\n * @see _.cloneDeep\n * @example\n *\n * var objects = [{ 'a': 1 }, { 'b': 2 }];\n *\n * var shallow = _.clone(objects);\n * console.log(shallow[0] === objects[0]);\n * // => true\n */\nfunction clone(value) {\n  return baseClone(value, false, true);\n}\n\n/**\n * Performs a\n * [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\n * comparison between two values to determine if they are equivalent.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to compare.\n * @param {*} other The other value to compare.\n * @returns {boolean} Returns `true` if the values are equivalent, else `false`.\n * @example\n *\n * var object = { 'a': 1 };\n * var other = { 'a': 1 };\n *\n * _.eq(object, object);\n * // => true\n *\n * _.eq(object, other);\n * // => false\n *\n * _.eq('a', 'a');\n * // => true\n *\n * _.eq('a', Object('a'));\n * // => false\n *\n * _.eq(NaN, NaN);\n * // => true\n */\nfunction eq(value, other) {\n  return value === other || (value !== value && other !== other);\n}\n\n/**\n * Checks if `value` is likely an `arguments` object.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an `arguments` object,\n *  else `false`.\n * @example\n *\n * _.isArguments(function() { return arguments; }());\n * // => true\n *\n * _.isArguments([1, 2, 3]);\n * // => false\n */\nfunction isArguments(value) {\n  // Safari 8.1 makes `arguments.callee` enumerable in strict mode.\n  return isArrayLikeObject(value) && hasOwnProperty.call(value, 'callee') &&\n    (!propertyIsEnumerable.call(value, 'callee') || objectToString.call(value) == argsTag);\n}\n\n/**\n * Checks if `value` is classified as an `Array` object.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an array, else `false`.\n * @example\n *\n * _.isArray([1, 2, 3]);\n * // => true\n *\n * _.isArray(document.body.children);\n * // => false\n *\n * _.isArray('abc');\n * // => false\n *\n * _.isArray(_.noop);\n * // => false\n */\nvar isArray = Array.isArray;\n\n/**\n * Checks if `value` is array-like. A value is considered array-like if it's\n * not a function and has a `value.length` that's an integer greater than or\n * equal to `0` and less than or equal to `Number.MAX_SAFE_INTEGER`.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is array-like, else `false`.\n * @example\n *\n * _.isArrayLike([1, 2, 3]);\n * // => true\n *\n * _.isArrayLike(document.body.children);\n * // => true\n *\n * _.isArrayLike('abc');\n * // => true\n *\n * _.isArrayLike(_.noop);\n * // => false\n */\nfunction isArrayLike(value) {\n  return value != null && isLength(value.length) && !isFunction(value);\n}\n\n/**\n * This method is like `_.isArrayLike` except that it also checks if `value`\n * is an object.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an array-like object,\n *  else `false`.\n * @example\n *\n * _.isArrayLikeObject([1, 2, 3]);\n * // => true\n *\n * _.isArrayLikeObject(document.body.children);\n * // => true\n *\n * _.isArrayLikeObject('abc');\n * // => false\n *\n * _.isArrayLikeObject(_.noop);\n * // => false\n */\nfunction isArrayLikeObject(value) {\n  return isObjectLike(value) && isArrayLike(value);\n}\n\n/**\n * Checks if `value` is a buffer.\n *\n * @static\n * @memberOf _\n * @since 4.3.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a buffer, else `false`.\n * @example\n *\n * _.isBuffer(new Buffer(2));\n * // => true\n *\n * _.isBuffer(new Uint8Array(2));\n * // => false\n */\nvar isBuffer = nativeIsBuffer || stubFalse;\n\n/**\n * Checks if `value` is classified as a `Function` object.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a function, else `false`.\n * @example\n *\n * _.isFunction(_);\n * // => true\n *\n * _.isFunction(/abc/);\n * // => false\n */\nfunction isFunction(value) {\n  // The use of `Object#toString` avoids issues with the `typeof` operator\n  // in Safari 8-9 which returns 'object' for typed array and other constructors.\n  var tag = isObject(value) ? objectToString.call(value) : '';\n  return tag == funcTag || tag == genTag;\n}\n\n/**\n * Checks if `value` is a valid array-like length.\n *\n * **Note:** This method is loosely based on\n * [`ToLength`](http://ecma-international.org/ecma-262/7.0/#sec-tolength).\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a valid length, else `false`.\n * @example\n *\n * _.isLength(3);\n * // => true\n *\n * _.isLength(Number.MIN_VALUE);\n * // => false\n *\n * _.isLength(Infinity);\n * // => false\n *\n * _.isLength('3');\n * // => false\n */\nfunction isLength(value) {\n  return typeof value == 'number' &&\n    value > -1 && value % 1 == 0 && value <= MAX_SAFE_INTEGER;\n}\n\n/**\n * Checks if `value` is the\n * [language type](http://www.ecma-international.org/ecma-262/7.0/#sec-ecmascript-language-types)\n * of `Object`. (e.g. arrays, functions, objects, regexes, `new Number(0)`, and `new String('')`)\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an object, else `false`.\n * @example\n *\n * _.isObject({});\n * // => true\n *\n * _.isObject([1, 2, 3]);\n * // => true\n *\n * _.isObject(_.noop);\n * // => true\n *\n * _.isObject(null);\n * // => false\n */\nfunction isObject(value) {\n  var type = typeof value;\n  return !!value && (type == 'object' || type == 'function');\n}\n\n/**\n * Checks if `value` is object-like. A value is object-like if it's not `null`\n * and has a `typeof` result of \"object\".\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is object-like, else `false`.\n * @example\n *\n * _.isObjectLike({});\n * // => true\n *\n * _.isObjectLike([1, 2, 3]);\n * // => true\n *\n * _.isObjectLike(_.noop);\n * // => false\n *\n * _.isObjectLike(null);\n * // => false\n */\nfunction isObjectLike(value) {\n  return !!value && typeof value == 'object';\n}\n\n/**\n * Creates an array of the own enumerable property names of `object`.\n *\n * **Note:** Non-object values are coerced to objects. See the\n * [ES spec](http://ecma-international.org/ecma-262/7.0/#sec-object.keys)\n * for more details.\n *\n * @static\n * @since 0.1.0\n * @memberOf _\n * @category Object\n * @param {Object} object The object to query.\n * @returns {Array} Returns the array of property names.\n * @example\n *\n * function Foo() {\n *   this.a = 1;\n *   this.b = 2;\n * }\n *\n * Foo.prototype.c = 3;\n *\n * _.keys(new Foo);\n * // => ['a', 'b'] (iteration order is not guaranteed)\n *\n * _.keys('hi');\n * // => ['0', '1']\n */\nfunction keys(object) {\n  return isArrayLike(object) ? arrayLikeKeys(object) : baseKeys(object);\n}\n\n/**\n * This method returns a new empty array.\n *\n * @static\n * @memberOf _\n * @since 4.13.0\n * @category Util\n * @returns {Array} Returns the new empty array.\n * @example\n *\n * var arrays = _.times(2, _.stubArray);\n *\n * console.log(arrays);\n * // => [[], []]\n *\n * console.log(arrays[0] === arrays[1]);\n * // => false\n */\nfunction stubArray() {\n  return [];\n}\n\n/**\n * This method returns `false`.\n *\n * @static\n * @memberOf _\n * @since 4.13.0\n * @category Util\n * @returns {boolean} Returns `false`.\n * @example\n *\n * _.times(2, _.stubFalse);\n * // => [false, false]\n */\nfunction stubFalse() {\n  return false;\n}\n\nmodule.exports = clone;\n","/**\n * @license\n * Copyright 2019 Google LLC\n * SPDX-License-Identifier: BSD-3-Clause\n */\n\nconst NODE_MODE = false;\nconst global = NODE_MODE ? globalThis : window;\n\n/**\n * Whether the current browser supports `adoptedStyleSheets`.\n */\nexport const supportsAdoptingStyleSheets =\n  global.ShadowRoot &&\n  (global.ShadyCSS === undefined || global.ShadyCSS.nativeShadow) &&\n  'adoptedStyleSheets' in Document.prototype &&\n  'replace' in CSSStyleSheet.prototype;\n\n/**\n * A CSSResult or native CSSStyleSheet.\n *\n * In browsers that support constructible CSS style sheets, CSSStyleSheet\n * object can be used for styling along side CSSResult from the `css`\n * template tag.\n */\nexport type CSSResultOrNative = CSSResult | CSSStyleSheet;\n\nexport type CSSResultArray = Array<CSSResultOrNative | CSSResultArray>;\n\n/**\n * A single CSSResult, CSSStyleSheet, or an array or nested arrays of those.\n */\nexport type CSSResultGroup = CSSResultOrNative | CSSResultArray;\n\nconst constructionToken = Symbol();\n\nconst cssTagCache = new WeakMap<TemplateStringsArray, CSSStyleSheet>();\n\n/**\n * A container for a string of CSS text, that may be used to create a CSSStyleSheet.\n *\n * CSSResult is the return value of `css`-tagged template literals and\n * `unsafeCSS()`. In order to ensure that CSSResults are only created via the\n * `css` tag and `unsafeCSS()`, CSSResult cannot be constructed directly.\n */\nexport class CSSResult {\n  // This property needs to remain unminified.\n  ['_$cssResult$'] = true;\n  readonly cssText: string;\n  private _styleSheet?: CSSStyleSheet;\n  private _strings: TemplateStringsArray | undefined;\n\n  private constructor(\n    cssText: string,\n    strings: TemplateStringsArray | undefined,\n    safeToken: symbol\n  ) {\n    if (safeToken !== constructionToken) {\n      throw new Error(\n        'CSSResult is not constructable. Use `unsafeCSS` or `css` instead.'\n      );\n    }\n    this.cssText = cssText;\n    this._strings = strings;\n  }\n\n  // This is a getter so that it's lazy. In practice, this means stylesheets\n  // are not created until the first element instance is made.\n  get styleSheet(): CSSStyleSheet | undefined {\n    // If `supportsAdoptingStyleSheets` is true then we assume CSSStyleSheet is\n    // constructable.\n    let styleSheet = this._styleSheet;\n    const strings = this._strings;\n    if (supportsAdoptingStyleSheets && styleSheet === undefined) {\n      const cacheable = strings !== undefined && strings.length === 1;\n      if (cacheable) {\n        styleSheet = cssTagCache.get(strings);\n      }\n      if (styleSheet === undefined) {\n        (this._styleSheet = styleSheet = new CSSStyleSheet()).replaceSync(\n          this.cssText\n        );\n        if (cacheable) {\n          cssTagCache.set(strings, styleSheet);\n        }\n      }\n    }\n    return styleSheet;\n  }\n\n  toString(): string {\n    return this.cssText;\n  }\n}\n\ntype ConstructableCSSResult = CSSResult & {\n  new (\n    cssText: string,\n    strings: TemplateStringsArray | undefined,\n    safeToken: symbol\n  ): CSSResult;\n};\n\nconst textFromCSSResult = (value: CSSResultGroup | number) => {\n  // This property needs to remain unminified.\n  if ((value as CSSResult)['_$cssResult$'] === true) {\n    return (value as CSSResult).cssText;\n  } else if (typeof value === 'number') {\n    return value;\n  } else {\n    throw new Error(\n      `Value passed to 'css' function must be a 'css' function result: ` +\n        `${value}. Use 'unsafeCSS' to pass non-literal values, but take care ` +\n        `to ensure page security.`\n    );\n  }\n};\n\n/**\n * Wrap a value for interpolation in a {@linkcode css} tagged template literal.\n *\n * This is unsafe because untrusted CSS text can be used to phone home\n * or exfiltrate data to an attacker controlled site. Take care to only use\n * this with trusted input.\n */\nexport const unsafeCSS = (value: unknown) =>\n  new (CSSResult as ConstructableCSSResult)(\n    typeof value === 'string' ? value : String(value),\n    undefined,\n    constructionToken\n  );\n\n/**\n * A template literal tag which can be used with LitElement's\n * {@linkcode LitElement.styles} property to set element styles.\n *\n * For security reasons, only literal string values and number may be used in\n * embedded expressions. To incorporate non-literal values {@linkcode unsafeCSS}\n * may be used inside an expression.\n */\nexport const css = (\n  strings: TemplateStringsArray,\n  ...values: (CSSResultGroup | number)[]\n): CSSResult => {\n  const cssText =\n    strings.length === 1\n      ? strings[0]\n      : values.reduce(\n          (acc, v, idx) => acc + textFromCSSResult(v) + strings[idx + 1],\n          strings[0]\n        );\n  return new (CSSResult as ConstructableCSSResult)(\n    cssText,\n    strings,\n    constructionToken\n  );\n};\n\n/**\n * Applies the given styles to a `shadowRoot`. When Shadow DOM is\n * available but `adoptedStyleSheets` is not, styles are appended to the\n * `shadowRoot` to [mimic spec behavior](https://wicg.github.io/construct-stylesheets/#using-constructed-stylesheets).\n * Note, when shimming is used, any styles that are subsequently placed into\n * the shadowRoot should be placed *before* any shimmed adopted styles. This\n * will match spec behavior that gives adopted sheets precedence over styles in\n * shadowRoot.\n */\nexport const adoptStyles = (\n  renderRoot: ShadowRoot,\n  styles: Array<CSSResultOrNative>\n) => {\n  if (supportsAdoptingStyleSheets) {\n    (renderRoot as ShadowRoot).adoptedStyleSheets = styles.map((s) =>\n      s instanceof CSSStyleSheet ? s : s.styleSheet!\n    );\n  } else {\n    styles.forEach((s) => {\n      const style = document.createElement('style');\n      // eslint-disable-next-line @typescript-eslint/no-explicit-any\n      const nonce = (global as any)['litNonce'];\n      if (nonce !== undefined) {\n        style.setAttribute('nonce', nonce);\n      }\n      style.textContent = (s as CSSResult).cssText;\n      renderRoot.appendChild(style);\n    });\n  }\n};\n\nconst cssResultFromStyleSheet = (sheet: CSSStyleSheet) => {\n  let cssText = '';\n  for (const rule of sheet.cssRules) {\n    cssText += rule.cssText;\n  }\n  return unsafeCSS(cssText);\n};\n\nexport const getCompatibleStyle =\n  supportsAdoptingStyleSheets ||\n  (NODE_MODE && global.CSSStyleSheet === undefined)\n    ? (s: CSSResultOrNative) => s\n    : (s: CSSResultOrNative) =>\n        s instanceof CSSStyleSheet ? cssResultFromStyleSheet(s) : s;\n","/**\n * @license\n * Copyright 2017 Google LLC\n * SPDX-License-Identifier: BSD-3-Clause\n */\n\n/**\n * Use this module if you want to create your own base class extending\n * {@link ReactiveElement}.\n * @packageDocumentation\n */\n\nimport {\n  getCompatibleStyle,\n  adoptStyles,\n  CSSResultGroup,\n  CSSResultOrNative,\n} from './css-tag.js';\nimport type {\n  ReactiveController,\n  ReactiveControllerHost,\n} from './reactive-controller.js';\n\nexport * from './css-tag.js';\nexport type {\n  ReactiveController,\n  ReactiveControllerHost,\n} from './reactive-controller.js';\n\nconst NODE_MODE = false;\nconst global = NODE_MODE ? globalThis : window;\n\nif (NODE_MODE) {\n  global.customElements ??= {\n    define() {},\n  } as unknown as CustomElementRegistry;\n}\n\nconst DEV_MODE = true;\n\nlet requestUpdateThenable: (name: string) => {\n  then: (\n    onfulfilled?: (value: boolean) => void,\n    _onrejected?: () => void\n  ) => void;\n};\n\nlet issueWarning: (code: string, warning: string) => void;\n\nconst trustedTypes = (global as unknown as {trustedTypes?: {emptyScript: ''}})\n  .trustedTypes;\n\n// Temporary workaround for https://crbug.com/993268\n// Currently, any attribute starting with \"on\" is considered to be a\n// TrustedScript source. Such boolean attributes must be set to the equivalent\n// trusted emptyScript value.\nconst emptyStringForBooleanAttribute = trustedTypes\n  ? (trustedTypes.emptyScript as unknown as '')\n  : '';\n\nconst polyfillSupport = DEV_MODE\n  ? global.reactiveElementPolyfillSupportDevMode\n  : global.reactiveElementPolyfillSupport;\n\nif (DEV_MODE) {\n  // Ensure warnings are issued only 1x, even if multiple versions of Lit\n  // are loaded.\n  const issuedWarnings: Set<string | undefined> = (global.litIssuedWarnings ??=\n    new Set());\n\n  // Issue a warning, if we haven't already.\n  issueWarning = (code: string, warning: string) => {\n    warning += ` See https://lit.dev/msg/${code} for more information.`;\n    if (!issuedWarnings.has(warning)) {\n      console.warn(warning);\n      issuedWarnings.add(warning);\n    }\n  };\n\n  issueWarning(\n    'dev-mode',\n    `Lit is in dev mode. Not recommended for production!`\n  );\n\n  // Issue polyfill support warning.\n  if (global.ShadyDOM?.inUse && polyfillSupport === undefined) {\n    issueWarning(\n      'polyfill-support-missing',\n      `Shadow DOM is being polyfilled via \\`ShadyDOM\\` but ` +\n        `the \\`polyfill-support\\` module has not been loaded.`\n    );\n  }\n\n  requestUpdateThenable = (name) => ({\n    then: (\n      onfulfilled?: (value: boolean) => void,\n      _onrejected?: () => void\n    ) => {\n      issueWarning(\n        'request-update-promise',\n        `The \\`requestUpdate\\` method should no longer return a Promise but ` +\n          `does so on \\`${name}\\`. Use \\`updateComplete\\` instead.`\n      );\n      if (onfulfilled !== undefined) {\n        onfulfilled(false);\n      }\n    },\n  });\n}\n\n/**\n * Contains types that are part of the unstable debug API.\n *\n * Everything in this API is not stable and may change or be removed in the future,\n * even on patch releases.\n */\n// eslint-disable-next-line @typescript-eslint/no-namespace\nexport namespace ReactiveUnstable {\n  /**\n   * When Lit is running in dev mode and `window.emitLitDebugLogEvents` is true,\n   * we will emit 'lit-debug' events to window, with live details about the update and render\n   * lifecycle. These can be useful for writing debug tooling and visualizations.\n   *\n   * Please be aware that running with window.emitLitDebugLogEvents has performance overhead,\n   * making certain operations that are normally very cheap (like a no-op render) much slower,\n   * because we must copy data and dispatch events.\n   */\n  // eslint-disable-next-line @typescript-eslint/no-namespace\n  export namespace DebugLog {\n    export type Entry = Update;\n    export interface Update {\n      kind: 'update';\n    }\n  }\n}\n\ninterface DebugLoggingWindow {\n  // Even in dev mode, we generally don't want to emit these events, as that's\n  // another level of cost, so only emit them when DEV_MODE is true _and_ when\n  // window.emitLitDebugEvents is true.\n  emitLitDebugLogEvents?: boolean;\n}\n\n/**\n * Useful for visualizing and logging insights into what the Lit template system is doing.\n *\n * Compiled out of prod mode builds.\n */\nconst debugLogEvent = DEV_MODE\n  ? (event: ReactiveUnstable.DebugLog.Entry) => {\n      const shouldEmit = (global as unknown as DebugLoggingWindow)\n        .emitLitDebugLogEvents;\n      if (!shouldEmit) {\n        return;\n      }\n      global.dispatchEvent(\n        new CustomEvent<ReactiveUnstable.DebugLog.Entry>('lit-debug', {\n          detail: event,\n        })\n      );\n    }\n  : undefined;\n\n/*\n * When using Closure Compiler, JSCompiler_renameProperty(property, object) is\n * replaced at compile time by the munged name for object[property]. We cannot\n * alias this function, so we have to use a small shim that has the same\n * behavior when not compiling.\n */\n/*@__INLINE__*/\nconst JSCompiler_renameProperty = <P extends PropertyKey>(\n  prop: P,\n  _obj: unknown\n): P => prop;\n\n/**\n * Converts property values to and from attribute values.\n */\nexport interface ComplexAttributeConverter<Type = unknown, TypeHint = unknown> {\n  /**\n   * Called to convert an attribute value to a property\n   * value.\n   */\n  fromAttribute?(value: string | null, type?: TypeHint): Type;\n\n  /**\n   * Called to convert a property value to an attribute\n   * value.\n   *\n   * It returns unknown instead of string, to be compatible with\n   * https://github.com/WICG/trusted-types (and similar efforts).\n   */\n  toAttribute?(value: Type, type?: TypeHint): unknown;\n}\n\ntype AttributeConverter<Type = unknown, TypeHint = unknown> =\n  | ComplexAttributeConverter<Type>\n  | ((value: string | null, type?: TypeHint) => Type);\n\n/**\n * Defines options for a property accessor.\n */\nexport interface PropertyDeclaration<Type = unknown, TypeHint = unknown> {\n  /**\n   * When set to `true`, indicates the property is internal private state. The\n   * property should not be set by users. When using TypeScript, this property\n   * should be marked as `private` or `protected`, and it is also a common\n   * practice to use a leading `_` in the name. The property is not added to\n   * `observedAttributes`.\n   */\n  readonly state?: boolean;\n\n  /**\n   * Indicates how and whether the property becomes an observed attribute.\n   * If the value is `false`, the property is not added to `observedAttributes`.\n   * If true or absent, the lowercased property name is observed (e.g. `fooBar`\n   * becomes `foobar`). If a string, the string value is observed (e.g\n   * `attribute: 'foo-bar'`).\n   */\n  readonly attribute?: boolean | string;\n\n  /**\n   * Indicates the type of the property. This is used only as a hint for the\n   * `converter` to determine how to convert the attribute\n   * to/from a property.\n   */\n  readonly type?: TypeHint;\n\n  /**\n   * Indicates how to convert the attribute to/from a property. If this value\n   * is a function, it is used to convert the attribute value a the property\n   * value. If it's an object, it can have keys for `fromAttribute` and\n   * `toAttribute`. If no `toAttribute` function is provided and\n   * `reflect` is set to `true`, the property value is set directly to the\n   * attribute. A default `converter` is used if none is provided; it supports\n   * `Boolean`, `String`, `Number`, `Object`, and `Array`. Note,\n   * when a property changes and the converter is used to update the attribute,\n   * the property is never updated again as a result of the attribute changing,\n   * and vice versa.\n   */\n  readonly converter?: AttributeConverter<Type, TypeHint>;\n\n  /**\n   * Indicates if the property should reflect to an attribute.\n   * If `true`, when the property is set, the attribute is set using the\n   * attribute name determined according to the rules for the `attribute`\n   * property option and the value of the property converted using the rules\n   * from the `converter` property option.\n   */\n  readonly reflect?: boolean;\n\n  /**\n   * A function that indicates if a property should be considered changed when\n   * it is set. The function should take the `newValue` and `oldValue` and\n   * return `true` if an update should be requested.\n   */\n  hasChanged?(value: Type, oldValue: Type): boolean;\n\n  /**\n   * Indicates whether an accessor will be created for this property. By\n   * default, an accessor will be generated for this property that requests an\n   * update when set. If this flag is `true`, no accessor will be created, and\n   * it will be the user's responsibility to call\n   * `this.requestUpdate(propertyName, oldValue)` to request an update when\n   * the property changes.\n   */\n  readonly noAccessor?: boolean;\n}\n\n/**\n * Map of properties to PropertyDeclaration options. For each property an\n * accessor is made, and the property is processed according to the\n * PropertyDeclaration options.\n */\nexport interface PropertyDeclarations {\n  readonly [key: string]: PropertyDeclaration;\n}\n\ntype PropertyDeclarationMap = Map<PropertyKey, PropertyDeclaration>;\n\ntype AttributeMap = Map<string, PropertyKey>;\n\n/**\n * A Map of property keys to values.\n *\n * Takes an optional type parameter T, which when specified as a non-any,\n * non-unknown type, will make the Map more strongly-typed, associating the map\n * keys with their corresponding value type on T.\n *\n * Use `PropertyValues<this>` when overriding ReactiveElement.update() and\n * other lifecycle methods in order to get stronger type-checking on keys\n * and values.\n */\n// This type is conditional so that if the parameter T is not specified, or\n// is `any`, the type will include `Map<PropertyKey, unknown>`. Since T is not\n// given in the uses of PropertyValues in this file, all uses here fallback to\n// meaning `Map<PropertyKey, unknown>`, but if a developer uses\n// `PropertyValues<this>` (or any other value for T) they will get a\n// strongly-typed Map type.\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nexport type PropertyValues<T = any> = T extends object\n  ? PropertyValueMap<T>\n  : Map<PropertyKey, unknown>;\n\n/**\n * Do not use, instead prefer {@linkcode PropertyValues}.\n */\n// This type must be exported such that JavaScript generated by the Google\n// Closure Compiler can import a type reference.\nexport interface PropertyValueMap<T> extends Map<PropertyKey, unknown> {\n  get<K extends keyof T>(k: K): T[K];\n  set<K extends keyof T>(key: K, value: T[K]): this;\n  has<K extends keyof T>(k: K): boolean;\n  delete<K extends keyof T>(k: K): boolean;\n}\n\nexport const defaultConverter: ComplexAttributeConverter = {\n  toAttribute(value: unknown, type?: unknown): unknown {\n    switch (type) {\n      case Boolean:\n        value = value ? emptyStringForBooleanAttribute : null;\n        break;\n      case Object:\n      case Array:\n        // if the value is `null` or `undefined` pass this through\n        // to allow removing/no change behavior.\n        value = value == null ? value : JSON.stringify(value);\n        break;\n    }\n    return value;\n  },\n\n  fromAttribute(value: string | null, type?: unknown) {\n    let fromValue: unknown = value;\n    switch (type) {\n      case Boolean:\n        fromValue = value !== null;\n        break;\n      case Number:\n        fromValue = value === null ? null : Number(value);\n        break;\n      case Object:\n      case Array:\n        // Do *not* generate exception when invalid JSON is set as elements\n        // don't normally complain on being mis-configured.\n        // TODO(sorvell): Do generate exception in *dev mode*.\n        try {\n          // Assert to adhere to Bazel's \"must type assert JSON parse\" rule.\n          fromValue = JSON.parse(value!) as unknown;\n        } catch (e) {\n          fromValue = null;\n        }\n        break;\n    }\n    return fromValue;\n  },\n};\n\nexport interface HasChanged {\n  (value: unknown, old: unknown): boolean;\n}\n\n/**\n * Change function that returns true if `value` is different from `oldValue`.\n * This method is used as the default for a property's `hasChanged` function.\n */\nexport const notEqual: HasChanged = (value: unknown, old: unknown): boolean => {\n  // This ensures (old==NaN, value==NaN) always returns false\n  return old !== value && (old === old || value === value);\n};\n\nconst defaultPropertyDeclaration: PropertyDeclaration = {\n  attribute: true,\n  type: String,\n  converter: defaultConverter,\n  reflect: false,\n  hasChanged: notEqual,\n};\n\n/**\n * The Closure JS Compiler doesn't currently have good support for static\n * property semantics where \"this\" is dynamic (e.g.\n * https://github.com/google/closure-compiler/issues/3177 and others) so we use\n * this hack to bypass any rewriting by the compiler.\n */\nconst finalized = 'finalized';\n\n/**\n * A string representing one of the supported dev mode warning categories.\n */\nexport type WarningKind = 'change-in-update' | 'migration';\n\nexport type Initializer = (element: ReactiveElement) => void;\n\nconst htmlElementShimNeeded = NODE_MODE && global.HTMLElement === undefined;\nif (htmlElementShimNeeded) {\n  global.HTMLElement = class HTMLElement {} as unknown as typeof HTMLElement;\n}\n\n/**\n * Base element class which manages element properties and attributes. When\n * properties change, the `update` method is asynchronously called. This method\n * should be supplied by subclassers to render updates as desired.\n * @noInheritDoc\n */\nexport abstract class ReactiveElement\n  extends HTMLElement\n  implements ReactiveControllerHost\n{\n  // Note: these are patched in only in DEV_MODE.\n  /**\n   * Read or set all the enabled warning categories for this class.\n   *\n   * This property is only used in development builds.\n   *\n   * @nocollapse\n   * @category dev-mode\n   */\n  static enabledWarnings?: WarningKind[];\n\n  /**\n   * Enable the given warning category for this class.\n   *\n   * This method only exists in development builds, so it should be accessed\n   * with a guard like:\n   *\n   * ```ts\n   * // Enable for all ReactiveElement subclasses\n   * ReactiveElement.enableWarning?.('migration');\n   *\n   * // Enable for only MyElement and subclasses\n   * MyElement.enableWarning?.('migration');\n   * ```\n   *\n   * @nocollapse\n   * @category dev-mode\n   */\n  static enableWarning?: (warningKind: WarningKind) => void;\n\n  /**\n   * Disable the given warning category for this class.\n   *\n   * This method only exists in development builds, so it should be accessed\n   * with a guard like:\n   *\n   * ```ts\n   * // Disable for all ReactiveElement subclasses\n   * ReactiveElement.disableWarning?.('migration');\n   *\n   * // Disable for only MyElement and subclasses\n   * MyElement.disableWarning?.('migration');\n   * ```\n   *\n   * @nocollapse\n   * @category dev-mode\n   */\n  static disableWarning?: (warningKind: WarningKind) => void;\n\n  /**\n   * Adds an initializer function to the class that is called during instance\n   * construction.\n   *\n   * This is useful for code that runs against a `ReactiveElement`\n   * subclass, such as a decorator, that needs to do work for each\n   * instance, such as setting up a `ReactiveController`.\n   *\n   * ```ts\n   * const myDecorator = (target: typeof ReactiveElement, key: string) => {\n   *   target.addInitializer((instance: ReactiveElement) => {\n   *     // This is run during construction of the element\n   *     new MyController(instance);\n   *   });\n   * }\n   * ```\n   *\n   * Decorating a field will then cause each instance to run an initializer\n   * that adds a controller:\n   *\n   * ```ts\n   * class MyElement extends LitElement {\n   *   @myDecorator foo;\n   * }\n   * ```\n   *\n   * Initializers are stored per-constructor. Adding an initializer to a\n   * subclass does not add it to a superclass. Since initializers are run in\n   * constructors, initializers will run in order of the class hierarchy,\n   * starting with superclasses and progressing to the instance's class.\n   *\n   * @nocollapse\n   */\n  static addInitializer(initializer: Initializer) {\n    this._initializers ??= [];\n    this._initializers.push(initializer);\n  }\n\n  static _initializers?: Initializer[];\n\n  /*\n   * Due to closure compiler ES6 compilation bugs, @nocollapse is required on\n   * all static methods and properties with initializers.  Reference:\n   * - https://github.com/google/closure-compiler/issues/1776\n   */\n\n  /**\n   * Maps attribute names to properties; for example `foobar` attribute to\n   * `fooBar` property. Created lazily on user subclasses when finalizing the\n   * class.\n   * @nocollapse\n   */\n  private static __attributeToPropertyMap: AttributeMap;\n\n  /**\n   * Marks class as having finished creating properties.\n   */\n  protected static [finalized] = true;\n\n  /**\n   * Memoized list of all element properties, including any superclass properties.\n   * Created lazily on user subclasses when finalizing the class.\n   * @nocollapse\n   * @category properties\n   */\n  static elementProperties: PropertyDeclarationMap = new Map();\n\n  /**\n   * User-supplied object that maps property names to `PropertyDeclaration`\n   * objects containing options for configuring reactive properties. When\n   * a reactive property is set the element will update and render.\n   *\n   * By default properties are public fields, and as such, they should be\n   * considered as primarily settable by element users, either via attribute or\n   * the property itself.\n   *\n   * Generally, properties that are changed by the element should be private or\n   * protected fields and should use the `state: true` option. Properties\n   * marked as `state` do not reflect from the corresponding attribute\n   *\n   * However, sometimes element code does need to set a public property. This\n   * should typically only be done in response to user interaction, and an event\n   * should be fired informing the user; for example, a checkbox sets its\n   * `checked` property when clicked and fires a `changed` event. Mutating\n   * public properties should typically not be done for non-primitive (object or\n   * array) properties. In other cases when an element needs to manage state, a\n   * private property set with the `state: true` option should be used. When\n   * needed, state properties can be initialized via public properties to\n   * facilitate complex interactions.\n   * @nocollapse\n   * @category properties\n   */\n  static properties: PropertyDeclarations;\n\n  /**\n   * Memoized list of all element styles.\n   * Created lazily on user subclasses when finalizing the class.\n   * @nocollapse\n   * @category styles\n   */\n  static elementStyles: Array<CSSResultOrNative> = [];\n\n  /**\n   * Array of styles to apply to the element. The styles should be defined\n   * using the {@linkcode css} tag function, via constructible stylesheets, or\n   * imported from native CSS module scripts.\n   *\n   * Note on Content Security Policy:\n   *\n   * Element styles are implemented with `<style>` tags when the browser doesn't\n   * support adopted StyleSheets. To use such `<style>` tags with the style-src\n   * CSP directive, the style-src value must either include 'unsafe-inline' or\n   * 'nonce-<base64-value>' with <base64-value> replaced be a server-generated\n   * nonce.\n   *\n   * To provide a nonce to use on generated <style> elements, set\n   * `window.litNonce` to a server-generated nonce in your page's HTML, before\n   * loading application code:\n   *\n   * ```html\n   * <script>\n   *   // Generated and unique per request:\n   *   window.litNonce = 'a1b2c3d4';\n   * </script>\n   * ```\n   * @nocollapse\n   * @category styles\n   */\n  static styles?: CSSResultGroup;\n\n  /**\n   * The set of properties defined by this class that caused an accessor to be\n   * added during `createProperty`.\n   * @nocollapse\n   */\n  private static __reactivePropertyKeys?: Set<PropertyKey>;\n\n  /**\n   * Returns a list of attributes corresponding to the registered properties.\n   * @nocollapse\n   * @category attributes\n   */\n  static get observedAttributes() {\n    // note: piggy backing on this to ensure we're finalized.\n    this.finalize();\n    const attributes: string[] = [];\n    // Use forEach so this works even if for/of loops are compiled to for loops\n    // expecting arrays\n    this.elementProperties.forEach((v, p) => {\n      const attr = this.__attributeNameForProperty(p, v);\n      if (attr !== undefined) {\n        this.__attributeToPropertyMap.set(attr, p);\n        attributes.push(attr);\n      }\n    });\n    return attributes;\n  }\n\n  /**\n   * Creates a property accessor on the element prototype if one does not exist\n   * and stores a {@linkcode PropertyDeclaration} for the property with the\n   * given options. The property setter calls the property's `hasChanged`\n   * property option or uses a strict identity check to determine whether or not\n   * to request an update.\n   *\n   * This method may be overridden to customize properties; however,\n   * when doing so, it's important to call `super.createProperty` to ensure\n   * the property is setup correctly. This method calls\n   * `getPropertyDescriptor` internally to get a descriptor to install.\n   * To customize what properties do when they are get or set, override\n   * `getPropertyDescriptor`. To customize the options for a property,\n   * implement `createProperty` like this:\n   *\n   * ```ts\n   * static createProperty(name, options) {\n   *   options = Object.assign(options, {myOption: true});\n   *   super.createProperty(name, options);\n   * }\n   * ```\n   *\n   * @nocollapse\n   * @category properties\n   */\n  static createProperty(\n    name: PropertyKey,\n    options: PropertyDeclaration = defaultPropertyDeclaration\n  ) {\n    // if this is a state property, force the attribute to false.\n    if (options.state) {\n      // Cast as any since this is readonly.\n      // eslint-disable-next-line @typescript-eslint/no-explicit-any\n      (options as any).attribute = false;\n    }\n    // Note, since this can be called by the `@property` decorator which\n    // is called before `finalize`, we ensure finalization has been kicked off.\n    this.finalize();\n    this.elementProperties.set(name, options);\n    // Do not generate an accessor if the prototype already has one, since\n    // it would be lost otherwise and that would never be the user's intention;\n    // Instead, we expect users to call `requestUpdate` themselves from\n    // user-defined accessors. Note that if the super has an accessor we will\n    // still overwrite it\n    if (!options.noAccessor && !this.prototype.hasOwnProperty(name)) {\n      const key = typeof name === 'symbol' ? Symbol() : `__${name}`;\n      const descriptor = this.getPropertyDescriptor(name, key, options);\n      if (descriptor !== undefined) {\n        Object.defineProperty(this.prototype, name, descriptor);\n        if (DEV_MODE) {\n          // If this class doesn't have its own set, create one and initialize\n          // with the values in the set from the nearest ancestor class, if any.\n          if (!this.hasOwnProperty('__reactivePropertyKeys')) {\n            this.__reactivePropertyKeys = new Set(\n              this.__reactivePropertyKeys ?? []\n            );\n          }\n          this.__reactivePropertyKeys!.add(name);\n        }\n      }\n    }\n  }\n\n  /**\n   * Returns a property descriptor to be defined on the given named property.\n   * If no descriptor is returned, the property will not become an accessor.\n   * For example,\n   *\n   * ```ts\n   * class MyElement extends LitElement {\n   *   static getPropertyDescriptor(name, key, options) {\n   *     const defaultDescriptor =\n   *         super.getPropertyDescriptor(name, key, options);\n   *     const setter = defaultDescriptor.set;\n   *     return {\n   *       get: defaultDescriptor.get,\n   *       set(value) {\n   *         setter.call(this, value);\n   *         // custom action.\n   *       },\n   *       configurable: true,\n   *       enumerable: true\n   *     }\n   *   }\n   * }\n   * ```\n   *\n   * @nocollapse\n   * @category properties\n   */\n  protected static getPropertyDescriptor(\n    name: PropertyKey,\n    key: string | symbol,\n    options: PropertyDeclaration\n  ): PropertyDescriptor | undefined {\n    return {\n      // eslint-disable-next-line @typescript-eslint/no-explicit-any\n      get(): any {\n        return (this as {[key: string]: unknown})[key as string];\n      },\n      set(this: ReactiveElement, value: unknown) {\n        const oldValue = (this as {} as {[key: string]: unknown})[\n          name as string\n        ];\n        (this as {} as {[key: string]: unknown})[key as string] = value;\n        (this as unknown as ReactiveElement).requestUpdate(\n          name,\n          oldValue,\n          options\n        );\n      },\n      configurable: true,\n      enumerable: true,\n    };\n  }\n\n  /**\n   * Returns the property options associated with the given property.\n   * These options are defined with a `PropertyDeclaration` via the `properties`\n   * object or the `@property` decorator and are registered in\n   * `createProperty(...)`.\n   *\n   * Note, this method should be considered \"final\" and not overridden. To\n   * customize the options for a given property, override\n   * {@linkcode createProperty}.\n   *\n   * @nocollapse\n   * @final\n   * @category properties\n   */\n  static getPropertyOptions(name: PropertyKey) {\n    return this.elementProperties.get(name) || defaultPropertyDeclaration;\n  }\n\n  /**\n   * Creates property accessors for registered properties, sets up element\n   * styling, and ensures any superclasses are also finalized. Returns true if\n   * the element was finalized.\n   * @nocollapse\n   */\n  protected static finalize() {\n    if (this.hasOwnProperty(finalized)) {\n      return false;\n    }\n    this[finalized] = true;\n    // finalize any superclasses\n    const superCtor = Object.getPrototypeOf(this) as typeof ReactiveElement;\n    superCtor.finalize();\n    this.elementProperties = new Map(superCtor.elementProperties);\n    // initialize Map populated in observedAttributes\n    this.__attributeToPropertyMap = new Map();\n    // make any properties\n    // Note, only process \"own\" properties since this element will inherit\n    // any properties defined on the superClass, and finalization ensures\n    // the entire prototype chain is finalized.\n    if (this.hasOwnProperty(JSCompiler_renameProperty('properties', this))) {\n      const props = this.properties;\n      // support symbols in properties (IE11 does not support this)\n      const propKeys = [\n        ...Object.getOwnPropertyNames(props),\n        ...Object.getOwnPropertySymbols(props),\n      ];\n      // This for/of is ok because propKeys is an array\n      for (const p of propKeys) {\n        // note, use of `any` is due to TypeScript lack of support for symbol in\n        // index types\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        this.createProperty(p, (props as any)[p]);\n      }\n    }\n    this.elementStyles = this.finalizeStyles(this.styles);\n    // DEV mode warnings\n    if (DEV_MODE) {\n      const warnRemovedOrRenamed = (name: string, renamed = false) => {\n        if (this.prototype.hasOwnProperty(name)) {\n          issueWarning(\n            renamed ? 'renamed-api' : 'removed-api',\n            `\\`${name}\\` is implemented on class ${this.name}. It ` +\n              `has been ${renamed ? 'renamed' : 'removed'} ` +\n              `in this version of LitElement.`\n          );\n        }\n      };\n      warnRemovedOrRenamed('initialize');\n      warnRemovedOrRenamed('requestUpdateInternal');\n      warnRemovedOrRenamed('_getUpdateComplete', true);\n    }\n    return true;\n  }\n\n  /**\n   * Options used when calling `attachShadow`. Set this property to customize\n   * the options for the shadowRoot; for example, to create a closed\n   * shadowRoot: `{mode: 'closed'}`.\n   *\n   * Note, these options are used in `createRenderRoot`. If this method\n   * is customized, options should be respected if possible.\n   * @nocollapse\n   * @category rendering\n   */\n  static shadowRootOptions: ShadowRootInit = {mode: 'open'};\n\n  /**\n   * Takes the styles the user supplied via the `static styles` property and\n   * returns the array of styles to apply to the element.\n   * Override this method to integrate into a style management system.\n   *\n   * Styles are deduplicated preserving the _last_ instance in the list. This\n   * is a performance optimization to avoid duplicated styles that can occur\n   * especially when composing via subclassing. The last item is kept to try\n   * to preserve the cascade order with the assumption that it's most important\n   * that last added styles override previous styles.\n   *\n   * @nocollapse\n   * @category styles\n   */\n  protected static finalizeStyles(\n    styles?: CSSResultGroup\n  ): Array<CSSResultOrNative> {\n    const elementStyles = [];\n    if (Array.isArray(styles)) {\n      // Dedupe the flattened array in reverse order to preserve the last items.\n      // Casting to Array<unknown> works around TS error that\n      // appears to come from trying to flatten a type CSSResultArray.\n      const set = new Set((styles as Array<unknown>).flat(Infinity).reverse());\n      // Then preserve original order by adding the set items in reverse order.\n      for (const s of set) {\n        elementStyles.unshift(getCompatibleStyle(s as CSSResultOrNative));\n      }\n    } else if (styles !== undefined) {\n      elementStyles.push(getCompatibleStyle(styles));\n    }\n    return elementStyles;\n  }\n\n  /**\n   * Node or ShadowRoot into which element DOM should be rendered. Defaults\n   * to an open shadowRoot.\n   * @category rendering\n   */\n  readonly renderRoot!: HTMLElement | ShadowRoot;\n\n  /**\n   * Returns the property name for the given attribute `name`.\n   * @nocollapse\n   */\n  private static __attributeNameForProperty(\n    name: PropertyKey,\n    options: PropertyDeclaration\n  ) {\n    const attribute = options.attribute;\n    return attribute === false\n      ? undefined\n      : typeof attribute === 'string'\n      ? attribute\n      : typeof name === 'string'\n      ? name.toLowerCase()\n      : undefined;\n  }\n\n  private __instanceProperties?: PropertyValues = new Map();\n  // Initialize to an unresolved Promise so we can make sure the element has\n  // connected before first update.\n  private __updatePromise!: Promise<boolean>;\n\n  /**\n   * True if there is a pending update as a result of calling `requestUpdate()`.\n   * Should only be read.\n   * @category updates\n   */\n  isUpdatePending = false;\n\n  /**\n   * Is set to `true` after the first update. The element code cannot assume\n   * that `renderRoot` exists before the element `hasUpdated`.\n   * @category updates\n   */\n  hasUpdated = false;\n\n  /**\n   * Map with keys for any properties that have changed since the last\n   * update cycle with previous values.\n   *\n   * @internal\n   */\n  _$changedProperties!: PropertyValues;\n\n  /**\n   * Map with keys of properties that should be reflected when updated.\n   */\n  private __reflectingProperties?: Map<PropertyKey, PropertyDeclaration>;\n\n  /**\n   * Name of currently reflecting property\n   */\n  private __reflectingProperty: PropertyKey | null = null;\n\n  /**\n   * Set of controllers.\n   */\n  private __controllers?: ReactiveController[];\n\n  constructor() {\n    super();\n    this._initialize();\n  }\n\n  /**\n   * Internal only override point for customizing work done when elements\n   * are constructed.\n   *\n   * @internal\n   */\n  _initialize() {\n    this.__updatePromise = new Promise<boolean>(\n      (res) => (this.enableUpdating = res)\n    );\n    this._$changedProperties = new Map();\n    this.__saveInstanceProperties();\n    // ensures first update will be caught by an early access of\n    // `updateComplete`\n    this.requestUpdate();\n    (this.constructor as typeof ReactiveElement)._initializers?.forEach((i) =>\n      i(this)\n    );\n  }\n\n  /**\n   * Registers a `ReactiveController` to participate in the element's reactive\n   * update cycle. The element automatically calls into any registered\n   * controllers during its lifecycle callbacks.\n   *\n   * If the element is connected when `addController()` is called, the\n   * controller's `hostConnected()` callback will be immediately called.\n   * @category controllers\n   */\n  addController(controller: ReactiveController) {\n    (this.__controllers ??= []).push(controller);\n    // If a controller is added after the element has been connected,\n    // call hostConnected. Note, re-using existence of `renderRoot` here\n    // (which is set in connectedCallback) to avoid the need to track a\n    // first connected state.\n    if (this.renderRoot !== undefined && this.isConnected) {\n      controller.hostConnected?.();\n    }\n  }\n\n  /**\n   * Removes a `ReactiveController` from the element.\n   * @category controllers\n   */\n  removeController(controller: ReactiveController) {\n    // Note, if the indexOf is -1, the >>> will flip the sign which makes the\n    // splice do nothing.\n    this.__controllers?.splice(this.__controllers.indexOf(controller) >>> 0, 1);\n  }\n\n  /**\n   * Fixes any properties set on the instance before upgrade time.\n   * Otherwise these would shadow the accessor and break these properties.\n   * The properties are stored in a Map which is played back after the\n   * constructor runs. Note, on very old versions of Safari (<=9) or Chrome\n   * (<=41), properties created for native platform properties like (`id` or\n   * `name`) may not have default values set in the element constructor. On\n   * these browsers native properties appear on instances and therefore their\n   * default value will overwrite any element default (e.g. if the element sets\n   * this.id = 'id' in the constructor, the 'id' will become '' since this is\n   * the native platform default).\n   */\n  private __saveInstanceProperties() {\n    // Use forEach so this works even if for/of loops are compiled to for loops\n    // expecting arrays\n    (this.constructor as typeof ReactiveElement).elementProperties.forEach(\n      (_v, p) => {\n        if (this.hasOwnProperty(p)) {\n          this.__instanceProperties!.set(p, this[p as keyof this]);\n          delete this[p as keyof this];\n        }\n      }\n    );\n  }\n\n  /**\n   * Returns the node into which the element should render and by default\n   * creates and returns an open shadowRoot. Implement to customize where the\n   * element's DOM is rendered. For example, to render into the element's\n   * childNodes, return `this`.\n   *\n   * @return Returns a node into which to render.\n   * @category rendering\n   */\n  protected createRenderRoot(): Element | ShadowRoot {\n    const renderRoot =\n      this.shadowRoot ??\n      this.attachShadow(\n        (this.constructor as typeof ReactiveElement).shadowRootOptions\n      );\n    adoptStyles(\n      renderRoot,\n      (this.constructor as typeof ReactiveElement).elementStyles\n    );\n    return renderRoot;\n  }\n\n  /**\n   * On first connection, creates the element's renderRoot, sets up\n   * element styling, and enables updating.\n   * @category lifecycle\n   */\n  connectedCallback() {\n    // create renderRoot before first update.\n    if (this.renderRoot === undefined) {\n      (\n        this as {\n          renderRoot: Element | DocumentFragment;\n        }\n      ).renderRoot = this.createRenderRoot();\n    }\n    this.enableUpdating(true);\n    this.__controllers?.forEach((c) => c.hostConnected?.());\n  }\n\n  /**\n   * Note, this method should be considered final and not overridden. It is\n   * overridden on the element instance with a function that triggers the first\n   * update.\n   * @category updates\n   */\n  protected enableUpdating(_requestedUpdate: boolean) {}\n\n  /**\n   * Allows for `super.disconnectedCallback()` in extensions while\n   * reserving the possibility of making non-breaking feature additions\n   * when disconnecting at some point in the future.\n   * @category lifecycle\n   */\n  disconnectedCallback() {\n    this.__controllers?.forEach((c) => c.hostDisconnected?.());\n  }\n\n  /**\n   * Synchronizes property values when attributes change.\n   *\n   * Specifically, when an attribute is set, the corresponding property is set.\n   * You should rarely need to implement this callback. If this method is\n   * overridden, `super.attributeChangedCallback(name, _old, value)` must be\n   * called.\n   *\n   * See [using the lifecycle callbacks](https://developer.mozilla.org/en-US/docs/Web/Web_Components/Using_custom_elements#using_the_lifecycle_callbacks)\n   * on MDN for more information about the `attributeChangedCallback`.\n   * @category attributes\n   */\n  attributeChangedCallback(\n    name: string,\n    _old: string | null,\n    value: string | null\n  ) {\n    this._$attributeToProperty(name, value);\n  }\n\n  private __propertyToAttribute(\n    name: PropertyKey,\n    value: unknown,\n    options: PropertyDeclaration = defaultPropertyDeclaration\n  ) {\n    const attr = (\n      this.constructor as typeof ReactiveElement\n    ).__attributeNameForProperty(name, options);\n    if (attr !== undefined && options.reflect === true) {\n      const converter =\n        (options.converter as ComplexAttributeConverter)?.toAttribute !==\n        undefined\n          ? (options.converter as ComplexAttributeConverter)\n          : defaultConverter;\n      const attrValue = converter.toAttribute!(value, options.type);\n      if (\n        DEV_MODE &&\n        (this.constructor as typeof ReactiveElement).enabledWarnings!.indexOf(\n          'migration'\n        ) >= 0 &&\n        attrValue === undefined\n      ) {\n        issueWarning(\n          'undefined-attribute-value',\n          `The attribute value for the ${name as string} property is ` +\n            `undefined on element ${this.localName}. The attribute will be ` +\n            `removed, but in the previous version of \\`ReactiveElement\\`, ` +\n            `the attribute would not have changed.`\n        );\n      }\n      // Track if the property is being reflected to avoid\n      // setting the property again via `attributeChangedCallback`. Note:\n      // 1. this takes advantage of the fact that the callback is synchronous.\n      // 2. will behave incorrectly if multiple attributes are in the reaction\n      // stack at time of calling. However, since we process attributes\n      // in `update` this should not be possible (or an extreme corner case\n      // that we'd like to discover).\n      // mark state reflecting\n      this.__reflectingProperty = name;\n      if (attrValue == null) {\n        this.removeAttribute(attr);\n      } else {\n        this.setAttribute(attr, attrValue as string);\n      }\n      // mark state not reflecting\n      this.__reflectingProperty = null;\n    }\n  }\n\n  /** @internal */\n  _$attributeToProperty(name: string, value: string | null) {\n    const ctor = this.constructor as typeof ReactiveElement;\n    // Note, hint this as an `AttributeMap` so closure clearly understands\n    // the type; it has issues with tracking types through statics\n    const propName = (ctor.__attributeToPropertyMap as AttributeMap).get(name);\n    // Use tracking info to avoid reflecting a property value to an attribute\n    // if it was just set because the attribute changed.\n    if (propName !== undefined && this.__reflectingProperty !== propName) {\n      const options = ctor.getPropertyOptions(propName);\n      const converter =\n        typeof options.converter === 'function'\n          ? {fromAttribute: options.converter}\n          : options.converter?.fromAttribute !== undefined\n          ? options.converter\n          : defaultConverter;\n      // mark state reflecting\n      this.__reflectingProperty = propName;\n      this[propName as keyof this] = converter.fromAttribute!(\n        value,\n        options.type\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n      ) as any;\n      // mark state not reflecting\n      this.__reflectingProperty = null;\n    }\n  }\n\n  /**\n   * Requests an update which is processed asynchronously. This should be called\n   * when an element should update based on some state not triggered by setting\n   * a reactive property. In this case, pass no arguments. It should also be\n   * called when manually implementing a property setter. In this case, pass the\n   * property `name` and `oldValue` to ensure that any configured property\n   * options are honored.\n   *\n   * @param name name of requesting property\n   * @param oldValue old value of requesting property\n   * @param options property options to use instead of the previously\n   *     configured options\n   * @category updates\n   */\n  requestUpdate(\n    name?: PropertyKey,\n    oldValue?: unknown,\n    options?: PropertyDeclaration\n  ): void {\n    let shouldRequestUpdate = true;\n    // If we have a property key, perform property update steps.\n    if (name !== undefined) {\n      options =\n        options ||\n        (this.constructor as typeof ReactiveElement).getPropertyOptions(name);\n      const hasChanged = options.hasChanged || notEqual;\n      if (hasChanged(this[name as keyof this], oldValue)) {\n        if (!this._$changedProperties.has(name)) {\n          this._$changedProperties.set(name, oldValue);\n        }\n        // Add to reflecting properties set.\n        // Note, it's important that every change has a chance to add the\n        // property to `_reflectingProperties`. This ensures setting\n        // attribute + property reflects correctly.\n        if (options.reflect === true && this.__reflectingProperty !== name) {\n          if (this.__reflectingProperties === undefined) {\n            this.__reflectingProperties = new Map();\n          }\n          this.__reflectingProperties.set(name, options);\n        }\n      } else {\n        // Abort the request if the property should not be considered changed.\n        shouldRequestUpdate = false;\n      }\n    }\n    if (!this.isUpdatePending && shouldRequestUpdate) {\n      this.__updatePromise = this.__enqueueUpdate();\n    }\n    // Note, since this no longer returns a promise, in dev mode we return a\n    // thenable which warns if it's called.\n    return DEV_MODE\n      ? (requestUpdateThenable(this.localName) as unknown as void)\n      : undefined;\n  }\n\n  /**\n   * Sets up the element to asynchronously update.\n   */\n  private async __enqueueUpdate() {\n    this.isUpdatePending = true;\n    try {\n      // Ensure any previous update has resolved before updating.\n      // This `await` also ensures that property changes are batched.\n      await this.__updatePromise;\n    } catch (e) {\n      // Refire any previous errors async so they do not disrupt the update\n      // cycle. Errors are refired so developers have a chance to observe\n      // them, and this can be done by implementing\n      // `window.onunhandledrejection`.\n      Promise.reject(e);\n    }\n    const result = this.scheduleUpdate();\n    // If `scheduleUpdate` returns a Promise, we await it. This is done to\n    // enable coordinating updates with a scheduler. Note, the result is\n    // checked to avoid delaying an additional microtask unless we need to.\n    if (result != null) {\n      await result;\n    }\n    return !this.isUpdatePending;\n  }\n\n  /**\n   * Schedules an element update. You can override this method to change the\n   * timing of updates by returning a Promise. The update will await the\n   * returned Promise, and you should resolve the Promise to allow the update\n   * to proceed. If this method is overridden, `super.scheduleUpdate()`\n   * must be called.\n   *\n   * For instance, to schedule updates to occur just before the next frame:\n   *\n   * ```ts\n   * override protected async scheduleUpdate(): Promise<unknown> {\n   *   await new Promise((resolve) => requestAnimationFrame(() => resolve()));\n   *   super.scheduleUpdate();\n   * }\n   * ```\n   * @category updates\n   */\n  protected scheduleUpdate(): void | Promise<unknown> {\n    return this.performUpdate();\n  }\n\n  /**\n   * Performs an element update. Note, if an exception is thrown during the\n   * update, `firstUpdated` and `updated` will not be called.\n   *\n   * Call `performUpdate()` to immediately process a pending update. This should\n   * generally not be needed, but it can be done in rare cases when you need to\n   * update synchronously.\n   *\n   * Note: To ensure `performUpdate()` synchronously completes a pending update,\n   * it should not be overridden. In LitElement 2.x it was suggested to override\n   * `performUpdate()` to also customizing update scheduling. Instead, you should now\n   * override `scheduleUpdate()`. For backwards compatibility with LitElement 2.x,\n   * scheduling updates via `performUpdate()` continues to work, but will make\n   * also calling `performUpdate()` to synchronously process updates difficult.\n   *\n   * @category updates\n   */\n  protected performUpdate(): void | Promise<unknown> {\n    // Abort any update if one is not pending when this is called.\n    // This can happen if `performUpdate` is called early to \"flush\"\n    // the update.\n    if (!this.isUpdatePending) {\n      return;\n    }\n    debugLogEvent?.({kind: 'update'});\n    // create renderRoot before first update.\n    if (!this.hasUpdated) {\n      // Produce warning if any class properties are shadowed by class fields\n      if (DEV_MODE) {\n        const shadowedProperties: string[] = [];\n        (\n          this.constructor as typeof ReactiveElement\n        ).__reactivePropertyKeys?.forEach((p) => {\n          if (this.hasOwnProperty(p) && !this.__instanceProperties?.has(p)) {\n            shadowedProperties.push(p as string);\n          }\n        });\n        if (shadowedProperties.length) {\n          throw new Error(\n            `The following properties on element ${this.localName} will not ` +\n              `trigger updates as expected because they are set using class ` +\n              `fields: ${shadowedProperties.join(', ')}. ` +\n              `Native class fields and some compiled output will overwrite ` +\n              `accessors used for detecting changes. See ` +\n              `https://lit.dev/msg/class-field-shadowing ` +\n              `for more information.`\n          );\n        }\n      }\n    }\n    // Mixin instance properties once, if they exist.\n    if (this.__instanceProperties) {\n      // Use forEach so this works even if for/of loops are compiled to for loops\n      // expecting arrays\n      // eslint-disable-next-line @typescript-eslint/no-explicit-any\n      this.__instanceProperties!.forEach((v, p) => ((this as any)[p] = v));\n      this.__instanceProperties = undefined;\n    }\n    let shouldUpdate = false;\n    const changedProperties = this._$changedProperties;\n    try {\n      shouldUpdate = this.shouldUpdate(changedProperties);\n      if (shouldUpdate) {\n        this.willUpdate(changedProperties);\n        this.__controllers?.forEach((c) => c.hostUpdate?.());\n        this.update(changedProperties);\n      } else {\n        this.__markUpdated();\n      }\n    } catch (e) {\n      // Prevent `firstUpdated` and `updated` from running when there's an\n      // update exception.\n      shouldUpdate = false;\n      // Ensure element can accept additional updates after an exception.\n      this.__markUpdated();\n      throw e;\n    }\n    // The update is no longer considered pending and further updates are now allowed.\n    if (shouldUpdate) {\n      this._$didUpdate(changedProperties);\n    }\n  }\n\n  /**\n   * Invoked before `update()` to compute values needed during the update.\n   *\n   * Implement `willUpdate` to compute property values that depend on other\n   * properties and are used in the rest of the update process.\n   *\n   * ```ts\n   * willUpdate(changedProperties) {\n   *   // only need to check changed properties for an expensive computation.\n   *   if (changedProperties.has('firstName') || changedProperties.has('lastName')) {\n   *     this.sha = computeSHA(`${this.firstName} ${this.lastName}`);\n   *   }\n   * }\n   *\n   * render() {\n   *   return html`SHA: ${this.sha}`;\n   * }\n   * ```\n   *\n   * @category updates\n   */\n  protected willUpdate(_changedProperties: PropertyValues): void {}\n\n  // Note, this is an override point for polyfill-support.\n  // @internal\n  _$didUpdate(changedProperties: PropertyValues) {\n    this.__controllers?.forEach((c) => c.hostUpdated?.());\n    if (!this.hasUpdated) {\n      this.hasUpdated = true;\n      this.firstUpdated(changedProperties);\n    }\n    this.updated(changedProperties);\n    if (\n      DEV_MODE &&\n      this.isUpdatePending &&\n      (this.constructor as typeof ReactiveElement).enabledWarnings!.indexOf(\n        'change-in-update'\n      ) >= 0\n    ) {\n      issueWarning(\n        'change-in-update',\n        `Element ${this.localName} scheduled an update ` +\n          `(generally because a property was set) ` +\n          `after an update completed, causing a new update to be scheduled. ` +\n          `This is inefficient and should be avoided unless the next update ` +\n          `can only be scheduled as a side effect of the previous update.`\n      );\n    }\n  }\n\n  private __markUpdated() {\n    this._$changedProperties = new Map();\n    this.isUpdatePending = false;\n  }\n\n  /**\n   * Returns a Promise that resolves when the element has completed updating.\n   * The Promise value is a boolean that is `true` if the element completed the\n   * update without triggering another update. The Promise result is `false` if\n   * a property was set inside `updated()`. If the Promise is rejected, an\n   * exception was thrown during the update.\n   *\n   * To await additional asynchronous work, override the `getUpdateComplete`\n   * method. For example, it is sometimes useful to await a rendered element\n   * before fulfilling this Promise. To do this, first await\n   * `super.getUpdateComplete()`, then any subsequent state.\n   *\n   * @return A promise of a boolean that resolves to true if the update completed\n   *     without triggering another update.\n   * @category updates\n   */\n  get updateComplete(): Promise<boolean> {\n    return this.getUpdateComplete();\n  }\n\n  /**\n   * Override point for the `updateComplete` promise.\n   *\n   * It is not safe to override the `updateComplete` getter directly due to a\n   * limitation in TypeScript which means it is not possible to call a\n   * superclass getter (e.g. `super.updateComplete.then(...)`) when the target\n   * language is ES5 (https://github.com/microsoft/TypeScript/issues/338).\n   * This method should be overridden instead. For example:\n   *\n   * ```ts\n   * class MyElement extends LitElement {\n   *   override async getUpdateComplete() {\n   *     const result = await super.getUpdateComplete();\n   *     await this._myChild.updateComplete;\n   *     return result;\n   *   }\n   * }\n   * ```\n   *\n   * @return A promise of a boolean that resolves to true if the update completed\n   *     without triggering another update.\n   * @category updates\n   */\n  protected getUpdateComplete(): Promise<boolean> {\n    return this.__updatePromise;\n  }\n\n  /**\n   * Controls whether or not `update()` should be called when the element requests\n   * an update. By default, this method always returns `true`, but this can be\n   * customized to control when to update.\n   *\n   * @param _changedProperties Map of changed properties with old values\n   * @category updates\n   */\n  protected shouldUpdate(_changedProperties: PropertyValues): boolean {\n    return true;\n  }\n\n  /**\n   * Updates the element. This method reflects property values to attributes.\n   * It can be overridden to render and keep updated element DOM.\n   * Setting properties inside this method will *not* trigger\n   * another update.\n   *\n   * @param _changedProperties Map of changed properties with old values\n   * @category updates\n   */\n  protected update(_changedProperties: PropertyValues) {\n    if (this.__reflectingProperties !== undefined) {\n      // Use forEach so this works even if for/of loops are compiled to for\n      // loops expecting arrays\n      this.__reflectingProperties.forEach((v, k) =>\n        this.__propertyToAttribute(k, this[k as keyof this], v)\n      );\n      this.__reflectingProperties = undefined;\n    }\n    this.__markUpdated();\n  }\n\n  /**\n   * Invoked whenever the element is updated. Implement to perform\n   * post-updating tasks via DOM APIs, for example, focusing an element.\n   *\n   * Setting properties inside this method will trigger the element to update\n   * again after this update cycle completes.\n   *\n   * @param _changedProperties Map of changed properties with old values\n   * @category updates\n   */\n  protected updated(_changedProperties: PropertyValues) {}\n\n  /**\n   * Invoked when the element is first updated. Implement to perform one time\n   * work on the element after update.\n   *\n   * ```ts\n   * firstUpdated() {\n   *   this.renderRoot.getElementById('my-text-area').focus();\n   * }\n   * ```\n   *\n   * Setting properties inside this method will trigger the element to update\n   * again after this update cycle completes.\n   *\n   * @param _changedProperties Map of changed properties with old values\n   * @category updates\n   */\n  protected firstUpdated(_changedProperties: PropertyValues) {}\n}\n\nif (htmlElementShimNeeded) {\n  delete (global as Partial<typeof global>).HTMLElement;\n}\n\n// Apply polyfills if available\npolyfillSupport?.({ReactiveElement});\n\n// Dev mode warnings...\nif (DEV_MODE) {\n  // Default warning set.\n  ReactiveElement.enabledWarnings = ['change-in-update'];\n  const ensureOwnWarnings = function (ctor: typeof ReactiveElement) {\n    if (\n      !ctor.hasOwnProperty(JSCompiler_renameProperty('enabledWarnings', ctor))\n    ) {\n      ctor.enabledWarnings = ctor.enabledWarnings!.slice();\n    }\n  };\n  ReactiveElement.enableWarning = function (\n    this: typeof ReactiveElement,\n    warning: WarningKind\n  ) {\n    ensureOwnWarnings(this);\n    if (this.enabledWarnings!.indexOf(warning) < 0) {\n      this.enabledWarnings!.push(warning);\n    }\n  };\n  ReactiveElement.disableWarning = function (\n    this: typeof ReactiveElement,\n    warning: WarningKind\n  ) {\n    ensureOwnWarnings(this);\n    const i = this.enabledWarnings!.indexOf(warning);\n    if (i >= 0) {\n      this.enabledWarnings!.splice(i, 1);\n    }\n  };\n}\n\n// IMPORTANT: do not change the property name or the assignment expression.\n// This line will be used in regexes to search for ReactiveElement usage.\n(global.reactiveElementVersions ??= []).push('1.4.1');\nif (DEV_MODE && global.reactiveElementVersions.length > 1) {\n  issueWarning!(\n    'multiple-versions',\n    `Multiple versions of Lit loaded. Loading multiple versions ` +\n      `is not recommended.`\n  );\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n * SPDX-License-Identifier: BSD-3-Clause\n */\n\n// IMPORTANT: these imports must be type-only\nimport type {Directive, DirectiveResult, PartInfo} from './directive.js';\n\nconst DEV_MODE = true;\nconst ENABLE_EXTRA_SECURITY_HOOKS = true;\nconst ENABLE_SHADYDOM_NOPATCH = true;\nconst NODE_MODE = false;\n// Use window for browser builds because IE11 doesn't have globalThis.\nconst global = NODE_MODE ? globalThis : window;\n\n/**\n * Contains types that are part of the unstable debug API.\n *\n * Everything in this API is not stable and may change or be removed in the future,\n * even on patch releases.\n */\n// eslint-disable-next-line @typescript-eslint/no-namespace\nexport namespace LitUnstable {\n  /**\n   * When Lit is running in dev mode and `window.emitLitDebugLogEvents` is true,\n   * we will emit 'lit-debug' events to window, with live details about the update and render\n   * lifecycle. These can be useful for writing debug tooling and visualizations.\n   *\n   * Please be aware that running with window.emitLitDebugLogEvents has performance overhead,\n   * making certain operations that are normally very cheap (like a no-op render) much slower,\n   * because we must copy data and dispatch events.\n   */\n  // eslint-disable-next-line @typescript-eslint/no-namespace\n  export namespace DebugLog {\n    export type Entry =\n      | TemplatePrep\n      | TemplateInstantiated\n      | TemplateInstantiatedAndUpdated\n      | TemplateUpdating\n      | BeginRender\n      | EndRender\n      | CommitPartEntry\n      | SetPartValue;\n    export interface TemplatePrep {\n      kind: 'template prep';\n      template: Template;\n      strings: TemplateStringsArray;\n      clonableTemplate: HTMLTemplateElement;\n      parts: TemplatePart[];\n    }\n    export interface BeginRender {\n      kind: 'begin render';\n      id: number;\n      value: unknown;\n      container: HTMLElement | DocumentFragment;\n      options: RenderOptions | undefined;\n      part: ChildPart | undefined;\n    }\n    export interface EndRender {\n      kind: 'end render';\n      id: number;\n      value: unknown;\n      container: HTMLElement | DocumentFragment;\n      options: RenderOptions | undefined;\n      part: ChildPart;\n    }\n    export interface TemplateInstantiated {\n      kind: 'template instantiated';\n      template: Template | CompiledTemplate;\n      instance: TemplateInstance;\n      options: RenderOptions | undefined;\n      fragment: Node;\n      parts: Array<Part | undefined>;\n      values: unknown[];\n    }\n    export interface TemplateInstantiatedAndUpdated {\n      kind: 'template instantiated and updated';\n      template: Template | CompiledTemplate;\n      instance: TemplateInstance;\n      options: RenderOptions | undefined;\n      fragment: Node;\n      parts: Array<Part | undefined>;\n      values: unknown[];\n    }\n    export interface TemplateUpdating {\n      kind: 'template updating';\n      template: Template | CompiledTemplate;\n      instance: TemplateInstance;\n      options: RenderOptions | undefined;\n      parts: Array<Part | undefined>;\n      values: unknown[];\n    }\n    export interface SetPartValue {\n      kind: 'set part';\n      part: Part;\n      value: unknown;\n      valueIndex: number;\n      values: unknown[];\n      templateInstance: TemplateInstance;\n    }\n\n    export type CommitPartEntry =\n      | CommitNothingToChildEntry\n      | CommitText\n      | CommitNode\n      | CommitAttribute\n      | CommitProperty\n      | CommitBooleanAttribute\n      | CommitEventListener\n      | CommitToElementBinding;\n\n    export interface CommitNothingToChildEntry {\n      kind: 'commit nothing to child';\n      start: ChildNode;\n      end: ChildNode | null;\n      parent: Disconnectable | undefined;\n      options: RenderOptions | undefined;\n    }\n\n    export interface CommitText {\n      kind: 'commit text';\n      node: Text;\n      value: unknown;\n      options: RenderOptions | undefined;\n    }\n\n    export interface CommitNode {\n      kind: 'commit node';\n      start: Node;\n      parent: Disconnectable | undefined;\n      value: Node;\n      options: RenderOptions | undefined;\n    }\n\n    export interface CommitAttribute {\n      kind: 'commit attribute';\n      element: Element;\n      name: string;\n      value: unknown;\n      options: RenderOptions | undefined;\n    }\n\n    export interface CommitProperty {\n      kind: 'commit property';\n      element: Element;\n      name: string;\n      value: unknown;\n      options: RenderOptions | undefined;\n    }\n\n    export interface CommitBooleanAttribute {\n      kind: 'commit boolean attribute';\n      element: Element;\n      name: string;\n      value: boolean;\n      options: RenderOptions | undefined;\n    }\n\n    export interface CommitEventListener {\n      kind: 'commit event listener';\n      element: Element;\n      name: string;\n      value: unknown;\n      oldListener: unknown;\n      options: RenderOptions | undefined;\n      // True if we're removing the old event listener (e.g. because settings changed, or value is nothing)\n      removeListener: boolean;\n      // True if we're adding a new event listener (e.g. because first render, or settings changed)\n      addListener: boolean;\n    }\n\n    export interface CommitToElementBinding {\n      kind: 'commit to element binding';\n      element: Element;\n      value: unknown;\n      options: RenderOptions | undefined;\n    }\n  }\n}\n\ninterface DebugLoggingWindow {\n  // Even in dev mode, we generally don't want to emit these events, as that's\n  // another level of cost, so only emit them when DEV_MODE is true _and_ when\n  // window.emitLitDebugEvents is true.\n  emitLitDebugLogEvents?: boolean;\n}\n\n/**\n * Useful for visualizing and logging insights into what the Lit template system is doing.\n *\n * Compiled out of prod mode builds.\n */\nconst debugLogEvent = DEV_MODE\n  ? (event: LitUnstable.DebugLog.Entry) => {\n      const shouldEmit = (global as unknown as DebugLoggingWindow)\n        .emitLitDebugLogEvents;\n      if (!shouldEmit) {\n        return;\n      }\n      global.dispatchEvent(\n        new CustomEvent<LitUnstable.DebugLog.Entry>('lit-debug', {\n          detail: event,\n        })\n      );\n    }\n  : undefined;\n// Used for connecting beginRender and endRender events when there are nested\n// renders when errors are thrown preventing an endRender event from being\n// called.\nlet debugLogRenderId = 0;\n\nlet issueWarning: (code: string, warning: string) => void;\n\nif (DEV_MODE) {\n  global.litIssuedWarnings ??= new Set();\n\n  // Issue a warning, if we haven't already.\n  issueWarning = (code: string, warning: string) => {\n    warning += code\n      ? ` See https://lit.dev/msg/${code} for more information.`\n      : '';\n    if (!global.litIssuedWarnings!.has(warning)) {\n      console.warn(warning);\n      global.litIssuedWarnings!.add(warning);\n    }\n  };\n\n  issueWarning(\n    'dev-mode',\n    `Lit is in dev mode. Not recommended for production!`\n  );\n}\n\nconst wrap =\n  ENABLE_SHADYDOM_NOPATCH &&\n  global.ShadyDOM?.inUse &&\n  global.ShadyDOM?.noPatch === true\n    ? global.ShadyDOM!.wrap\n    : (node: Node) => node;\n\nconst trustedTypes = (global as unknown as Partial<Window>).trustedTypes;\n\n/**\n * Our TrustedTypePolicy for HTML which is declared using the html template\n * tag function.\n *\n * That HTML is a developer-authored constant, and is parsed with innerHTML\n * before any untrusted expressions have been mixed in. Therefor it is\n * considered safe by construction.\n */\nconst policy = trustedTypes\n  ? trustedTypes.createPolicy('lit-html', {\n      createHTML: (s) => s,\n    })\n  : undefined;\n\n/**\n * Used to sanitize any value before it is written into the DOM. This can be\n * used to implement a security policy of allowed and disallowed values in\n * order to prevent XSS attacks.\n *\n * One way of using this callback would be to check attributes and properties\n * against a list of high risk fields, and require that values written to such\n * fields be instances of a class which is safe by construction. Closure's Safe\n * HTML Types is one implementation of this technique (\n * https://github.com/google/safe-html-types/blob/master/doc/safehtml-types.md).\n * The TrustedTypes polyfill in API-only mode could also be used as a basis\n * for this technique (https://github.com/WICG/trusted-types).\n *\n * @param node The HTML node (usually either a #text node or an Element) that\n *     is being written to. Note that this is just an exemplar node, the write\n *     may take place against another instance of the same class of node.\n * @param name The name of an attribute or property (for example, 'href').\n * @param type Indicates whether the write that's about to be performed will\n *     be to a property or a node.\n * @return A function that will sanitize this class of writes.\n */\nexport type SanitizerFactory = (\n  node: Node,\n  name: string,\n  type: 'property' | 'attribute'\n) => ValueSanitizer;\n\n/**\n * A function which can sanitize values that will be written to a specific kind\n * of DOM sink.\n *\n * See SanitizerFactory.\n *\n * @param value The value to sanitize. Will be the actual value passed into\n *     the lit-html template literal, so this could be of any type.\n * @return The value to write to the DOM. Usually the same as the input value,\n *     unless sanitization is needed.\n */\nexport type ValueSanitizer = (value: unknown) => unknown;\n\nconst identityFunction: ValueSanitizer = (value: unknown) => value;\nconst noopSanitizer: SanitizerFactory = (\n  _node: Node,\n  _name: string,\n  _type: 'property' | 'attribute'\n) => identityFunction;\n\n/** Sets the global sanitizer factory. */\nconst setSanitizer = (newSanitizer: SanitizerFactory) => {\n  if (!ENABLE_EXTRA_SECURITY_HOOKS) {\n    return;\n  }\n  if (sanitizerFactoryInternal !== noopSanitizer) {\n    throw new Error(\n      `Attempted to overwrite existing lit-html security policy.` +\n        ` setSanitizeDOMValueFactory should be called at most once.`\n    );\n  }\n  sanitizerFactoryInternal = newSanitizer;\n};\n\n/**\n * Only used in internal tests, not a part of the public API.\n */\nconst _testOnlyClearSanitizerFactoryDoNotCallOrElse = () => {\n  sanitizerFactoryInternal = noopSanitizer;\n};\n\nconst createSanitizer: SanitizerFactory = (node, name, type) => {\n  return sanitizerFactoryInternal(node, name, type);\n};\n\n// Added to an attribute name to mark the attribute as bound so we can find\n// it easily.\nconst boundAttributeSuffix = '$lit$';\n\n// This marker is used in many syntactic positions in HTML, so it must be\n// a valid element name and attribute name. We don't support dynamic names (yet)\n// but this at least ensures that the parse tree is closer to the template\n// intention.\nconst marker = `lit$${String(Math.random()).slice(9)}$`;\n\n// String used to tell if a comment is a marker comment\nconst markerMatch = '?' + marker;\n\n// Text used to insert a comment marker node. We use processing instruction\n// syntax because it's slightly smaller, but parses as a comment node.\nconst nodeMarker = `<${markerMatch}>`;\n\nconst d =\n  NODE_MODE && global.document === undefined\n    ? ({\n        createTreeWalker() {\n          return {};\n        },\n      } as unknown as Document)\n    : document;\n\n// Creates a dynamic marker. We never have to search for these in the DOM.\nconst createMarker = (v = '') => d.createComment(v);\n\n// https://tc39.github.io/ecma262/#sec-typeof-operator\ntype Primitive = null | undefined | boolean | number | string | symbol | bigint;\nconst isPrimitive = (value: unknown): value is Primitive =>\n  value === null || (typeof value != 'object' && typeof value != 'function');\nconst isArray = Array.isArray;\nconst isIterable = (value: unknown): value is Iterable<unknown> =>\n  isArray(value) ||\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  typeof (value as any)?.[Symbol.iterator] === 'function';\n\nconst SPACE_CHAR = `[ \\t\\n\\f\\r]`;\nconst ATTR_VALUE_CHAR = `[^ \\t\\n\\f\\r\"'\\`<>=]`;\nconst NAME_CHAR = `[^\\\\s\"'>=/]`;\n\n// These regexes represent the five parsing states that we care about in the\n// Template's HTML scanner. They match the *end* of the state they're named\n// after.\n// Depending on the match, we transition to a new state. If there's no match,\n// we stay in the same state.\n// Note that the regexes are stateful. We utilize lastIndex and sync it\n// across the multiple regexes used. In addition to the five regexes below\n// we also dynamically create a regex to find the matching end tags for raw\n// text elements.\n\n/**\n * End of text is: `<` followed by:\n *   (comment start) or (tag) or (dynamic tag binding)\n */\nconst textEndRegex = /<(?:(!--|\\/[^a-zA-Z])|(\\/?[a-zA-Z][^>\\s]*)|(\\/?$))/g;\nconst COMMENT_START = 1;\nconst TAG_NAME = 2;\nconst DYNAMIC_TAG_NAME = 3;\n\nconst commentEndRegex = /-->/g;\n/**\n * Comments not started with <!--, like </{, can be ended by a single `>`\n */\nconst comment2EndRegex = />/g;\n\n/**\n * The tagEnd regex matches the end of the \"inside an opening\" tag syntax\n * position. It either matches a `>`, an attribute-like sequence, or the end\n * of the string after a space (attribute-name position ending).\n *\n * See attributes in the HTML spec:\n * https://www.w3.org/TR/html5/syntax.html#elements-attributes\n *\n * \" \\t\\n\\f\\r\" are HTML space characters:\n * https://infra.spec.whatwg.org/#ascii-whitespace\n *\n * So an attribute is:\n *  * The name: any character except a whitespace character, (\"), ('), \">\",\n *    \"=\", or \"/\". Note: this is different from the HTML spec which also excludes control characters.\n *  * Followed by zero or more space characters\n *  * Followed by \"=\"\n *  * Followed by zero or more space characters\n *  * Followed by:\n *    * Any character except space, ('), (\"), \"<\", \">\", \"=\", (`), or\n *    * (\") then any non-(\"), or\n *    * (') then any non-(')\n */\nconst tagEndRegex = new RegExp(\n  `>|${SPACE_CHAR}(?:(${NAME_CHAR}+)(${SPACE_CHAR}*=${SPACE_CHAR}*(?:${ATTR_VALUE_CHAR}|(\"|')|))|$)`,\n  'g'\n);\nconst ENTIRE_MATCH = 0;\nconst ATTRIBUTE_NAME = 1;\nconst SPACES_AND_EQUALS = 2;\nconst QUOTE_CHAR = 3;\n\nconst singleQuoteAttrEndRegex = /'/g;\nconst doubleQuoteAttrEndRegex = /\"/g;\n/**\n * Matches the raw text elements.\n *\n * Comments are not parsed within raw text elements, so we need to search their\n * text content for marker strings.\n */\nconst rawTextElement = /^(?:script|style|textarea|title)$/i;\n\n/** TemplateResult types */\nconst HTML_RESULT = 1;\nconst SVG_RESULT = 2;\n\ntype ResultType = typeof HTML_RESULT | typeof SVG_RESULT;\n\n// TemplatePart types\n// IMPORTANT: these must match the values in PartType\nconst ATTRIBUTE_PART = 1;\nconst CHILD_PART = 2;\nconst PROPERTY_PART = 3;\nconst BOOLEAN_ATTRIBUTE_PART = 4;\nconst EVENT_PART = 5;\nconst ELEMENT_PART = 6;\nconst COMMENT_PART = 7;\n\n/**\n * The return type of the template tag functions, {@linkcode html} and\n * {@linkcode svg}.\n *\n * A `TemplateResult` object holds all the information about a template\n * expression required to render it: the template strings, expression values,\n * and type of template (html or svg).\n *\n * `TemplateResult` objects do not create any DOM on their own. To create or\n * update DOM you need to render the `TemplateResult`. See\n * [Rendering](https://lit.dev/docs/components/rendering) for more information.\n *\n */\nexport type TemplateResult<T extends ResultType = ResultType> = {\n  // This property needs to remain unminified.\n  ['_$litType$']: T;\n  strings: TemplateStringsArray;\n  values: unknown[];\n};\n\nexport type HTMLTemplateResult = TemplateResult<typeof HTML_RESULT>;\n\nexport type SVGTemplateResult = TemplateResult<typeof SVG_RESULT>;\n\nexport interface CompiledTemplateResult {\n  // This is a factory in order to make template initialization lazy\n  // and allow ShadyRenderOptions scope to be passed in.\n  // This property needs to remain unminified.\n  ['_$litType$']: CompiledTemplate;\n  values: unknown[];\n}\n\nexport interface CompiledTemplate extends Omit<Template, 'el'> {\n  // el is overridden to be optional. We initialize it on first render\n  el?: HTMLTemplateElement;\n\n  // The prepared HTML string to create a template element from.\n  h: TrustedHTML;\n}\n\n/**\n * Generates a template literal tag function that returns a TemplateResult with\n * the given result type.\n */\nconst tag =\n  <T extends ResultType>(type: T) =>\n  (strings: TemplateStringsArray, ...values: unknown[]): TemplateResult<T> => {\n    // Warn against templates octal escape sequences\n    // We do this here rather than in render so that the warning is closer to the\n    // template definition.\n    if (DEV_MODE && strings.some((s) => s === undefined)) {\n      console.warn(\n        'Some template strings are undefined.\\n' +\n          'This is probably caused by illegal octal escape sequences.'\n      );\n    }\n    return {\n      // This property needs to remain unminified.\n      ['_$litType$']: type,\n      strings,\n      values,\n    };\n  };\n\n/**\n * Interprets a template literal as an HTML template that can efficiently\n * render to and update a container.\n *\n * ```ts\n * const header = (title: string) => html`<h1>${title}</h1>`;\n * ```\n *\n * The `html` tag returns a description of the DOM to render as a value. It is\n * lazy, meaning no work is done until the template is rendered. When rendering,\n * if a template comes from the same expression as a previously rendered result,\n * it's efficiently updated instead of replaced.\n */\nexport const html = tag(HTML_RESULT);\n\n/**\n * Interprets a template literal as an SVG fragment that can efficiently\n * render to and update a container.\n *\n * ```ts\n * const rect = svg`<rect width=\"10\" height=\"10\"></rect>`;\n *\n * const myImage = html`\n *   <svg viewBox=\"0 0 10 10\" xmlns=\"http://www.w3.org/2000/svg\">\n *     ${rect}\n *   </svg>`;\n * ```\n *\n * The `svg` *tag function* should only be used for SVG fragments, or elements\n * that would be contained **inside** an `<svg>` HTML element. A common error is\n * placing an `<svg>` *element* in a template tagged with the `svg` tag\n * function. The `<svg>` element is an HTML element and should be used within a\n * template tagged with the {@linkcode html} tag function.\n *\n * In LitElement usage, it's invalid to return an SVG fragment from the\n * `render()` method, as the SVG fragment will be contained within the element's\n * shadow root and thus cannot be used within an `<svg>` HTML element.\n */\nexport const svg = tag(SVG_RESULT);\n\n/**\n * A sentinel value that signals that a value was handled by a directive and\n * should not be written to the DOM.\n */\nexport const noChange = Symbol.for('lit-noChange');\n\n/**\n * A sentinel value that signals a ChildPart to fully clear its content.\n *\n * ```ts\n * const button = html`${\n *  user.isAdmin\n *    ? html`<button>DELETE</button>`\n *    : nothing\n * }`;\n * ```\n *\n * Prefer using `nothing` over other falsy values as it provides a consistent\n * behavior between various expression binding contexts.\n *\n * In child expressions, `undefined`, `null`, `''`, and `nothing` all behave the\n * same and render no nodes. In attribute expressions, `nothing` _removes_ the\n * attribute, while `undefined` and `null` will render an empty string. In\n * property expressions `nothing` becomes `undefined`.\n */\nexport const nothing = Symbol.for('lit-nothing');\n\n/**\n * The cache of prepared templates, keyed by the tagged TemplateStringsArray\n * and _not_ accounting for the specific template tag used. This means that\n * template tags cannot be dynamic - the must statically be one of html, svg,\n * or attr. This restriction simplifies the cache lookup, which is on the hot\n * path for rendering.\n */\nconst templateCache = new WeakMap<TemplateStringsArray, Template>();\n\n/**\n * Object specifying options for controlling lit-html rendering. Note that\n * while `render` may be called multiple times on the same `container` (and\n * `renderBefore` reference node) to efficiently update the rendered content,\n * only the options passed in during the first render are respected during\n * the lifetime of renders to that unique `container` + `renderBefore`\n * combination.\n */\nexport interface RenderOptions {\n  /**\n   * An object to use as the `this` value for event listeners. It's often\n   * useful to set this to the host component rendering a template.\n   */\n  host?: object;\n  /**\n   * A DOM node before which to render content in the container.\n   */\n  renderBefore?: ChildNode | null;\n  /**\n   * Node used for cloning the template (`importNode` will be called on this\n   * node). This controls the `ownerDocument` of the rendered DOM, along with\n   * any inherited context. Defaults to the global `document`.\n   */\n  creationScope?: {importNode(node: Node, deep?: boolean): Node};\n  /**\n   * The initial connected state for the top-level part being rendered. If no\n   * `isConnected` option is set, `AsyncDirective`s will be connected by\n   * default. Set to `false` if the initial render occurs in a disconnected tree\n   * and `AsyncDirective`s should see `isConnected === false` for their initial\n   * render. The `part.setConnected()` method must be used subsequent to initial\n   * render to change the connected state of the part.\n   */\n  isConnected?: boolean;\n}\n\n/**\n * Renders a value, usually a lit-html TemplateResult, to the container.\n *\n * This example renders the text \"Hello, Zoe!\" inside a paragraph tag, appending\n * it to the container `document.body`.\n *\n * ```js\n * import {html, render} from 'lit';\n *\n * const name = \"Zoe\";\n * render(html`<p>Hello, ${name}!</p>`, document.body);\n * ```\n *\n * @param value Any [renderable\n *   value](https://lit.dev/docs/templates/expressions/#child-expressions),\n *   typically a {@linkcode TemplateResult} created by evaluating a template tag\n *   like {@linkcode html} or {@linkcode svg}.\n * @param container A DOM container to render to. The first render will append\n *   the rendered value to the container, and subsequent renders will\n *   efficiently update the rendered value if the same result type was\n *   previously rendered there.\n * @param options See {@linkcode RenderOptions} for options documentation.\n * @see\n * {@link https://lit.dev/docs/libraries/standalone-templates/#rendering-lit-html-templates| Rendering Lit HTML Templates}\n */\nexport const render = (\n  value: unknown,\n  container: HTMLElement | DocumentFragment,\n  options?: RenderOptions\n): RootPart => {\n  if (DEV_MODE && container == null) {\n    // Give a clearer error message than\n    //     Uncaught TypeError: Cannot read properties of null (reading\n    //     '_$litPart$')\n    // which reads like an internal Lit error.\n    throw new TypeError(`The container to render into may not be ${container}`);\n  }\n  const renderId = DEV_MODE ? debugLogRenderId++ : 0;\n  const partOwnerNode = options?.renderBefore ?? container;\n  // This property needs to remain unminified.\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  let part: ChildPart = (partOwnerNode as any)['_$litPart$'];\n  debugLogEvent?.({\n    kind: 'begin render',\n    id: renderId,\n    value,\n    container,\n    options,\n    part,\n  });\n  if (part === undefined) {\n    const endNode = options?.renderBefore ?? null;\n    // This property needs to remain unminified.\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    (partOwnerNode as any)['_$litPart$'] = part = new ChildPart(\n      container.insertBefore(createMarker(), endNode),\n      endNode,\n      undefined,\n      options ?? {}\n    );\n  }\n  part._$setValue(value);\n  debugLogEvent?.({\n    kind: 'end render',\n    id: renderId,\n    value,\n    container,\n    options,\n    part,\n  });\n  return part as RootPart;\n};\n\nif (ENABLE_EXTRA_SECURITY_HOOKS) {\n  render.setSanitizer = setSanitizer;\n  render.createSanitizer = createSanitizer;\n  if (DEV_MODE) {\n    render._testOnlyClearSanitizerFactoryDoNotCallOrElse =\n      _testOnlyClearSanitizerFactoryDoNotCallOrElse;\n  }\n}\n\nconst walker = d.createTreeWalker(\n  d,\n  129 /* NodeFilter.SHOW_{ELEMENT|COMMENT} */,\n  null,\n  false\n);\n\nlet sanitizerFactoryInternal: SanitizerFactory = noopSanitizer;\n\n//\n// Classes only below here, const variable declarations only above here...\n//\n// Keeping variable declarations and classes together improves minification.\n// Interfaces and type aliases can be interleaved freely.\n//\n\n// Type for classes that have a `_directive` or `_directives[]` field, used by\n// `resolveDirective`\nexport interface DirectiveParent {\n  _$parent?: DirectiveParent;\n  _$isConnected: boolean;\n  __directive?: Directive;\n  __directives?: Array<Directive | undefined>;\n}\n\n/**\n * Returns an HTML string for the given TemplateStringsArray and result type\n * (HTML or SVG), along with the case-sensitive bound attribute names in\n * template order. The HTML contains comment markers denoting the `ChildPart`s\n * and suffixes on bound attributes denoting the `AttributeParts`.\n *\n * @param strings template strings array\n * @param type HTML or SVG\n * @return Array containing `[html, attrNames]` (array returned for terseness,\n *     to avoid object fields since this code is shared with non-minified SSR\n *     code)\n */\nconst getTemplateHtml = (\n  strings: TemplateStringsArray,\n  type: ResultType\n): [TrustedHTML, Array<string | undefined>] => {\n  // Insert makers into the template HTML to represent the position of\n  // bindings. The following code scans the template strings to determine the\n  // syntactic position of the bindings. They can be in text position, where\n  // we insert an HTML comment, attribute value position, where we insert a\n  // sentinel string and re-write the attribute name, or inside a tag where\n  // we insert the sentinel string.\n  const l = strings.length - 1;\n  // Stores the case-sensitive bound attribute names in the order of their\n  // parts. ElementParts are also reflected in this array as undefined\n  // rather than a string, to disambiguate from attribute bindings.\n  const attrNames: Array<string | undefined> = [];\n  let html = type === SVG_RESULT ? '<svg>' : '';\n\n  // When we're inside a raw text tag (not it's text content), the regex\n  // will still be tagRegex so we can find attributes, but will switch to\n  // this regex when the tag ends.\n  let rawTextEndRegex: RegExp | undefined;\n\n  // The current parsing state, represented as a reference to one of the\n  // regexes\n  let regex = textEndRegex;\n\n  for (let i = 0; i < l; i++) {\n    const s = strings[i];\n    // The index of the end of the last attribute name. When this is\n    // positive at end of a string, it means we're in an attribute value\n    // position and need to rewrite the attribute name.\n    // We also use a special value of -2 to indicate that we encountered\n    // the end of a string in attribute name position.\n    let attrNameEndIndex = -1;\n    let attrName: string | undefined;\n    let lastIndex = 0;\n    let match!: RegExpExecArray | null;\n\n    // The conditions in this loop handle the current parse state, and the\n    // assignments to the `regex` variable are the state transitions.\n    while (lastIndex < s.length) {\n      // Make sure we start searching from where we previously left off\n      regex.lastIndex = lastIndex;\n      match = regex.exec(s);\n      if (match === null) {\n        break;\n      }\n      lastIndex = regex.lastIndex;\n      if (regex === textEndRegex) {\n        if (match[COMMENT_START] === '!--') {\n          regex = commentEndRegex;\n        } else if (match[COMMENT_START] !== undefined) {\n          // We started a weird comment, like </{\n          regex = comment2EndRegex;\n        } else if (match[TAG_NAME] !== undefined) {\n          if (rawTextElement.test(match[TAG_NAME])) {\n            // Record if we encounter a raw-text element. We'll switch to\n            // this regex at the end of the tag.\n            rawTextEndRegex = new RegExp(`</${match[TAG_NAME]}`, 'g');\n          }\n          regex = tagEndRegex;\n        } else if (match[DYNAMIC_TAG_NAME] !== undefined) {\n          if (DEV_MODE) {\n            throw new Error(\n              'Bindings in tag names are not supported. Please use static templates instead. ' +\n                'See https://lit.dev/docs/templates/expressions/#static-expressions'\n            );\n          }\n          regex = tagEndRegex;\n        }\n      } else if (regex === tagEndRegex) {\n        if (match[ENTIRE_MATCH] === '>') {\n          // End of a tag. If we had started a raw-text element, use that\n          // regex\n          regex = rawTextEndRegex ?? textEndRegex;\n          // We may be ending an unquoted attribute value, so make sure we\n          // clear any pending attrNameEndIndex\n          attrNameEndIndex = -1;\n        } else if (match[ATTRIBUTE_NAME] === undefined) {\n          // Attribute name position\n          attrNameEndIndex = -2;\n        } else {\n          attrNameEndIndex = regex.lastIndex - match[SPACES_AND_EQUALS].length;\n          attrName = match[ATTRIBUTE_NAME];\n          regex =\n            match[QUOTE_CHAR] === undefined\n              ? tagEndRegex\n              : match[QUOTE_CHAR] === '\"'\n              ? doubleQuoteAttrEndRegex\n              : singleQuoteAttrEndRegex;\n        }\n      } else if (\n        regex === doubleQuoteAttrEndRegex ||\n        regex === singleQuoteAttrEndRegex\n      ) {\n        regex = tagEndRegex;\n      } else if (regex === commentEndRegex || regex === comment2EndRegex) {\n        regex = textEndRegex;\n      } else {\n        // Not one of the five state regexes, so it must be the dynamically\n        // created raw text regex and we're at the close of that element.\n        regex = tagEndRegex;\n        rawTextEndRegex = undefined;\n      }\n    }\n\n    if (DEV_MODE) {\n      // If we have a attrNameEndIndex, which indicates that we should\n      // rewrite the attribute name, assert that we're in a valid attribute\n      // position - either in a tag, or a quoted attribute value.\n      console.assert(\n        attrNameEndIndex === -1 ||\n          regex === tagEndRegex ||\n          regex === singleQuoteAttrEndRegex ||\n          regex === doubleQuoteAttrEndRegex,\n        'unexpected parse state B'\n      );\n    }\n\n    // We have four cases:\n    //  1. We're in text position, and not in a raw text element\n    //     (regex === textEndRegex): insert a comment marker.\n    //  2. We have a non-negative attrNameEndIndex which means we need to\n    //     rewrite the attribute name to add a bound attribute suffix.\n    //  3. We're at the non-first binding in a multi-binding attribute, use a\n    //     plain marker.\n    //  4. We're somewhere else inside the tag. If we're in attribute name\n    //     position (attrNameEndIndex === -2), add a sequential suffix to\n    //     generate a unique attribute name.\n\n    // Detect a binding next to self-closing tag end and insert a space to\n    // separate the marker from the tag end:\n    const end =\n      regex === tagEndRegex && strings[i + 1].startsWith('/>') ? ' ' : '';\n    html +=\n      regex === textEndRegex\n        ? s + nodeMarker\n        : attrNameEndIndex >= 0\n        ? (attrNames.push(attrName!),\n          s.slice(0, attrNameEndIndex) +\n            boundAttributeSuffix +\n            s.slice(attrNameEndIndex)) +\n          marker +\n          end\n        : s +\n          marker +\n          (attrNameEndIndex === -2 ? (attrNames.push(undefined), i) : end);\n  }\n\n  const htmlResult: string | TrustedHTML =\n    html + (strings[l] || '<?>') + (type === SVG_RESULT ? '</svg>' : '');\n\n  // A security check to prevent spoofing of Lit template results.\n  // In the future, we may be able to replace this with Array.isTemplateObject,\n  // though we might need to make that check inside of the html and svg\n  // functions, because precompiled templates don't come in as\n  // TemplateStringArray objects.\n  if (!Array.isArray(strings) || !strings.hasOwnProperty('raw')) {\n    let message = 'invalid template strings array';\n    if (DEV_MODE) {\n      message = `\n          Internal Error: expected template strings to be an array\n          with a 'raw' field. Faking a template strings array by\n          calling html or svg like an ordinary function is effectively\n          the same as calling unsafeHtml and can lead to major security\n          issues, e.g. opening your code up to XSS attacks.\n\n          If you're using the html or svg tagged template functions normally\n          and and still seeing this error, please file a bug at\n          https://github.com/lit/lit/issues/new?template=bug_report.md\n          and include information about your build tooling, if any.\n        `\n        .trim()\n        .replace(/\\n */g, '\\n');\n    }\n    throw new Error(message);\n  }\n  // Returned as an array for terseness\n  return [\n    policy !== undefined\n      ? policy.createHTML(htmlResult)\n      : (htmlResult as unknown as TrustedHTML),\n    attrNames,\n  ];\n};\n\n/** @internal */\nexport type {Template};\nclass Template {\n  /** @internal */\n  el!: HTMLTemplateElement;\n  /** @internal */\n  parts: Array<TemplatePart> = [];\n\n  constructor(\n    // This property needs to remain unminified.\n    {strings, ['_$litType$']: type}: TemplateResult,\n    options?: RenderOptions\n  ) {\n    let node: Node | null;\n    let nodeIndex = 0;\n    let attrNameIndex = 0;\n    const partCount = strings.length - 1;\n    const parts = this.parts;\n\n    // Create template element\n    const [html, attrNames] = getTemplateHtml(strings, type);\n    this.el = Template.createElement(html, options);\n    walker.currentNode = this.el.content;\n\n    // Reparent SVG nodes into template root\n    if (type === SVG_RESULT) {\n      const content = this.el.content;\n      const svgElement = content.firstChild!;\n      svgElement.remove();\n      content.append(...svgElement.childNodes);\n    }\n\n    // Walk the template to find binding markers and create TemplateParts\n    while ((node = walker.nextNode()) !== null && parts.length < partCount) {\n      if (node.nodeType === 1) {\n        if (DEV_MODE) {\n          const tag = (node as Element).localName;\n          // Warn if `textarea` includes an expression and throw if `template`\n          // does since these are not supported. We do this by checking\n          // innerHTML for anything that looks like a marker. This catches\n          // cases like bindings in textarea there markers turn into text nodes.\n          if (\n            /^(?:textarea|template)$/i!.test(tag) &&\n            (node as Element).innerHTML.includes(marker)\n          ) {\n            const m =\n              `Expressions are not supported inside \\`${tag}\\` ` +\n              `elements. See https://lit.dev/msg/expression-in-${tag} for more ` +\n              `information.`;\n            if (tag === 'template') {\n              throw new Error(m);\n            } else issueWarning('', m);\n          }\n        }\n        // TODO (justinfagnani): for attempted dynamic tag names, we don't\n        // increment the bindingIndex, and it'll be off by 1 in the element\n        // and off by two after it.\n        if ((node as Element).hasAttributes()) {\n          // We defer removing bound attributes because on IE we might not be\n          // iterating attributes in their template order, and would sometimes\n          // remove an attribute that we still need to create a part for.\n          const attrsToRemove = [];\n          for (const name of (node as Element).getAttributeNames()) {\n            // `name` is the name of the attribute we're iterating over, but not\n            // _neccessarily_ the name of the attribute we will create a part\n            // for. They can be different in browsers that don't iterate on\n            // attributes in source order. In that case the attrNames array\n            // contains the attribute name we'll process next. We only need the\n            // attribute name here to know if we should process a bound attribute\n            // on this element.\n            if (\n              name.endsWith(boundAttributeSuffix) ||\n              name.startsWith(marker)\n            ) {\n              const realName = attrNames[attrNameIndex++];\n              attrsToRemove.push(name);\n              if (realName !== undefined) {\n                // Lowercase for case-sensitive SVG attributes like viewBox\n                const value = (node as Element).getAttribute(\n                  realName.toLowerCase() + boundAttributeSuffix\n                )!;\n                const statics = value.split(marker);\n                const m = /([.?@])?(.*)/.exec(realName)!;\n                parts.push({\n                  type: ATTRIBUTE_PART,\n                  index: nodeIndex,\n                  name: m[2],\n                  strings: statics,\n                  ctor:\n                    m[1] === '.'\n                      ? PropertyPart\n                      : m[1] === '?'\n                      ? BooleanAttributePart\n                      : m[1] === '@'\n                      ? EventPart\n                      : AttributePart,\n                });\n              } else {\n                parts.push({\n                  type: ELEMENT_PART,\n                  index: nodeIndex,\n                });\n              }\n            }\n          }\n          for (const name of attrsToRemove) {\n            (node as Element).removeAttribute(name);\n          }\n        }\n        // TODO (justinfagnani): benchmark the regex against testing for each\n        // of the 3 raw text element names.\n        if (rawTextElement.test((node as Element).tagName)) {\n          // For raw text elements we need to split the text content on\n          // markers, create a Text node for each segment, and create\n          // a TemplatePart for each marker.\n          const strings = (node as Element).textContent!.split(marker);\n          const lastIndex = strings.length - 1;\n          if (lastIndex > 0) {\n            (node as Element).textContent = trustedTypes\n              ? (trustedTypes.emptyScript as unknown as '')\n              : '';\n            // Generate a new text node for each literal section\n            // These nodes are also used as the markers for node parts\n            // We can't use empty text nodes as markers because they're\n            // normalized when cloning in IE (could simplify when\n            // IE is no longer supported)\n            for (let i = 0; i < lastIndex; i++) {\n              (node as Element).append(strings[i], createMarker());\n              // Walk past the marker node we just added\n              walker.nextNode();\n              parts.push({type: CHILD_PART, index: ++nodeIndex});\n            }\n            // Note because this marker is added after the walker's current\n            // node, it will be walked to in the outer loop (and ignored), so\n            // we don't need to adjust nodeIndex here\n            (node as Element).append(strings[lastIndex], createMarker());\n          }\n        }\n      } else if (node.nodeType === 8) {\n        const data = (node as Comment).data;\n        if (data === markerMatch) {\n          parts.push({type: CHILD_PART, index: nodeIndex});\n        } else {\n          let i = -1;\n          while ((i = (node as Comment).data.indexOf(marker, i + 1)) !== -1) {\n            // Comment node has a binding marker inside, make an inactive part\n            // The binding won't work, but subsequent bindings will\n            parts.push({type: COMMENT_PART, index: nodeIndex});\n            // Move to the end of the match\n            i += marker.length - 1;\n          }\n        }\n      }\n      nodeIndex++;\n    }\n    debugLogEvent?.({\n      kind: 'template prep',\n      template: this,\n      clonableTemplate: this.el,\n      parts: this.parts,\n      strings,\n    });\n  }\n\n  // Overridden via `litHtmlPolyfillSupport` to provide platform support.\n  /** @nocollapse */\n  static createElement(html: TrustedHTML, _options?: RenderOptions) {\n    const el = d.createElement('template');\n    el.innerHTML = html as unknown as string;\n    return el;\n  }\n}\n\nexport interface Disconnectable {\n  _$parent?: Disconnectable;\n  _$disconnectableChildren?: Set<Disconnectable>;\n  // Rather than hold connection state on instances, Disconnectables recursively\n  // fetch the connection state from the RootPart they are connected in via\n  // getters up the Disconnectable tree via _$parent references. This pushes the\n  // cost of tracking the isConnected state to `AsyncDirectives`, and avoids\n  // needing to pass all Disconnectables (parts, template instances, and\n  // directives) their connection state each time it changes, which would be\n  // costly for trees that have no AsyncDirectives.\n  _$isConnected: boolean;\n}\n\nfunction resolveDirective(\n  part: ChildPart | AttributePart | ElementPart,\n  value: unknown,\n  parent: DirectiveParent = part,\n  attributeIndex?: number\n): unknown {\n  // Bail early if the value is explicitly noChange. Note, this means any\n  // nested directive is still attached and is not run.\n  if (value === noChange) {\n    return value;\n  }\n  let currentDirective =\n    attributeIndex !== undefined\n      ? (parent as AttributePart).__directives?.[attributeIndex]\n      : (parent as ChildPart | ElementPart | Directive).__directive;\n  const nextDirectiveConstructor = isPrimitive(value)\n    ? undefined\n    : // This property needs to remain unminified.\n      (value as DirectiveResult)['_$litDirective$'];\n  if (currentDirective?.constructor !== nextDirectiveConstructor) {\n    // This property needs to remain unminified.\n    currentDirective?.['_$notifyDirectiveConnectionChanged']?.(false);\n    if (nextDirectiveConstructor === undefined) {\n      currentDirective = undefined;\n    } else {\n      currentDirective = new nextDirectiveConstructor(part as PartInfo);\n      currentDirective._$initialize(part, parent, attributeIndex);\n    }\n    if (attributeIndex !== undefined) {\n      ((parent as AttributePart).__directives ??= [])[attributeIndex] =\n        currentDirective;\n    } else {\n      (parent as ChildPart | Directive).__directive = currentDirective;\n    }\n  }\n  if (currentDirective !== undefined) {\n    value = resolveDirective(\n      part,\n      currentDirective._$resolve(part, (value as DirectiveResult).values),\n      currentDirective,\n      attributeIndex\n    );\n  }\n  return value;\n}\n\n/**\n * An updateable instance of a Template. Holds references to the Parts used to\n * update the template instance.\n */\nclass TemplateInstance implements Disconnectable {\n  /** @internal */\n  _$template: Template;\n  /** @internal */\n  _parts: Array<Part | undefined> = [];\n\n  /** @internal */\n  _$parent: ChildPart;\n  /** @internal */\n  _$disconnectableChildren?: Set<Disconnectable> = undefined;\n\n  constructor(template: Template, parent: ChildPart) {\n    this._$template = template;\n    this._$parent = parent;\n  }\n\n  // Called by ChildPart parentNode getter\n  get parentNode() {\n    return this._$parent.parentNode;\n  }\n\n  // See comment in Disconnectable interface for why this is a getter\n  get _$isConnected() {\n    return this._$parent._$isConnected;\n  }\n\n  // This method is separate from the constructor because we need to return a\n  // DocumentFragment and we don't want to hold onto it with an instance field.\n  _clone(options: RenderOptions | undefined) {\n    const {\n      el: {content},\n      parts: parts,\n    } = this._$template;\n    const fragment = (options?.creationScope ?? d).importNode(content, true);\n    walker.currentNode = fragment;\n\n    let node = walker.nextNode()!;\n    let nodeIndex = 0;\n    let partIndex = 0;\n    let templatePart = parts[0];\n\n    while (templatePart !== undefined) {\n      if (nodeIndex === templatePart.index) {\n        let part: Part | undefined;\n        if (templatePart.type === CHILD_PART) {\n          part = new ChildPart(\n            node as HTMLElement,\n            node.nextSibling,\n            this,\n            options\n          );\n        } else if (templatePart.type === ATTRIBUTE_PART) {\n          part = new templatePart.ctor(\n            node as HTMLElement,\n            templatePart.name,\n            templatePart.strings,\n            this,\n            options\n          );\n        } else if (templatePart.type === ELEMENT_PART) {\n          part = new ElementPart(node as HTMLElement, this, options);\n        }\n        this._parts.push(part);\n        templatePart = parts[++partIndex];\n      }\n      if (nodeIndex !== templatePart?.index) {\n        node = walker.nextNode()!;\n        nodeIndex++;\n      }\n    }\n    return fragment;\n  }\n\n  _update(values: Array<unknown>) {\n    let i = 0;\n    for (const part of this._parts) {\n      if (part !== undefined) {\n        debugLogEvent?.({\n          kind: 'set part',\n          part,\n          value: values[i],\n          valueIndex: i,\n          values,\n          templateInstance: this,\n        });\n        if ((part as AttributePart).strings !== undefined) {\n          (part as AttributePart)._$setValue(values, part as AttributePart, i);\n          // The number of values the part consumes is part.strings.length - 1\n          // since values are in between template spans. We increment i by 1\n          // later in the loop, so increment it by part.strings.length - 2 here\n          i += (part as AttributePart).strings!.length - 2;\n        } else {\n          part._$setValue(values[i]);\n        }\n      }\n      i++;\n    }\n  }\n}\n\n/*\n * Parts\n */\ntype AttributeTemplatePart = {\n  readonly type: typeof ATTRIBUTE_PART;\n  readonly index: number;\n  readonly name: string;\n  /** @internal */\n  readonly ctor: typeof AttributePart;\n  /** @internal */\n  readonly strings: ReadonlyArray<string>;\n};\ntype NodeTemplatePart = {\n  readonly type: typeof CHILD_PART;\n  readonly index: number;\n};\ntype ElementTemplatePart = {\n  readonly type: typeof ELEMENT_PART;\n  readonly index: number;\n};\ntype CommentTemplatePart = {\n  readonly type: typeof COMMENT_PART;\n  readonly index: number;\n};\n\n/**\n * A TemplatePart represents a dynamic part in a template, before the template\n * is instantiated. When a template is instantiated Parts are created from\n * TemplateParts.\n */\ntype TemplatePart =\n  | NodeTemplatePart\n  | AttributeTemplatePart\n  | ElementTemplatePart\n  | CommentTemplatePart;\n\nexport type Part =\n  | ChildPart\n  | AttributePart\n  | PropertyPart\n  | BooleanAttributePart\n  | ElementPart\n  | EventPart;\n\nexport type {ChildPart};\nclass ChildPart implements Disconnectable {\n  readonly type = CHILD_PART;\n  readonly options: RenderOptions | undefined;\n  _$committedValue: unknown = nothing;\n  /** @internal */\n  __directive?: Directive;\n  /** @internal */\n  _$startNode: ChildNode;\n  /** @internal */\n  _$endNode: ChildNode | null;\n  private _textSanitizer: ValueSanitizer | undefined;\n  /** @internal */\n  _$parent: Disconnectable | undefined;\n  /**\n   * Connection state for RootParts only (i.e. ChildPart without _$parent\n   * returned from top-level `render`). This field is unsed otherwise. The\n   * intention would clearer if we made `RootPart` a subclass of `ChildPart`\n   * with this field (and a different _$isConnected getter), but the subclass\n   * caused a perf regression, possibly due to making call sites polymorphic.\n   * @internal\n   */\n  __isConnected: boolean;\n\n  // See comment in Disconnectable interface for why this is a getter\n  get _$isConnected() {\n    // ChildParts that are not at the root should always be created with a\n    // parent; only RootChildNode's won't, so they return the local isConnected\n    // state\n    return this._$parent?._$isConnected ?? this.__isConnected;\n  }\n\n  // The following fields will be patched onto ChildParts when required by\n  // AsyncDirective\n  /** @internal */\n  _$disconnectableChildren?: Set<Disconnectable> = undefined;\n  /** @internal */\n  _$notifyConnectionChanged?(\n    isConnected: boolean,\n    removeFromParent?: boolean,\n    from?: number\n  ): void;\n  /** @internal */\n  _$reparentDisconnectables?(parent: Disconnectable): void;\n\n  constructor(\n    startNode: ChildNode,\n    endNode: ChildNode | null,\n    parent: TemplateInstance | ChildPart | undefined,\n    options: RenderOptions | undefined\n  ) {\n    this._$startNode = startNode;\n    this._$endNode = endNode;\n    this._$parent = parent;\n    this.options = options;\n    // Note __isConnected is only ever accessed on RootParts (i.e. when there is\n    // no _$parent); the value on a non-root-part is \"don't care\", but checking\n    // for parent would be more code\n    this.__isConnected = options?.isConnected ?? true;\n    if (ENABLE_EXTRA_SECURITY_HOOKS) {\n      // Explicitly initialize for consistent class shape.\n      this._textSanitizer = undefined;\n    }\n  }\n\n  /**\n   * The parent node into which the part renders its content.\n   *\n   * A ChildPart's content consists of a range of adjacent child nodes of\n   * `.parentNode`, possibly bordered by 'marker nodes' (`.startNode` and\n   * `.endNode`).\n   *\n   * - If both `.startNode` and `.endNode` are non-null, then the part's content\n   * consists of all siblings between `.startNode` and `.endNode`, exclusively.\n   *\n   * - If `.startNode` is non-null but `.endNode` is null, then the part's\n   * content consists of all siblings following `.startNode`, up to and\n   * including the last child of `.parentNode`. If `.endNode` is non-null, then\n   * `.startNode` will always be non-null.\n   *\n   * - If both `.endNode` and `.startNode` are null, then the part's content\n   * consists of all child nodes of `.parentNode`.\n   */\n  get parentNode(): Node {\n    let parentNode: Node = wrap(this._$startNode).parentNode!;\n    const parent = this._$parent;\n    if (\n      parent !== undefined &&\n      parentNode.nodeType === 11 /* Node.DOCUMENT_FRAGMENT */\n    ) {\n      // If the parentNode is a DocumentFragment, it may be because the DOM is\n      // still in the cloned fragment during initial render; if so, get the real\n      // parentNode the part will be committed into by asking the parent.\n      parentNode = (parent as ChildPart | TemplateInstance).parentNode;\n    }\n    return parentNode;\n  }\n\n  /**\n   * The part's leading marker node, if any. See `.parentNode` for more\n   * information.\n   */\n  get startNode(): Node | null {\n    return this._$startNode;\n  }\n\n  /**\n   * The part's trailing marker node, if any. See `.parentNode` for more\n   * information.\n   */\n  get endNode(): Node | null {\n    return this._$endNode;\n  }\n\n  _$setValue(value: unknown, directiveParent: DirectiveParent = this): void {\n    if (DEV_MODE && this.parentNode === null) {\n      throw new Error(\n        `This \\`ChildPart\\` has no \\`parentNode\\` and therefore cannot accept a value. This likely means the element containing the part was manipulated in an unsupported way outside of Lit's control such that the part's marker nodes were ejected from DOM. For example, setting the element's \\`innerHTML\\` or \\`textContent\\` can do this.`\n      );\n    }\n    value = resolveDirective(this, value, directiveParent);\n    if (isPrimitive(value)) {\n      // Non-rendering child values. It's important that these do not render\n      // empty text nodes to avoid issues with preventing default <slot>\n      // fallback content.\n      if (value === nothing || value == null || value === '') {\n        if (this._$committedValue !== nothing) {\n          debugLogEvent?.({\n            kind: 'commit nothing to child',\n            start: this._$startNode,\n            end: this._$endNode,\n            parent: this._$parent,\n            options: this.options,\n          });\n          this._$clear();\n        }\n        this._$committedValue = nothing;\n      } else if (value !== this._$committedValue && value !== noChange) {\n        this._commitText(value);\n      }\n      // This property needs to remain unminified.\n    } else if ((value as TemplateResult)['_$litType$'] !== undefined) {\n      this._commitTemplateResult(value as TemplateResult);\n    } else if ((value as Node).nodeType !== undefined) {\n      if (DEV_MODE && this.options?.host === value) {\n        this._commitText(\n          `[probable mistake: rendered a template's host in itself ` +\n            `(commonly caused by writing \\${this} in a template]`\n        );\n        console.warn(\n          `Attempted to render the template host`,\n          value,\n          `inside itself. This is almost always a mistake, and in dev mode `,\n          `we render some warning text. In production however, we'll `,\n          `render it, which will usually result in an error, and sometimes `,\n          `in the element disappearing from the DOM.`\n        );\n        return;\n      }\n      this._commitNode(value as Node);\n    } else if (isIterable(value)) {\n      this._commitIterable(value);\n    } else {\n      // Fallback, will render the string representation\n      this._commitText(value);\n    }\n  }\n\n  private _insert<T extends Node>(node: T, ref = this._$endNode) {\n    return wrap(wrap(this._$startNode).parentNode!).insertBefore(node, ref);\n  }\n\n  private _commitNode(value: Node): void {\n    if (this._$committedValue !== value) {\n      this._$clear();\n      if (\n        ENABLE_EXTRA_SECURITY_HOOKS &&\n        sanitizerFactoryInternal !== noopSanitizer\n      ) {\n        const parentNodeName = this._$startNode.parentNode?.nodeName;\n        if (parentNodeName === 'STYLE' || parentNodeName === 'SCRIPT') {\n          let message = 'Forbidden';\n          if (DEV_MODE) {\n            if (parentNodeName === 'STYLE') {\n              message =\n                `Lit does not support binding inside style nodes. ` +\n                `This is a security risk, as style injection attacks can ` +\n                `exfiltrate data and spoof UIs. ` +\n                `Consider instead using css\\`...\\` literals ` +\n                `to compose styles, and make do dynamic styling with ` +\n                `css custom properties, ::parts, <slot>s, ` +\n                `and by mutating the DOM rather than stylesheets.`;\n            } else {\n              message =\n                `Lit does not support binding inside script nodes. ` +\n                `This is a security risk, as it could allow arbitrary ` +\n                `code execution.`;\n            }\n          }\n          throw new Error(message);\n        }\n      }\n      debugLogEvent?.({\n        kind: 'commit node',\n        start: this._$startNode,\n        parent: this._$parent,\n        value: value,\n        options: this.options,\n      });\n      this._$committedValue = this._insert(value);\n    }\n  }\n\n  private _commitText(value: unknown): void {\n    // If the committed value is a primitive it means we called _commitText on\n    // the previous render, and we know that this._$startNode.nextSibling is a\n    // Text node. We can now just replace the text content (.data) of the node.\n    if (\n      this._$committedValue !== nothing &&\n      isPrimitive(this._$committedValue)\n    ) {\n      const node = wrap(this._$startNode).nextSibling as Text;\n      if (ENABLE_EXTRA_SECURITY_HOOKS) {\n        if (this._textSanitizer === undefined) {\n          this._textSanitizer = createSanitizer(node, 'data', 'property');\n        }\n        value = this._textSanitizer(value);\n      }\n      debugLogEvent?.({\n        kind: 'commit text',\n        node,\n        value,\n        options: this.options,\n      });\n      (node as Text).data = value as string;\n    } else {\n      if (ENABLE_EXTRA_SECURITY_HOOKS) {\n        const textNode = document.createTextNode('');\n        this._commitNode(textNode);\n        // When setting text content, for security purposes it matters a lot\n        // what the parent is. For example, <style> and <script> need to be\n        // handled with care, while <span> does not. So first we need to put a\n        // text node into the document, then we can sanitize its content.\n        if (this._textSanitizer === undefined) {\n          this._textSanitizer = createSanitizer(textNode, 'data', 'property');\n        }\n        value = this._textSanitizer(value);\n        debugLogEvent?.({\n          kind: 'commit text',\n          node: textNode,\n          value,\n          options: this.options,\n        });\n        textNode.data = value as string;\n      } else {\n        this._commitNode(d.createTextNode(value as string));\n        debugLogEvent?.({\n          kind: 'commit text',\n          node: wrap(this._$startNode).nextSibling as Text,\n          value,\n          options: this.options,\n        });\n      }\n    }\n    this._$committedValue = value;\n  }\n\n  private _commitTemplateResult(\n    result: TemplateResult | CompiledTemplateResult\n  ): void {\n    // This property needs to remain unminified.\n    const {values, ['_$litType$']: type} = result;\n    // If $litType$ is a number, result is a plain TemplateResult and we get\n    // the template from the template cache. If not, result is a\n    // CompiledTemplateResult and _$litType$ is a CompiledTemplate and we need\n    // to create the <template> element the first time we see it.\n    const template: Template | CompiledTemplate =\n      typeof type === 'number'\n        ? this._$getTemplate(result as TemplateResult)\n        : (type.el === undefined &&\n            (type.el = Template.createElement(type.h, this.options)),\n          type);\n\n    if ((this._$committedValue as TemplateInstance)?._$template === template) {\n      debugLogEvent?.({\n        kind: 'template updating',\n        template,\n        instance: this._$committedValue as TemplateInstance,\n        parts: (this._$committedValue as TemplateInstance)._parts,\n        options: this.options,\n        values,\n      });\n      (this._$committedValue as TemplateInstance)._update(values);\n    } else {\n      const instance = new TemplateInstance(template as Template, this);\n      const fragment = instance._clone(this.options);\n      debugLogEvent?.({\n        kind: 'template instantiated',\n        template,\n        instance,\n        parts: instance._parts,\n        options: this.options,\n        fragment,\n        values,\n      });\n      instance._update(values);\n      debugLogEvent?.({\n        kind: 'template instantiated and updated',\n        template,\n        instance,\n        parts: instance._parts,\n        options: this.options,\n        fragment,\n        values,\n      });\n      this._commitNode(fragment);\n      this._$committedValue = instance;\n    }\n  }\n\n  // Overridden via `litHtmlPolyfillSupport` to provide platform support.\n  /** @internal */\n  _$getTemplate(result: TemplateResult) {\n    let template = templateCache.get(result.strings);\n    if (template === undefined) {\n      templateCache.set(result.strings, (template = new Template(result)));\n    }\n    return template;\n  }\n\n  private _commitIterable(value: Iterable<unknown>): void {\n    // For an Iterable, we create a new InstancePart per item, then set its\n    // value to the item. This is a little bit of overhead for every item in\n    // an Iterable, but it lets us recurse easily and efficiently update Arrays\n    // of TemplateResults that will be commonly returned from expressions like:\n    // array.map((i) => html`${i}`), by reusing existing TemplateInstances.\n\n    // If value is an array, then the previous render was of an\n    // iterable and value will contain the ChildParts from the previous\n    // render. If value is not an array, clear this part and make a new\n    // array for ChildParts.\n    if (!isArray(this._$committedValue)) {\n      this._$committedValue = [];\n      this._$clear();\n    }\n\n    // Lets us keep track of how many items we stamped so we can clear leftover\n    // items from a previous render\n    const itemParts = this._$committedValue as ChildPart[];\n    let partIndex = 0;\n    let itemPart: ChildPart | undefined;\n\n    for (const item of value) {\n      if (partIndex === itemParts.length) {\n        // If no existing part, create a new one\n        // TODO (justinfagnani): test perf impact of always creating two parts\n        // instead of sharing parts between nodes\n        // https://github.com/lit/lit/issues/1266\n        itemParts.push(\n          (itemPart = new ChildPart(\n            this._insert(createMarker()),\n            this._insert(createMarker()),\n            this,\n            this.options\n          ))\n        );\n      } else {\n        // Reuse an existing part\n        itemPart = itemParts[partIndex];\n      }\n      itemPart._$setValue(item);\n      partIndex++;\n    }\n\n    if (partIndex < itemParts.length) {\n      // itemParts always have end nodes\n      this._$clear(\n        itemPart && wrap(itemPart._$endNode!).nextSibling,\n        partIndex\n      );\n      // Truncate the parts array so _value reflects the current state\n      itemParts.length = partIndex;\n    }\n  }\n\n  /**\n   * Removes the nodes contained within this Part from the DOM.\n   *\n   * @param start Start node to clear from, for clearing a subset of the part's\n   *     DOM (used when truncating iterables)\n   * @param from  When `start` is specified, the index within the iterable from\n   *     which ChildParts are being removed, used for disconnecting directives in\n   *     those Parts.\n   *\n   * @internal\n   */\n  _$clear(\n    start: ChildNode | null = wrap(this._$startNode).nextSibling,\n    from?: number\n  ) {\n    this._$notifyConnectionChanged?.(false, true, from);\n    while (start && start !== this._$endNode) {\n      const n = wrap(start!).nextSibling;\n      (wrap(start!) as Element).remove();\n      start = n;\n    }\n  }\n  /**\n   * Implementation of RootPart's `isConnected`. Note that this metod\n   * should only be called on `RootPart`s (the `ChildPart` returned from a\n   * top-level `render()` call). It has no effect on non-root ChildParts.\n   * @param isConnected Whether to set\n   * @internal\n   */\n  setConnected(isConnected: boolean) {\n    if (this._$parent === undefined) {\n      this.__isConnected = isConnected;\n      this._$notifyConnectionChanged?.(isConnected);\n    } else if (DEV_MODE) {\n      throw new Error(\n        'part.setConnected() may only be called on a ' +\n          'RootPart returned from render().'\n      );\n    }\n  }\n}\n\n/**\n * A top-level `ChildPart` returned from `render` that manages the connected\n * state of `AsyncDirective`s created throughout the tree below it.\n */\nexport interface RootPart extends ChildPart {\n  /**\n   * Sets the connection state for `AsyncDirective`s contained within this root\n   * ChildPart.\n   *\n   * lit-html does not automatically monitor the connectedness of DOM rendered;\n   * as such, it is the responsibility of the caller to `render` to ensure that\n   * `part.setConnected(false)` is called before the part object is potentially\n   * discarded, to ensure that `AsyncDirective`s have a chance to dispose of\n   * any resources being held. If a `RootPart` that was prevously\n   * disconnected is subsequently re-connected (and its `AsyncDirective`s should\n   * re-connect), `setConnected(true)` should be called.\n   *\n   * @param isConnected Whether directives within this tree should be connected\n   * or not\n   */\n  setConnected(isConnected: boolean): void;\n}\n\nexport type {AttributePart};\nclass AttributePart implements Disconnectable {\n  readonly type = ATTRIBUTE_PART as\n    | typeof ATTRIBUTE_PART\n    | typeof PROPERTY_PART\n    | typeof BOOLEAN_ATTRIBUTE_PART\n    | typeof EVENT_PART;\n  readonly element: HTMLElement;\n  readonly name: string;\n  readonly options: RenderOptions | undefined;\n\n  /**\n   * If this attribute part represents an interpolation, this contains the\n   * static strings of the interpolation. For single-value, complete bindings,\n   * this is undefined.\n   */\n  readonly strings?: ReadonlyArray<string>;\n  /** @internal */\n  _$committedValue: unknown | Array<unknown> = nothing;\n  /** @internal */\n  __directives?: Array<Directive | undefined>;\n  /** @internal */\n  _$parent: Disconnectable;\n  /** @internal */\n  _$disconnectableChildren?: Set<Disconnectable> = undefined;\n\n  protected _sanitizer: ValueSanitizer | undefined;\n\n  get tagName() {\n    return this.element.tagName;\n  }\n\n  // See comment in Disconnectable interface for why this is a getter\n  get _$isConnected() {\n    return this._$parent._$isConnected;\n  }\n\n  constructor(\n    element: HTMLElement,\n    name: string,\n    strings: ReadonlyArray<string>,\n    parent: Disconnectable,\n    options: RenderOptions | undefined\n  ) {\n    this.element = element;\n    this.name = name;\n    this._$parent = parent;\n    this.options = options;\n    if (strings.length > 2 || strings[0] !== '' || strings[1] !== '') {\n      this._$committedValue = new Array(strings.length - 1).fill(new String());\n      this.strings = strings;\n    } else {\n      this._$committedValue = nothing;\n    }\n    if (ENABLE_EXTRA_SECURITY_HOOKS) {\n      this._sanitizer = undefined;\n    }\n  }\n\n  /**\n   * Sets the value of this part by resolving the value from possibly multiple\n   * values and static strings and committing it to the DOM.\n   * If this part is single-valued, `this._strings` will be undefined, and the\n   * method will be called with a single value argument. If this part is\n   * multi-value, `this._strings` will be defined, and the method is called\n   * with the value array of the part's owning TemplateInstance, and an offset\n   * into the value array from which the values should be read.\n   * This method is overloaded this way to eliminate short-lived array slices\n   * of the template instance values, and allow a fast-path for single-valued\n   * parts.\n   *\n   * @param value The part value, or an array of values for multi-valued parts\n   * @param valueIndex the index to start reading values from. `undefined` for\n   *   single-valued parts\n   * @param noCommit causes the part to not commit its value to the DOM. Used\n   *   in hydration to prime attribute parts with their first-rendered value,\n   *   but not set the attribute, and in SSR to no-op the DOM operation and\n   *   capture the value for serialization.\n   *\n   * @internal\n   */\n  _$setValue(\n    value: unknown | Array<unknown>,\n    directiveParent: DirectiveParent = this,\n    valueIndex?: number,\n    noCommit?: boolean\n  ) {\n    const strings = this.strings;\n\n    // Whether any of the values has changed, for dirty-checking\n    let change = false;\n\n    if (strings === undefined) {\n      // Single-value binding case\n      value = resolveDirective(this, value, directiveParent, 0);\n      change =\n        !isPrimitive(value) ||\n        (value !== this._$committedValue && value !== noChange);\n      if (change) {\n        this._$committedValue = value;\n      }\n    } else {\n      // Interpolation case\n      const values = value as Array<unknown>;\n      value = strings[0];\n\n      let i, v;\n      for (i = 0; i < strings.length - 1; i++) {\n        v = resolveDirective(this, values[valueIndex! + i], directiveParent, i);\n\n        if (v === noChange) {\n          // If the user-provided value is `noChange`, use the previous value\n          v = (this._$committedValue as Array<unknown>)[i];\n        }\n        change ||=\n          !isPrimitive(v) || v !== (this._$committedValue as Array<unknown>)[i];\n        if (v === nothing) {\n          value = nothing;\n        } else if (value !== nothing) {\n          value += (v ?? '') + strings[i + 1];\n        }\n        // We always record each value, even if one is `nothing`, for future\n        // change detection.\n        (this._$committedValue as Array<unknown>)[i] = v;\n      }\n    }\n    if (change && !noCommit) {\n      this._commitValue(value);\n    }\n  }\n\n  /** @internal */\n  _commitValue(value: unknown) {\n    if (value === nothing) {\n      (wrap(this.element) as Element).removeAttribute(this.name);\n    } else {\n      if (ENABLE_EXTRA_SECURITY_HOOKS) {\n        if (this._sanitizer === undefined) {\n          this._sanitizer = sanitizerFactoryInternal(\n            this.element,\n            this.name,\n            'attribute'\n          );\n        }\n        value = this._sanitizer(value ?? '');\n      }\n      debugLogEvent?.({\n        kind: 'commit attribute',\n        element: this.element,\n        name: this.name,\n        value,\n        options: this.options,\n      });\n      (wrap(this.element) as Element).setAttribute(\n        this.name,\n        (value ?? '') as string\n      );\n    }\n  }\n}\n\nexport type {PropertyPart};\nclass PropertyPart extends AttributePart {\n  override readonly type = PROPERTY_PART;\n\n  /** @internal */\n  override _commitValue(value: unknown) {\n    if (ENABLE_EXTRA_SECURITY_HOOKS) {\n      if (this._sanitizer === undefined) {\n        this._sanitizer = sanitizerFactoryInternal(\n          this.element,\n          this.name,\n          'property'\n        );\n      }\n      value = this._sanitizer(value);\n    }\n    debugLogEvent?.({\n      kind: 'commit property',\n      element: this.element,\n      name: this.name,\n      value,\n      options: this.options,\n    });\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    (this.element as any)[this.name] = value === nothing ? undefined : value;\n  }\n}\n\n// Temporary workaround for https://crbug.com/993268\n// Currently, any attribute starting with \"on\" is considered to be a\n// TrustedScript source. Such boolean attributes must be set to the equivalent\n// trusted emptyScript value.\nconst emptyStringForBooleanAttribute = trustedTypes\n  ? (trustedTypes.emptyScript as unknown as '')\n  : '';\n\nexport type {BooleanAttributePart};\nclass BooleanAttributePart extends AttributePart {\n  override readonly type = BOOLEAN_ATTRIBUTE_PART;\n\n  /** @internal */\n  override _commitValue(value: unknown) {\n    debugLogEvent?.({\n      kind: 'commit boolean attribute',\n      element: this.element,\n      name: this.name,\n      value: !!(value && value !== nothing),\n      options: this.options,\n    });\n    if (value && value !== nothing) {\n      (wrap(this.element) as Element).setAttribute(\n        this.name,\n        emptyStringForBooleanAttribute\n      );\n    } else {\n      (wrap(this.element) as Element).removeAttribute(this.name);\n    }\n  }\n}\n\ntype EventListenerWithOptions = EventListenerOrEventListenerObject &\n  Partial<AddEventListenerOptions>;\n\n/**\n * An AttributePart that manages an event listener via add/removeEventListener.\n *\n * This part works by adding itself as the event listener on an element, then\n * delegating to the value passed to it. This reduces the number of calls to\n * add/removeEventListener if the listener changes frequently, such as when an\n * inline function is used as a listener.\n *\n * Because event options are passed when adding listeners, we must take case\n * to add and remove the part as a listener when the event options change.\n */\nexport type {EventPart};\nclass EventPart extends AttributePart {\n  override readonly type = EVENT_PART;\n\n  constructor(\n    element: HTMLElement,\n    name: string,\n    strings: ReadonlyArray<string>,\n    parent: Disconnectable,\n    options: RenderOptions | undefined\n  ) {\n    super(element, name, strings, parent, options);\n\n    if (DEV_MODE && this.strings !== undefined) {\n      throw new Error(\n        `A \\`<${element.localName}>\\` has a \\`@${name}=...\\` listener with ` +\n          'invalid content. Event listeners in templates must have exactly ' +\n          'one expression and no surrounding text.'\n      );\n    }\n  }\n\n  // EventPart does not use the base _$setValue/_resolveValue implementation\n  // since the dirty checking is more complex\n  /** @internal */\n  override _$setValue(\n    newListener: unknown,\n    directiveParent: DirectiveParent = this\n  ) {\n    newListener =\n      resolveDirective(this, newListener, directiveParent, 0) ?? nothing;\n    if (newListener === noChange) {\n      return;\n    }\n    const oldListener = this._$committedValue;\n\n    // If the new value is nothing or any options change we have to remove the\n    // part as a listener.\n    const shouldRemoveListener =\n      (newListener === nothing && oldListener !== nothing) ||\n      (newListener as EventListenerWithOptions).capture !==\n        (oldListener as EventListenerWithOptions).capture ||\n      (newListener as EventListenerWithOptions).once !==\n        (oldListener as EventListenerWithOptions).once ||\n      (newListener as EventListenerWithOptions).passive !==\n        (oldListener as EventListenerWithOptions).passive;\n\n    // If the new value is not nothing and we removed the listener, we have\n    // to add the part as a listener.\n    const shouldAddListener =\n      newListener !== nothing &&\n      (oldListener === nothing || shouldRemoveListener);\n\n    debugLogEvent?.({\n      kind: 'commit event listener',\n      element: this.element,\n      name: this.name,\n      value: newListener,\n      options: this.options,\n      removeListener: shouldRemoveListener,\n      addListener: shouldAddListener,\n      oldListener,\n    });\n    if (shouldRemoveListener) {\n      this.element.removeEventListener(\n        this.name,\n        this,\n        oldListener as EventListenerWithOptions\n      );\n    }\n    if (shouldAddListener) {\n      // Beware: IE11 and Chrome 41 don't like using the listener as the\n      // options object. Figure out how to deal w/ this in IE11 - maybe\n      // patch addEventListener?\n      this.element.addEventListener(\n        this.name,\n        this,\n        newListener as EventListenerWithOptions\n      );\n    }\n    this._$committedValue = newListener;\n  }\n\n  handleEvent(event: Event) {\n    if (typeof this._$committedValue === 'function') {\n      this._$committedValue.call(this.options?.host ?? this.element, event);\n    } else {\n      (this._$committedValue as EventListenerObject).handleEvent(event);\n    }\n  }\n}\n\nexport type {ElementPart};\nclass ElementPart implements Disconnectable {\n  readonly type = ELEMENT_PART;\n\n  /** @internal */\n  __directive?: Directive;\n\n  // This is to ensure that every Part has a _$committedValue\n  _$committedValue: undefined;\n\n  /** @internal */\n  _$parent!: Disconnectable;\n\n  /** @internal */\n  _$disconnectableChildren?: Set<Disconnectable> = undefined;\n\n  options: RenderOptions | undefined;\n\n  constructor(\n    public element: Element,\n    parent: Disconnectable,\n    options: RenderOptions | undefined\n  ) {\n    this._$parent = parent;\n    this.options = options;\n  }\n\n  // See comment in Disconnectable interface for why this is a getter\n  get _$isConnected() {\n    return this._$parent._$isConnected;\n  }\n\n  _$setValue(value: unknown): void {\n    debugLogEvent?.({\n      kind: 'commit to element binding',\n      element: this.element,\n      value,\n      options: this.options,\n    });\n    resolveDirective(this, value);\n  }\n}\n\n/**\n * END USERS SHOULD NOT RELY ON THIS OBJECT.\n *\n * Private exports for use by other Lit packages, not intended for use by\n * external users.\n *\n * We currently do not make a mangled rollup build of the lit-ssr code. In order\n * to keep a number of (otherwise private) top-level exports  mangled in the\n * client side code, we export a _$LH object containing those members (or\n * helper methods for accessing private fields of those members), and then\n * re-export them for use in lit-ssr. This keeps lit-ssr agnostic to whether the\n * client-side code is being used in `dev` mode or `prod` mode.\n *\n * This has a unique name, to disambiguate it from private exports in\n * lit-element, which re-exports all of lit-html.\n *\n * @private\n */\nexport const _$LH = {\n  // Used in lit-ssr\n  _boundAttributeSuffix: boundAttributeSuffix,\n  _marker: marker,\n  _markerMatch: markerMatch,\n  _HTML_RESULT: HTML_RESULT,\n  _getTemplateHtml: getTemplateHtml,\n  // Used in hydrate\n  _TemplateInstance: TemplateInstance,\n  _isIterable: isIterable,\n  _resolveDirective: resolveDirective,\n  // Used in tests and private-ssr-support\n  _ChildPart: ChildPart,\n  _AttributePart: AttributePart,\n  _BooleanAttributePart: BooleanAttributePart,\n  _EventPart: EventPart,\n  _PropertyPart: PropertyPart,\n  _ElementPart: ElementPart,\n};\n\n// Apply polyfills if available\nconst polyfillSupport = DEV_MODE\n  ? global.litHtmlPolyfillSupportDevMode\n  : global.litHtmlPolyfillSupport;\npolyfillSupport?.(Template, ChildPart);\n\n// IMPORTANT: do not change the property name or the assignment expression.\n// This line will be used in regexes to search for lit-html usage.\n(global.litHtmlVersions ??= []).push('2.3.1');\nif (DEV_MODE && global.litHtmlVersions.length > 1) {\n  issueWarning!(\n    'multiple-versions',\n    `Multiple versions of Lit loaded. ` +\n      `Loading multiple versions is not recommended.`\n  );\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n * SPDX-License-Identifier: BSD-3-Clause\n */\n\n/**\n * The main LitElement module, which defines the {@linkcode LitElement} base\n * class and related APIs.\n *\n *  LitElement components can define a template and a set of observed\n * properties. Changing an observed property triggers a re-render of the\n * element.\n *\n *  Import {@linkcode LitElement} and {@linkcode html} from this module to\n * create a component:\n *\n *  ```js\n * import {LitElement, html} from 'lit-element';\n *\n * class MyElement extends LitElement {\n *\n *   // Declare observed properties\n *   static get properties() {\n *     return {\n *       adjective: {}\n *     }\n *   }\n *\n *   constructor() {\n *     this.adjective = 'awesome';\n *   }\n *\n *   // Define the element's template\n *   render() {\n *     return html`<p>your ${adjective} template here</p>`;\n *   }\n * }\n *\n * customElements.define('my-element', MyElement);\n * ```\n *\n * `LitElement` extends {@linkcode ReactiveElement} and adds lit-html\n * templating. The `ReactiveElement` class is provided for users that want to\n * build their own custom element base classes that don't use lit-html.\n *\n * @packageDocumentation\n */\nimport {PropertyValues, ReactiveElement} from '@lit/reactive-element';\nimport {render, RenderOptions, noChange, RootPart} from 'lit-html';\nexport * from '@lit/reactive-element';\nexport * from 'lit-html';\n\nimport {LitUnstable} from 'lit-html';\nimport {ReactiveUnstable} from '@lit/reactive-element';\n\n/**\n * Contains types that are part of the unstable debug API.\n *\n * Everything in this API is not stable and may change or be removed in the future,\n * even on patch releases.\n */\n// eslint-disable-next-line @typescript-eslint/no-namespace\nexport namespace Unstable {\n  /**\n   * When Lit is running in dev mode and `window.emitLitDebugLogEvents` is true,\n   * we will emit 'lit-debug' events to window, with live details about the update and render\n   * lifecycle. These can be useful for writing debug tooling and visualizations.\n   *\n   * Please be aware that running with window.emitLitDebugLogEvents has performance overhead,\n   * making certain operations that are normally very cheap (like a no-op render) much slower,\n   * because we must copy data and dispatch events.\n   */\n  // eslint-disable-next-line @typescript-eslint/no-namespace\n  export namespace DebugLog {\n    export type Entry =\n      | LitUnstable.DebugLog.Entry\n      | ReactiveUnstable.DebugLog.Entry;\n  }\n}\n\n// For backwards compatibility export ReactiveElement as UpdatingElement. Note,\n// IE transpilation requires exporting like this.\nexport const UpdatingElement = ReactiveElement;\n\nconst DEV_MODE = true;\n\nlet issueWarning: (code: string, warning: string) => void;\n\nif (DEV_MODE) {\n  // Ensure warnings are issued only 1x, even if multiple versions of Lit\n  // are loaded.\n  const issuedWarnings: Set<string | undefined> =\n    (globalThis.litIssuedWarnings ??= new Set());\n\n  // Issue a warning, if we haven't already.\n  issueWarning = (code: string, warning: string) => {\n    warning += ` See https://lit.dev/msg/${code} for more information.`;\n    if (!issuedWarnings.has(warning)) {\n      console.warn(warning);\n      issuedWarnings.add(warning);\n    }\n  };\n}\n\n/**\n * Base element class that manages element properties and attributes, and\n * renders a lit-html template.\n *\n * To define a component, subclass `LitElement` and implement a\n * `render` method to provide the component's template. Define properties\n * using the {@linkcode LitElement.properties properties} property or the\n * {@linkcode property} decorator.\n */\nexport class LitElement extends ReactiveElement {\n  /**\n   * Ensure this class is marked as `finalized` as an optimization ensuring\n   * it will not needlessly try to `finalize`.\n   *\n   * Note this property name is a string to prevent breaking Closure JS Compiler\n   * optimizations. See @lit/reactive-element for more information.\n   */\n  protected static override ['finalized'] = true;\n\n  // This property needs to remain unminified.\n  static ['_$litElement$'] = true;\n\n  /**\n   * @category rendering\n   */\n  readonly renderOptions: RenderOptions = {host: this};\n\n  private __childPart: RootPart | undefined = undefined;\n\n  /**\n   * @category rendering\n   */\n  protected override createRenderRoot() {\n    const renderRoot = super.createRenderRoot();\n    // When adoptedStyleSheets are shimmed, they are inserted into the\n    // shadowRoot by createRenderRoot. Adjust the renderBefore node so that\n    // any styles in Lit content render before adoptedStyleSheets. This is\n    // important so that adoptedStyleSheets have precedence over styles in\n    // the shadowRoot.\n    this.renderOptions.renderBefore ??= renderRoot!.firstChild as ChildNode;\n    return renderRoot;\n  }\n\n  /**\n   * Updates the element. This method reflects property values to attributes\n   * and calls `render` to render DOM via lit-html. Setting properties inside\n   * this method will *not* trigger another update.\n   * @param changedProperties Map of changed properties with old values\n   * @category updates\n   */\n  protected override update(changedProperties: PropertyValues) {\n    // Setting properties in `render` should not trigger an update. Since\n    // updates are allowed after super.update, it's important to call `render`\n    // before that.\n    const value = this.render();\n    if (!this.hasUpdated) {\n      this.renderOptions.isConnected = this.isConnected;\n    }\n    super.update(changedProperties);\n    this.__childPart = render(value, this.renderRoot, this.renderOptions);\n  }\n\n  /**\n   * Invoked when the component is added to the document's DOM.\n   *\n   * In `connectedCallback()` you should setup tasks that should only occur when\n   * the element is connected to the document. The most common of these is\n   * adding event listeners to nodes external to the element, like a keydown\n   * event handler added to the window.\n   *\n   * ```ts\n   * connectedCallback() {\n   *   super.connectedCallback();\n   *   addEventListener('keydown', this._handleKeydown);\n   * }\n   * ```\n   *\n   * Typically, anything done in `connectedCallback()` should be undone when the\n   * element is disconnected, in `disconnectedCallback()`.\n   *\n   * @category lifecycle\n   */\n  override connectedCallback() {\n    super.connectedCallback();\n    this.__childPart?.setConnected(true);\n  }\n\n  /**\n   * Invoked when the component is removed from the document's DOM.\n   *\n   * This callback is the main signal to the element that it may no longer be\n   * used. `disconnectedCallback()` should ensure that nothing is holding a\n   * reference to the element (such as event listeners added to nodes external\n   * to the element), so that it is free to be garbage collected.\n   *\n   * ```ts\n   * disconnectedCallback() {\n   *   super.disconnectedCallback();\n   *   window.removeEventListener('keydown', this._handleKeydown);\n   * }\n   * ```\n   *\n   * An element may be re-connected after being disconnected.\n   *\n   * @category lifecycle\n   */\n  override disconnectedCallback() {\n    super.disconnectedCallback();\n    this.__childPart?.setConnected(false);\n  }\n\n  /**\n   * Invoked on each update to perform rendering tasks. This method may return\n   * any value renderable by lit-html's `ChildPart` - typically a\n   * `TemplateResult`. Setting properties inside this method will *not* trigger\n   * the element to update.\n   * @category rendering\n   */\n  protected render(): unknown {\n    return noChange;\n  }\n}\n\n// Install hydration if available\nglobalThis.litElementHydrateSupport?.({LitElement});\n\n// Apply polyfills if available\nconst polyfillSupport = DEV_MODE\n  ? globalThis.litElementPolyfillSupportDevMode\n  : globalThis.litElementPolyfillSupport;\npolyfillSupport?.({LitElement});\n\n// DEV mode warnings\nif (DEV_MODE) {\n  /* eslint-disable @typescript-eslint/no-explicit-any */\n  // Note, for compatibility with closure compilation, this access\n  // needs to be as a string property index.\n  (LitElement as any)['finalize'] = function (this: typeof LitElement) {\n    const finalized = (ReactiveElement as any).finalize.call(this);\n    if (!finalized) {\n      return false;\n    }\n    const warnRemovedOrRenamed = (obj: any, name: string, renamed = false) => {\n      if (obj.hasOwnProperty(name)) {\n        const ctorName = (typeof obj === 'function' ? obj : obj.constructor)\n          .name;\n        issueWarning(\n          renamed ? 'renamed-api' : 'removed-api',\n          `\\`${name}\\` is implemented on class ${ctorName}. It ` +\n            `has been ${renamed ? 'renamed' : 'removed'} ` +\n            `in this version of LitElement.`\n        );\n      }\n    };\n    warnRemovedOrRenamed(this, 'render');\n    warnRemovedOrRenamed(this, 'getStyles', true);\n    warnRemovedOrRenamed((this as typeof LitElement).prototype, 'adoptStyles');\n    return true;\n  };\n  /* eslint-enable @typescript-eslint/no-explicit-any */\n}\n\n/**\n * END USERS SHOULD NOT RELY ON THIS OBJECT.\n *\n * Private exports for use by other Lit packages, not intended for use by\n * external users.\n *\n * We currently do not make a mangled rollup build of the lit-ssr code. In order\n * to keep a number of (otherwise private) top-level exports  mangled in the\n * client side code, we export a _$LE object containing those members (or\n * helper methods for accessing private fields of those members), and then\n * re-export them for use in lit-ssr. This keeps lit-ssr agnostic to whether the\n * client-side code is being used in `dev` mode or `prod` mode.\n *\n * This has a unique name, to disambiguate it from private exports in\n * lit-html, since this module re-exports all of lit-html.\n *\n * @private\n */\nexport const _$LE = {\n  _$attributeToProperty: (\n    el: LitElement,\n    name: string,\n    value: string | null\n  ) => {\n    // eslint-disable-next-line\n    (el as any)._$attributeToProperty(name, value);\n  },\n  // eslint-disable-next-line\n  _$changedProperties: (el: LitElement) => (el as any)._$changedProperties,\n};\n\n// IMPORTANT: do not change the property name or the assignment expression.\n// This line will be used in regexes to search for LitElement usage.\n(globalThis.litElementVersions ??= []).push('3.2.2');\nif (DEV_MODE && globalThis.litElementVersions.length > 1) {\n  issueWarning!(\n    'multiple-versions',\n    `Multiple versions of Lit loaded. Loading multiple versions ` +\n      `is not recommended.`\n  );\n}\n","let current;\nlet currentId = 0;\nfunction setCurrent(state) {\n    current = state;\n}\nfunction clear() {\n    current = null;\n    currentId = 0;\n}\nfunction notify() {\n    return currentId++;\n}\nexport { clear, current, setCurrent, notify };\n","const phaseSymbol = Symbol('haunted.phase');\nconst hookSymbol = Symbol('haunted.hook');\nconst updateSymbol = Symbol('haunted.update');\nconst commitSymbol = Symbol('haunted.commit');\nconst effectsSymbol = Symbol('haunted.effects');\nconst layoutEffectsSymbol = Symbol('haunted.layoutEffects');\nconst contextEvent = 'haunted.context';\nexport { phaseSymbol, hookSymbol, updateSymbol, commitSymbol, effectsSymbol, layoutEffectsSymbol, contextEvent, };\n","import { setCurrent, clear } from './interface.js';\nimport { hookSymbol, effectsSymbol, layoutEffectsSymbol } from './symbols.js';\nclass State {\n    update;\n    host;\n    virtual;\n    [hookSymbol];\n    [effectsSymbol];\n    [layoutEffectsSymbol];\n    constructor(update, host) {\n        this.update = update;\n        this.host = host;\n        this[hookSymbol] = new Map();\n        this[effectsSymbol] = [];\n        this[layoutEffectsSymbol] = [];\n    }\n    run(cb) {\n        setCurrent(this);\n        let res = cb();\n        clear();\n        return res;\n    }\n    _runEffects(phase) {\n        let effects = this[phase];\n        setCurrent(this);\n        for (let effect of effects) {\n            effect.call(this);\n        }\n        clear();\n    }\n    runEffects() {\n        this._runEffects(effectsSymbol);\n    }\n    runLayoutEffects() {\n        this._runEffects(layoutEffectsSymbol);\n    }\n    teardown() {\n        let hooks = this[hookSymbol];\n        hooks.forEach(hook => {\n            if (typeof hook.teardown === 'function') {\n                hook.teardown();\n            }\n        });\n    }\n}\nexport { State };\n","import { State } from './state.js';\nimport { commitSymbol, phaseSymbol, updateSymbol, effectsSymbol, layoutEffectsSymbol } from './symbols.js';\nconst defer = Promise.resolve().then.bind(Promise.resolve());\nfunction runner() {\n    let tasks = [];\n    let id;\n    function runTasks() {\n        id = null;\n        let t = tasks;\n        tasks = [];\n        for (var i = 0, len = t.length; i < len; i++) {\n            t[i]();\n        }\n    }\n    return function (task) {\n        tasks.push(task);\n        if (id == null) {\n            id = defer(runTasks);\n        }\n    };\n}\nconst read = runner();\nconst write = runner();\nclass BaseScheduler {\n    renderer;\n    host;\n    state;\n    [phaseSymbol];\n    _updateQueued;\n    constructor(renderer, host) {\n        this.renderer = renderer;\n        this.host = host;\n        this.state = new State(this.update.bind(this), host);\n        this[phaseSymbol] = null;\n        this._updateQueued = false;\n    }\n    update() {\n        if (this._updateQueued)\n            return;\n        read(() => {\n            let result = this.handlePhase(updateSymbol);\n            write(() => {\n                this.handlePhase(commitSymbol, result);\n                write(() => {\n                    this.handlePhase(effectsSymbol);\n                });\n            });\n            this._updateQueued = false;\n        });\n        this._updateQueued = true;\n    }\n    handlePhase(phase, arg) {\n        this[phaseSymbol] = phase;\n        switch (phase) {\n            case commitSymbol:\n                this.commit(arg);\n                this.runEffects(layoutEffectsSymbol);\n                return;\n            case updateSymbol: return this.render();\n            case effectsSymbol: return this.runEffects(effectsSymbol);\n        }\n    }\n    render() {\n        return this.state.run(() => this.renderer.call(this.host, this.host));\n    }\n    runEffects(phase) {\n        this.state._runEffects(phase);\n    }\n    teardown() {\n        this.state.teardown();\n    }\n}\nexport { BaseScheduler };\n","import { BaseScheduler } from './scheduler.js';\nconst toCamelCase = (val = '') => val.replace(/-+([a-z])?/g, (_, char) => char ? char.toUpperCase() : '');\nfunction makeComponent(render) {\n    class Scheduler extends BaseScheduler {\n        frag;\n        constructor(renderer, frag, host) {\n            super(renderer, (host || frag));\n            this.frag = frag;\n        }\n        commit(result) {\n            render(result, this.frag);\n        }\n    }\n    function component(renderer, baseElementOrOptions, options) {\n        const BaseElement = (options || baseElementOrOptions || {}).baseElement || HTMLElement;\n        const { observedAttributes = [], useShadowDOM = true, shadowRootInit = {} } = options || baseElementOrOptions || {};\n        class Element extends BaseElement {\n            _scheduler;\n            static get observedAttributes() {\n                return renderer.observedAttributes || observedAttributes || [];\n            }\n            constructor() {\n                super();\n                if (useShadowDOM === false) {\n                    this._scheduler = new Scheduler(renderer, this);\n                }\n                else {\n                    this.attachShadow({ mode: 'open', ...shadowRootInit });\n                    this._scheduler = new Scheduler(renderer, this.shadowRoot, this);\n                }\n            }\n            connectedCallback() {\n                this._scheduler.update();\n            }\n            disconnectedCallback() {\n                this._scheduler.teardown();\n            }\n            attributeChangedCallback(name, oldValue, newValue) {\n                if (oldValue === newValue) {\n                    return;\n                }\n                let val = newValue === '' ? true : newValue;\n                Reflect.set(this, toCamelCase(name), val);\n            }\n        }\n        ;\n        function reflectiveProp(initialValue) {\n            let value = initialValue;\n            let isSetup = false;\n            return Object.freeze({\n                enumerable: true,\n                configurable: true,\n                get() {\n                    return value;\n                },\n                set(newValue) {\n                    // Avoid scheduling update when prop value hasn't changed\n                    if (isSetup && value === newValue)\n                        return;\n                    isSetup = true;\n                    value = newValue;\n                    if (this._scheduler) {\n                        this._scheduler.update();\n                    }\n                }\n            });\n        }\n        const proto = new Proxy(BaseElement.prototype, {\n            getPrototypeOf(target) {\n                return target;\n            },\n            set(target, key, value, receiver) {\n                let desc;\n                if (key in target) {\n                    desc = Object.getOwnPropertyDescriptor(target, key);\n                    if (desc && desc.set) {\n                        desc.set.call(receiver, value);\n                        return true;\n                    }\n                    Reflect.set(target, key, value, receiver);\n                    return true;\n                }\n                if (typeof key === 'symbol' || key[0] === '_') {\n                    desc = {\n                        enumerable: true,\n                        configurable: true,\n                        writable: true,\n                        value\n                    };\n                }\n                else {\n                    desc = reflectiveProp(value);\n                }\n                Object.defineProperty(receiver, key, desc);\n                if (desc.set) {\n                    desc.set.call(receiver, value);\n                }\n                return true;\n            }\n        });\n        Object.setPrototypeOf(Element.prototype, proto);\n        return Element;\n    }\n    return component;\n}\nexport { makeComponent };\n","import { current, notify } from './interface.js';\nimport { hookSymbol } from './symbols.js';\nclass Hook {\n    id;\n    state;\n    constructor(id, state) {\n        this.id = id;\n        this.state = state;\n    }\n}\nfunction use(Hook, ...args) {\n    let id = notify();\n    let hooks = current[hookSymbol];\n    let hook = hooks.get(id);\n    if (!hook) {\n        hook = new Hook(id, current, ...args);\n        hooks.set(id, hook);\n    }\n    return hook.update(...args);\n}\nfunction hook(Hook) {\n    return use.bind(null, Hook);\n}\nexport { hook, Hook };\n","import { Hook, hook } from './hook.js';\nfunction createEffect(setEffects) {\n    return hook(class extends Hook {\n        callback;\n        lastValues;\n        values;\n        _teardown;\n        constructor(id, state, ignored1, ignored2) {\n            super(id, state);\n            setEffects(state, this);\n        }\n        update(callback, values) {\n            this.callback = callback;\n            this.values = values;\n        }\n        call() {\n            if (!this.values || this.hasChanged()) {\n                this.run();\n            }\n            this.lastValues = this.values;\n        }\n        run() {\n            this.teardown();\n            this._teardown = this.callback.call(this.state);\n        }\n        teardown() {\n            if (typeof this._teardown === 'function') {\n                this._teardown();\n            }\n        }\n        hasChanged() {\n            return !this.lastValues || this.values.some((value, i) => this.lastValues[i] !== value);\n        }\n    });\n}\nexport { createEffect };\n","import { effectsSymbol } from './symbols.js';\nimport { createEffect } from './create-effect.js';\nfunction setEffects(state, cb) {\n    state[effectsSymbol].push(cb);\n}\n/**\n * @function\n * @param {() => void} effect - callback function that runs each time dependencies change\n * @param {unknown[]} [dependencies] - list of dependencies to the effect\n * @return {void}\n */\nconst useEffect = createEffect(setEffects);\nexport { setEffects, useEffect };\n","import { hook, Hook } from './hook.js';\nimport { contextEvent } from './symbols.js';\nimport { setEffects } from './use-effect.js';\n/**\n * @function\n * @template T\n * @param    {Context<T>} context\n * @return   {T}\n */\nconst useContext = hook(class extends Hook {\n    Context;\n    value;\n    _ranEffect;\n    _unsubscribe;\n    constructor(id, state, _) {\n        super(id, state);\n        this._updater = this._updater.bind(this);\n        this._ranEffect = false;\n        this._unsubscribe = null;\n        setEffects(state, this);\n    }\n    update(Context) {\n        if (this.state.virtual) {\n            throw new Error('can\\'t be used with virtual components');\n        }\n        if (this.Context !== Context) {\n            this._subscribe(Context);\n            this.Context = Context;\n        }\n        return this.value;\n    }\n    call() {\n        if (!this._ranEffect) {\n            this._ranEffect = true;\n            if (this._unsubscribe)\n                this._unsubscribe();\n            this._subscribe(this.Context);\n            this.state.update();\n        }\n    }\n    _updater(value) {\n        this.value = value;\n        this.state.update();\n    }\n    _subscribe(Context) {\n        const detail = { Context, callback: this._updater };\n        this.state.host.dispatchEvent(new CustomEvent(contextEvent, {\n            detail,\n            bubbles: true,\n            cancelable: true,\n            composed: true, // to pass ShadowDOM boundaries\n        }));\n        const { unsubscribe = null, value } = detail;\n        this.value = unsubscribe ? value : Context.defaultValue;\n        this._unsubscribe = unsubscribe;\n    }\n    teardown() {\n        if (this._unsubscribe) {\n            this._unsubscribe();\n        }\n    }\n});\nexport { useContext };\n","import { contextEvent } from './symbols.js';\nimport { useContext } from './use-context.js';\nfunction makeContext(component) {\n    return (defaultValue) => {\n        const Context = {\n            Provider: class extends HTMLElement {\n                listeners;\n                _value;\n                constructor() {\n                    super();\n                    this.listeners = new Set();\n                    this.addEventListener(contextEvent, this);\n                }\n                disconnectedCallback() {\n                    this.removeEventListener(contextEvent, this);\n                }\n                handleEvent(event) {\n                    const { detail } = event;\n                    if (detail.Context === Context) {\n                        detail.value = this.value;\n                        detail.unsubscribe = this.unsubscribe.bind(this, detail.callback);\n                        this.listeners.add(detail.callback);\n                        event.stopPropagation();\n                    }\n                }\n                unsubscribe(callback) {\n                    this.listeners.delete(callback);\n                }\n                set value(value) {\n                    this._value = value;\n                    for (let callback of this.listeners) {\n                        callback(value);\n                    }\n                }\n                get value() {\n                    return this._value;\n                }\n            },\n            Consumer: component(function ({ render }) {\n                const context = useContext(Context);\n                return render(context);\n            }),\n            defaultValue,\n        };\n        return Context;\n    };\n}\nexport { makeContext };\n","import { hook, Hook } from './hook.js';\n/**\n * @function\n * @template T\n * @param  {() => T} fn function to memoize\n * @param  {unknown[]} values dependencies to the memoized computation\n * @return {T} The next computed value\n */\nconst useMemo = hook(class extends Hook {\n    value;\n    values;\n    constructor(id, state, fn, values) {\n        super(id, state);\n        this.value = fn();\n        this.values = values;\n    }\n    update(fn, values) {\n        if (this.hasChanged(values)) {\n            this.values = values;\n            this.value = fn();\n        }\n        return this.value;\n    }\n    hasChanged(values = []) {\n        return values.some((value, i) => this.values[i] !== value);\n    }\n});\nexport { useMemo };\n","import { useMemo } from './use-memo.js';\n/**\n * @function\n * @template {Function} T\n * @param    {T} fn - callback to memoize\n * @param    {unknown[]} inputs - dependencies to callback memoization\n * @return   {T}\n */\nconst useCallback = (fn, inputs) => useMemo(() => fn, inputs);\nexport { useCallback };\n","import { layoutEffectsSymbol } from './symbols.js';\nimport { createEffect } from './create-effect.js';\nfunction setLayoutEffects(state, cb) {\n    state[layoutEffectsSymbol].push(cb);\n}\n/**\n * @function\n * @param  {Effect} callback effecting callback\n * @param  {unknown[]} [values] dependencies to the effect\n * @return {void}\n */\nconst useLayoutEffect = createEffect(setLayoutEffects);\nexport { useLayoutEffect };\n","import { hook, Hook } from './hook.js';\n/**\n * @function\n * @template {*} T\n * @param {T} [initialState] - Optional initial state\n * @return {readonly [state: T, updaterFn: StateUpdater<T>]} stateTuple - Tuple of current state and state updater function\n */\nconst useState = hook(class extends Hook {\n    args;\n    constructor(id, state, initialValue) {\n        super(id, state);\n        this.updater = this.updater.bind(this);\n        if (typeof initialValue === 'function') {\n            initialValue = initialValue();\n        }\n        this.makeArgs(initialValue);\n    }\n    update() {\n        return this.args;\n    }\n    updater(value) {\n        if (typeof value === 'function') {\n            const updaterFn = value;\n            const [previousValue] = this.args;\n            value = updaterFn(previousValue);\n        }\n        this.makeArgs(value);\n        this.state.update();\n    }\n    makeArgs(value) {\n        this.args = Object.freeze([value, this.updater]);\n    }\n});\n;\nexport { useState };\n","/**\n * @license\n * Portions Copyright 2021 Google LLC\n * SPDX-License-Identifier: BSD-3-Clause\n */\nimport { useLayoutEffect } from './use-layout-effect.js';\nimport { useState } from './use-state.js';\nconst microtask = Promise.resolve();\n/**\n * An implementation of ReactiveControllerHost that is driven by Haunted hooks\n * and `useController()`.\n */\nclass HauntedControllerHost {\n    count;\n    kick;\n    _controllers = [];\n    _updatePending = true;\n    _updateCompletePromise;\n    _resolveUpdate;\n    constructor(count, kick) {\n        this.count = count;\n        this.kick = kick;\n        this._updateCompletePromise = new Promise(res => {\n            this._resolveUpdate = res;\n        });\n    }\n    addController(controller) {\n        this._controllers.push(controller);\n    }\n    removeController(controller) {\n        // Note, if the indexOf is -1, the >>> will flip the sign which makes the\n        // splice do nothing.\n        this._controllers && this._controllers.splice(this._controllers.indexOf(controller) >>> 0, 1);\n    }\n    requestUpdate() {\n        if (!this._updatePending) {\n            this._updatePending = true;\n            microtask.then(() => this.kick(this.count + 1));\n        }\n    }\n    get updateComplete() {\n        return this._updateCompletePromise;\n    }\n    connected() {\n        this._controllers.forEach(c => c.hostConnected && c.hostConnected());\n    }\n    disconnected() {\n        this._controllers.forEach(c => c.hostDisconnected && c.hostDisconnected());\n    }\n    update() {\n        this._controllers.forEach(c => c.hostUpdate && c.hostUpdate());\n    }\n    updated() {\n        this._updatePending = false;\n        const resolve = this._resolveUpdate;\n        // Create a new updateComplete Promise for the next update,\n        // before resolving the current one.\n        this._updateCompletePromise = new Promise(res => {\n            this._resolveUpdate = res;\n        });\n        this._controllers.forEach(c => c.hostUpdated && c.hostUpdated());\n        resolve(this._updatePending);\n    }\n}\n/**\n * Creates and stores a stateful ReactiveController instance and provides it\n * with a ReactiveControllerHost that drives the controller lifecycle.\n *\n * Use this hook to convert a ReactiveController into a Haunted hook.\n *\n * @param {<C extends ReactiveController>(host: ReactiveControllerHost) => C} createController A function that creates a controller instance.\n * This function is given a HauntedControllerHost to pass to the controller. The\n * create function is only called once per component.\n * @return {ReactiveController} the controller instance\n */\nexport function useController(createController) {\n    const [count, kick] = useState(0);\n    const [host] = useState(() => {\n        const host = new HauntedControllerHost(count, kick);\n        const controller = createController(host);\n        host.primaryController = controller;\n        host.connected();\n        return host;\n    });\n    // We use useLayoutEffect because we need updated() called synchronously\n    // after rendering.\n    useLayoutEffect(() => host.updated());\n    // Returning a cleanup function simulates hostDisconnected timing. An empty\n    // deps array tells Haunted to only call this once: on mount with the cleanup\n    // called on unmount.\n    useLayoutEffect(() => () => host.disconnected(), []);\n    host.update();\n    return host.primaryController;\n}\n","import { hook, Hook } from './hook.js';\n/**\n * Given a reducer function, initial state, and optional state initializer function, returns a tuple of state and dispatch function.\n * @function\n * @template S State\n * @template I Initial State\n * @template A Action\n * @param {Reducer<S, A>} reducer - reducer function to compute the next state given the previous state and the action\n * @param {I} initialState - the initial state of the reducer\n * @param {(init: I) => S} [init=undefined] - Optional initializer function, called on initialState if provided\n * @return {readonly [S, (action: A) => void]}\n */\nconst useReducer = hook(class extends Hook {\n    reducer;\n    currentState;\n    constructor(id, state, _, initialState, init) {\n        super(id, state);\n        this.dispatch = this.dispatch.bind(this);\n        this.currentState = init !== undefined ? init(initialState) : initialState;\n    }\n    update(reducer) {\n        this.reducer = reducer;\n        return [this.currentState, this.dispatch];\n    }\n    dispatch(action) {\n        this.currentState = this.reducer(this.currentState, action);\n        this.state.update();\n    }\n});\nexport { useReducer };\n","/**\n * @license\n * Copyright 2017 Google LLC\n * SPDX-License-Identifier: BSD-3-Clause\n */\n\nimport {Disconnectable, Part} from './lit-html.js';\n\nexport {\n  AttributePart,\n  BooleanAttributePart,\n  ChildPart,\n  ElementPart,\n  EventPart,\n  Part,\n  PropertyPart,\n} from './lit-html.js';\n\nexport interface DirectiveClass {\n  new (part: PartInfo): Directive;\n}\n\n/**\n * This utility type extracts the signature of a directive class's render()\n * method so we can use it for the type of the generated directive function.\n */\nexport type DirectiveParameters<C extends Directive> = Parameters<C['render']>;\n\n/**\n * A generated directive function doesn't evaluate the directive, but just\n * returns a DirectiveResult object that captures the arguments.\n */\nexport interface DirectiveResult<C extends DirectiveClass = DirectiveClass> {\n  /**\n   * This property needs to remain unminified.\n   * @internal */\n  ['_$litDirective$']: C;\n  /** @internal */\n  values: DirectiveParameters<InstanceType<C>>;\n}\n\nexport const PartType = {\n  ATTRIBUTE: 1,\n  CHILD: 2,\n  PROPERTY: 3,\n  BOOLEAN_ATTRIBUTE: 4,\n  EVENT: 5,\n  ELEMENT: 6,\n} as const;\n\nexport type PartType = typeof PartType[keyof typeof PartType];\n\nexport interface ChildPartInfo {\n  readonly type: typeof PartType.CHILD;\n}\n\nexport interface AttributePartInfo {\n  readonly type:\n    | typeof PartType.ATTRIBUTE\n    | typeof PartType.PROPERTY\n    | typeof PartType.BOOLEAN_ATTRIBUTE\n    | typeof PartType.EVENT;\n  readonly strings?: ReadonlyArray<string>;\n  readonly name: string;\n  readonly tagName: string;\n}\n\nexport interface ElementPartInfo {\n  readonly type: typeof PartType.ELEMENT;\n}\n\n/**\n * Information about the part a directive is bound to.\n *\n * This is useful for checking that a directive is attached to a valid part,\n * such as with directive that can only be used on attribute bindings.\n */\nexport type PartInfo = ChildPartInfo | AttributePartInfo | ElementPartInfo;\n\n/**\n * Creates a user-facing directive function from a Directive class. This\n * function has the same parameters as the directive's render() method.\n */\nexport const directive =\n  <C extends DirectiveClass>(c: C) =>\n  (...values: DirectiveParameters<InstanceType<C>>): DirectiveResult<C> => ({\n    // This property needs to remain unminified.\n    ['_$litDirective$']: c,\n    values,\n  });\n\n/**\n * Base class for creating custom directives. Users should extend this class,\n * implement `render` and/or `update`, and then pass their subclass to\n * `directive`.\n */\nexport abstract class Directive implements Disconnectable {\n  //@internal\n  __part!: Part;\n  //@internal\n  __attributeIndex: number | undefined;\n  //@internal\n  __directive?: Directive;\n\n  //@internal\n  _$parent!: Disconnectable;\n\n  // These will only exist on the AsyncDirective subclass\n  //@internal\n  _$disconnectableChildren?: Set<Disconnectable>;\n  // This property needs to remain unminified.\n  //@internal\n  ['_$notifyDirectiveConnectionChanged']?(isConnected: boolean): void;\n\n  constructor(_partInfo: PartInfo) {}\n\n  // See comment in Disconnectable interface for why this is a getter\n  get _$isConnected() {\n    return this._$parent._$isConnected;\n  }\n\n  /** @internal */\n  _$initialize(\n    part: Part,\n    parent: Disconnectable,\n    attributeIndex: number | undefined\n  ) {\n    this.__part = part;\n    this._$parent = parent;\n    this.__attributeIndex = attributeIndex;\n  }\n  /** @internal */\n  _$resolve(part: Part, props: Array<unknown>): unknown {\n    return this.update(part, props);\n  }\n\n  abstract render(...props: Array<unknown>): unknown;\n\n  update(_part: Part, props: Array<unknown>): unknown {\n    return this.render(...props);\n  }\n}\n","/**\n * @license\n * Copyright 2020 Google LLC\n * SPDX-License-Identifier: BSD-3-Clause\n */\n\nimport {_$LH, Part, DirectiveParent, TemplateResult} from './lit-html.js';\nimport {\n  DirectiveResult,\n  DirectiveClass,\n  PartInfo,\n  AttributePartInfo,\n} from './directive.js';\ntype Primitive = null | undefined | boolean | number | string | symbol | bigint;\n\nconst {_ChildPart: ChildPart} = _$LH;\n\ntype ChildPart = InstanceType<typeof ChildPart>;\n\nconst ENABLE_SHADYDOM_NOPATCH = true;\n\nconst wrap =\n  ENABLE_SHADYDOM_NOPATCH &&\n  window.ShadyDOM?.inUse &&\n  window.ShadyDOM?.noPatch === true\n    ? window.ShadyDOM!.wrap\n    : (node: Node) => node;\n\n/**\n * Tests if a value is a primitive value.\n *\n * See https://tc39.github.io/ecma262/#sec-typeof-operator\n */\nexport const isPrimitive = (value: unknown): value is Primitive =>\n  value === null || (typeof value != 'object' && typeof value != 'function');\n\nexport const TemplateResultType = {\n  HTML: 1,\n  SVG: 2,\n} as const;\n\nexport type TemplateResultType =\n  typeof TemplateResultType[keyof typeof TemplateResultType];\n\n/**\n * Tests if a value is a TemplateResult.\n */\nexport const isTemplateResult = (\n  value: unknown,\n  type?: TemplateResultType\n): value is TemplateResult =>\n  type === undefined\n    ? // This property needs to remain unminified.\n      (value as TemplateResult)?.['_$litType$'] !== undefined\n    : (value as TemplateResult)?.['_$litType$'] === type;\n\n/**\n * Tests if a value is a DirectiveResult.\n */\nexport const isDirectiveResult = (value: unknown): value is DirectiveResult =>\n  // This property needs to remain unminified.\n  (value as DirectiveResult)?.['_$litDirective$'] !== undefined;\n\n/**\n * Retrieves the Directive class for a DirectiveResult\n */\nexport const getDirectiveClass = (value: unknown): DirectiveClass | undefined =>\n  // This property needs to remain unminified.\n  (value as DirectiveResult)?.['_$litDirective$'];\n\n/**\n * Tests whether a part has only a single-expression with no strings to\n * interpolate between.\n *\n * Only AttributePart and PropertyPart can have multiple expressions.\n * Multi-expression parts have a `strings` property and single-expression\n * parts do not.\n */\nexport const isSingleExpression = (part: PartInfo) =>\n  (part as AttributePartInfo).strings === undefined;\n\nconst createMarker = () => document.createComment('');\n\n/**\n * Inserts a ChildPart into the given container ChildPart's DOM, either at the\n * end of the container ChildPart, or before the optional `refPart`.\n *\n * This does not add the part to the containerPart's committed value. That must\n * be done by callers.\n *\n * @param containerPart Part within which to add the new ChildPart\n * @param refPart Part before which to add the new ChildPart; when omitted the\n *     part added to the end of the `containerPart`\n * @param part Part to insert, or undefined to create a new part\n */\nexport const insertPart = (\n  containerPart: ChildPart,\n  refPart?: ChildPart,\n  part?: ChildPart\n): ChildPart => {\n  const container = wrap(containerPart._$startNode).parentNode!;\n\n  const refNode =\n    refPart === undefined ? containerPart._$endNode : refPart._$startNode;\n\n  if (part === undefined) {\n    const startNode = wrap(container).insertBefore(createMarker(), refNode);\n    const endNode = wrap(container).insertBefore(createMarker(), refNode);\n    part = new ChildPart(\n      startNode,\n      endNode,\n      containerPart,\n      containerPart.options\n    );\n  } else {\n    const endNode = wrap(part._$endNode!).nextSibling;\n    const oldParent = part._$parent;\n    const parentChanged = oldParent !== containerPart;\n    if (parentChanged) {\n      part._$reparentDisconnectables?.(containerPart);\n      // Note that although `_$reparentDisconnectables` updates the part's\n      // `_$parent` reference after unlinking from its current parent, that\n      // method only exists if Disconnectables are present, so we need to\n      // unconditionally set it here\n      part._$parent = containerPart;\n      // Since the _$isConnected getter is somewhat costly, only\n      // read it once we know the subtree has directives that need\n      // to be notified\n      let newConnectionState;\n      if (\n        part._$notifyConnectionChanged !== undefined &&\n        (newConnectionState = containerPart._$isConnected) !==\n          oldParent!._$isConnected\n      ) {\n        part._$notifyConnectionChanged(newConnectionState);\n      }\n    }\n    if (endNode !== refNode || parentChanged) {\n      let start: Node | null = part._$startNode;\n      while (start !== endNode) {\n        const n: Node | null = wrap(start!).nextSibling;\n        wrap(container).insertBefore(start!, refNode);\n        start = n;\n      }\n    }\n  }\n\n  return part;\n};\n\n/**\n * Sets the value of a Part.\n *\n * Note that this should only be used to set/update the value of user-created\n * parts (i.e. those created using `insertPart`); it should not be used\n * by directives to set the value of the directive's container part. Directives\n * should return a value from `update`/`render` to update their part state.\n *\n * For directives that require setting their part value asynchronously, they\n * should extend `AsyncDirective` and call `this.setValue()`.\n *\n * @param part Part to set\n * @param value Value to set\n * @param index For `AttributePart`s, the index to set\n * @param directiveParent Used internally; should not be set by user\n */\nexport const setChildPartValue = <T extends ChildPart>(\n  part: T,\n  value: unknown,\n  directiveParent: DirectiveParent = part\n): T => {\n  part._$setValue(value, directiveParent);\n  return part;\n};\n\n// A sentinal value that can never appear as a part value except when set by\n// live(). Used to force a dirty-check to fail and cause a re-render.\nconst RESET_VALUE = {};\n\n/**\n * Sets the committed value of a ChildPart directly without triggering the\n * commit stage of the part.\n *\n * This is useful in cases where a directive needs to update the part such\n * that the next update detects a value change or not. When value is omitted,\n * the next update will be guaranteed to be detected as a change.\n *\n * @param part\n * @param value\n */\nexport const setCommittedValue = (part: Part, value: unknown = RESET_VALUE) =>\n  (part._$committedValue = value);\n\n/**\n * Returns the committed value of a ChildPart.\n *\n * The committed value is used for change detection and efficient updates of\n * the part. It can differ from the value set by the template or directive in\n * cases where the template value is transformed before being commited.\n *\n * - `TemplateResult`s are committed as a `TemplateInstance`\n * - Iterables are committed as `Array<ChildPart>`\n * - All other types are committed as the template value or value returned or\n *   set by a directive.\n *\n * @param part\n */\nexport const getCommittedValue = (part: ChildPart) => part._$committedValue;\n\n/**\n * Removes a ChildPart from the DOM, including any of its content.\n *\n * @param part The Part to remove\n */\nexport const removePart = (part: ChildPart) => {\n  part._$notifyConnectionChanged?.(false, true);\n  let start: ChildNode | null = part._$startNode;\n  const end: ChildNode | null = wrap(part._$endNode!).nextSibling;\n  while (start !== end) {\n    const n: ChildNode | null = wrap(start!).nextSibling;\n    (wrap(start!) as ChildNode).remove();\n    start = n;\n  }\n};\n\nexport const clearPart = (part: ChildPart) => {\n  part._$clear();\n};\n","import { directive } from 'lit/directive.js';\nimport { noChange } from 'lit';\nimport { AsyncDirective } from 'lit/async-directive.js';\nimport { BaseScheduler } from './scheduler.js';\nconst includes = Array.prototype.includes;\nconst partToScheduler = new WeakMap();\nconst schedulerToPart = new WeakMap();\nclass Scheduler extends BaseScheduler {\n    args;\n    setValue;\n    constructor(renderer, part, setValue) {\n        super(renderer, part);\n        this.state.virtual = true;\n        this.setValue = setValue;\n    }\n    render() {\n        return this.state.run(() => this.renderer.apply(this.host, this.args));\n    }\n    commit(result) {\n        this.setValue(result);\n    }\n    teardown() {\n        super.teardown();\n        let part = schedulerToPart.get(this);\n        partToScheduler.delete(part);\n    }\n}\nfunction makeVirtual() {\n    function virtual(renderer) {\n        class VirtualDirective extends AsyncDirective {\n            cont;\n            constructor(partInfo) {\n                super(partInfo);\n                this.cont = undefined;\n            }\n            update(part, args) {\n                this.cont = partToScheduler.get(part);\n                if (!this.cont || this.cont.renderer !== renderer) {\n                    this.cont = new Scheduler(renderer, part, (r) => { this.setValue(r); });\n                    partToScheduler.set(part, this.cont);\n                    schedulerToPart.set(this.cont, part);\n                    teardownOnRemove(this.cont, part);\n                }\n                this.cont.args = args;\n                this.cont.update();\n                return this.render(args);\n            }\n            render(args) {\n                return noChange;\n            }\n        }\n        return directive(VirtualDirective);\n    }\n    return virtual;\n}\nfunction teardownOnRemove(cont, part, node = part.startNode) {\n    let frag = node.parentNode;\n    let mo = new MutationObserver(mutations => {\n        for (let mutation of mutations) {\n            if (includes.call(mutation.removedNodes, node)) {\n                mo.disconnect();\n                if (node.parentNode instanceof ShadowRoot) {\n                    teardownOnRemove(cont, part);\n                }\n                else {\n                    cont.teardown();\n                }\n                break;\n            }\n            else if (includes.call(mutation.addedNodes, node.nextSibling)) {\n                mo.disconnect();\n                teardownOnRemove(cont, part, node.nextSibling || undefined);\n                break;\n            }\n        }\n    });\n    mo.observe(frag, { childList: true });\n}\nexport { makeVirtual };\n","import { html, render } from 'lit';\nimport haunted from './core.js';\nimport { makeVirtual } from './virtual.js';\nconst { component, createContext } = haunted({ render });\nconst virtual = makeVirtual();\nexport { component, createContext, virtual, html, render };\n","import { makeComponent } from './component.js';\nimport { makeContext } from './create-context.js';\nfunction haunted({ render }) {\n    const component = makeComponent(render);\n    const createContext = makeContext(component);\n    return { component, createContext };\n}\nexport { haunted as default };\nexport { useCallback } from './use-callback.js';\nexport { useController } from './use-controller.js';\nexport { useEffect } from './use-effect.js';\nexport { useLayoutEffect } from './use-layout-effect.js';\nexport { useState } from './use-state.js';\nexport { useReducer } from './use-reducer.js';\nexport { useMemo } from './use-memo.js';\nexport { useContext } from './use-context.js';\nexport { useRef } from './use-ref.js';\nexport { hook, Hook } from './hook.js';\nexport { BaseScheduler } from './scheduler.js';\nexport { State } from './state.js';\n","/**\n * @license\n * Copyright 2018 Google LLC\n * SPDX-License-Identifier: BSD-3-Clause\n */\n\nimport {AttributePart, noChange} from '../lit-html.js';\nimport {\n  directive,\n  Directive,\n  DirectiveParameters,\n  PartInfo,\n  PartType,\n} from '../directive.js';\n\n/**\n * A key-value set of class names to truthy values.\n */\nexport interface ClassInfo {\n  readonly [name: string]: string | boolean | number;\n}\n\nclass ClassMapDirective extends Directive {\n  /**\n   * Stores the ClassInfo object applied to a given AttributePart.\n   * Used to unset existing values when a new ClassInfo object is applied.\n   */\n  private _previousClasses?: Set<string>;\n  private _staticClasses?: Set<string>;\n\n  constructor(partInfo: PartInfo) {\n    super(partInfo);\n    if (\n      partInfo.type !== PartType.ATTRIBUTE ||\n      partInfo.name !== 'class' ||\n      (partInfo.strings?.length as number) > 2\n    ) {\n      throw new Error(\n        '`classMap()` can only be used in the `class` attribute ' +\n          'and must be the only part in the attribute.'\n      );\n    }\n  }\n\n  render(classInfo: ClassInfo) {\n    // Add spaces to ensure separation from static classes\n    return (\n      ' ' +\n      Object.keys(classInfo)\n        .filter((key) => classInfo[key])\n        .join(' ') +\n      ' '\n    );\n  }\n\n  override update(part: AttributePart, [classInfo]: DirectiveParameters<this>) {\n    // Remember dynamic classes on the first render\n    if (this._previousClasses === undefined) {\n      this._previousClasses = new Set();\n      if (part.strings !== undefined) {\n        this._staticClasses = new Set(\n          part.strings\n            .join(' ')\n            .split(/\\s/)\n            .filter((s) => s !== '')\n        );\n      }\n      for (const name in classInfo) {\n        if (classInfo[name] && !this._staticClasses?.has(name)) {\n          this._previousClasses.add(name);\n        }\n      }\n      return this.render(classInfo);\n    }\n\n    const classList = part.element.classList;\n\n    // Remove old classes that no longer apply\n    // We use forEach() instead of for-of so that we don't require down-level\n    // iteration.\n    this._previousClasses.forEach((name) => {\n      if (!(name in classInfo)) {\n        classList.remove(name);\n        this._previousClasses!.delete(name);\n      }\n    });\n\n    // Add or remove classes based on their classMap value\n    for (const name in classInfo) {\n      // We explicitly want a loose truthy check of `value` because it seems\n      // more convenient that '' and 0 are skipped.\n      const value = !!classInfo[name];\n      if (\n        value !== this._previousClasses.has(name) &&\n        !this._staticClasses?.has(name)\n      ) {\n        if (value) {\n          classList.add(name);\n          this._previousClasses.add(name);\n        } else {\n          classList.remove(name);\n          this._previousClasses.delete(name);\n        }\n      }\n    }\n    return noChange;\n  }\n}\n\n/**\n * A directive that applies dynamic CSS classes.\n *\n * This must be used in the `class` attribute and must be the only part used in\n * the attribute. It takes each property in the `classInfo` argument and adds\n * the property name to the element's `classList` if the property value is\n * truthy; if the property value is falsey, the property name is removed from\n * the element's `class`.\n *\n * For example `{foo: bar}` applies the class `foo` if the value of `bar` is\n * truthy.\n *\n * @param classInfo\n */\nexport const classMap = directive(ClassMapDirective);\n\n/**\n * The type of the class that powers this directive. Necessary for naming the\n * directive's return type.\n */\nexport type {ClassMapDirective};\n","import { useEffect, useState } from 'haunted';\nimport clone from 'lodash.clone';\n\n/**\n * Subscribe to a replicant, returns tuple of the replicant value and `setValue` function.\n * The component using this function gets re-rendered when the value is updated.\n * The `setValue` function can be used to update replicant value.\n * @param replicantName The name of the replicant to use\n * @param initialValue Initial value to pass to `useState` function\n * @param options Options object.  Currently supports the optional `namespace` option\n */\nconst useReplicant = (replicantName, initialValue, options) => {\n  const [value, updateValue] = useState(initialValue);\n\n  const replicantOptions = options && {\n    defaultValue: options.defaultValue,\n    persistent: options.persistent,\n    schemaPath: options.schemaPath,\n  };\n  const replicant = options && options.namespace\n    ? nodecg.Replicant(\n      replicantName,\n      options.namespace,\n      replicantOptions,\n    )\n    : nodecg.Replicant(replicantName, replicantOptions);\n\n  const changeHandler = (newValue) => {\n    updateValue((oldValue) => {\n      if (newValue !== oldValue) {\n        return newValue;\n      }\n      // replicant.value has always the same reference. Cloning to cause re-rendering\n      return clone(newValue);\n    });\n  };\n\n  useEffect(() => {\n    replicant.on('change', changeHandler);\n    return () => {\n      replicant.removeListener('change', changeHandler);\n    };\n  }, [replicant]);\n\n  return [\n    value,\n    (newValue) => {\n      replicant.value = newValue;\n    },\n  ];\n};\n\nconst useReplicantOnce = (replicantName, initialValue, options) => {\n  const [state, setState] = useState(initialValue);\n  if (options && options.bundle) {\n    nodecg.readReplicant(replicantName, options.bundle, (value) => {\n      setState(value);\n    });\n  } else {\n    nodecg.readReplicant(replicantName, (value) => {\n      setState(value);\n    });\n  }\n  return state;\n};\n\nconst useListenFor = (messageName, handler, options) => {\n  useEffect(() => {\n    if (options && options.bundle) {\n      nodecg.listenFor(messageName, options.bundle, handler);\n      return () => {\n        nodecg.unlisten(messageName, options.bundle, handler);\n      };\n    }\n    nodecg.listenFor(messageName, handler);\n    return () => {\n      nodecg.unlisten(messageName, handler);\n    };\n  }, [handler, messageName, options]);\n};\n\nexport { useReplicant, useReplicantOnce, useListenFor };\n","/**\n * @license\n * Copyright 2021 Google LLC\n * SPDX-License-Identifier: BSD-3-Clause\n */\n\n/**\n * When `condition` is true, returns the result of calling `trueCase()`, else\n * returns the result of calling `falseCase()` if `falseCase` is defined.\n *\n * This is a convenience wrapper around a ternary expression that makes it a\n * little nicer to write an inline conditional without an else.\n *\n * @example\n *\n * ```ts\n * render() {\n *   return html`\n *     ${when(this.user, () => html`User: ${this.user.username}`, () => html`Sign In...`)}\n *   `;\n * }\n * ```\n */\nexport function when<T, F>(\n  condition: true,\n  trueCase: () => T,\n  falseCase?: () => F\n): T;\nexport function when<T, F = undefined>(\n  condition: false,\n  trueCase: () => T,\n  falseCase?: () => F\n): F;\nexport function when<T, F = undefined>(\n  condition: unknown,\n  trueCase: () => T,\n  falseCase?: () => F\n): T | F;\nexport function when(\n  condition: unknown,\n  trueCase: () => unknown,\n  falseCase?: () => unknown\n): unknown {\n  return condition ? trueCase() : falseCase?.();\n}\n","/**\n * @license\n * Copyright 2021 Google LLC\n * SPDX-License-Identifier: BSD-3-Clause\n */\n\n/**\n * Returns an iterable containing the result of calling `f(value)` on each\n * value in `items`.\n *\n * @example\n *\n * ```ts\n * render() {\n *   return html`\n *     <ul>\n *       ${map(items, (i) => html`<li>${i}</li>`)}\n *     </ul>\n *   `;\n * }\n * ```\n */\nexport function* map<T>(\n  items: Iterable<T> | undefined,\n  f: (value: T, index: number) => unknown\n) {\n  if (items !== undefined) {\n    let i = 0;\n    for (const value of items) {\n      yield f(value, i++);\n    }\n  }\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n * SPDX-License-Identifier: BSD-3-Clause\n */\n\nimport {nothing, TemplateResult, noChange} from '../lit-html.js';\nimport {directive, Directive, PartInfo, PartType} from '../directive.js';\n\nconst HTML_RESULT = 1;\n\nexport class UnsafeHTMLDirective extends Directive {\n  static directiveName = 'unsafeHTML';\n  static resultType = HTML_RESULT;\n\n  private _value: unknown = nothing;\n  private _templateResult?: TemplateResult;\n\n  constructor(partInfo: PartInfo) {\n    super(partInfo);\n    if (partInfo.type !== PartType.CHILD) {\n      throw new Error(\n        `${\n          (this.constructor as typeof UnsafeHTMLDirective).directiveName\n        }() can only be used in child bindings`\n      );\n    }\n  }\n\n  render(value: string | typeof nothing | typeof noChange | undefined | null) {\n    if (value === nothing || value == null) {\n      this._templateResult = undefined;\n      return (this._value = value);\n    }\n    if (value === noChange) {\n      return value;\n    }\n    if (typeof value != 'string') {\n      throw new Error(\n        `${\n          (this.constructor as typeof UnsafeHTMLDirective).directiveName\n        }() called with a non-string value`\n      );\n    }\n    if (value === this._value) {\n      return this._templateResult;\n    }\n    this._value = value;\n    const strings = [value] as unknown as TemplateStringsArray;\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    (strings as any).raw = strings;\n    // WARNING: impersonating a TemplateResult like this is extremely\n    // dangerous. Third-party directives should not do this.\n    return (this._templateResult = {\n      // Cast to a known set of integers that satisfy ResultType so that we\n      // don't have to export ResultType and possibly encourage this pattern.\n      // This property needs to remain unminified.\n      ['_$litType$']: (this.constructor as typeof UnsafeHTMLDirective)\n        .resultType as 1 | 2,\n      strings,\n      values: [],\n    });\n  }\n}\n\n/**\n * Renders the result as HTML, rather than text.\n *\n * The values `undefined`, `null`, and `nothing`, will all result in no content\n * (empty string) being rendered.\n *\n * Note, this is unsafe to use with any user-provided input that hasn't been\n * sanitized or escaped, as it may lead to cross-site-scripting\n * vulnerabilities.\n */\nexport const unsafeHTML = directive(UnsafeHTMLDirective);\n","/**\n@license\nCopyright (c) 2017 The Polymer Project Authors. All rights reserved.\nThis code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt\nThe complete set of authors may be found at http://polymer.github.io/AUTHORS.txt\nThe complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt\nCode distributed by Google as part of the polymer project is also\nsubject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt\n*/\n\n'use strict';\n\nexport const nativeShadow = !(\n  window['ShadyDOM'] && window['ShadyDOM']['inUse']\n);\nlet nativeCssVariables_;\n\n/**\n * @param {(ShadyCSSOptions | ShadyCSSInterface)=} settings\n */\nfunction calcCssVariables(settings) {\n  if (settings && settings['shimcssproperties']) {\n    nativeCssVariables_ = false;\n  } else {\n    // chrome 49 has semi-working css vars, check if box-shadow works\n    // safari 9.1 has a recalc bug: https://bugs.webkit.org/show_bug.cgi?id=155782\n    // However, shim css custom properties are only supported with ShadyDOM enabled,\n    // so fall back on native if we do not detect ShadyDOM\n    // Edge 15: custom properties used in ::before and ::after will also be used in the parent element\n    // https://developer.microsoft.com/en-us/microsoft-edge/platform/issues/12414257/\n    nativeCssVariables_ =\n      nativeShadow ||\n      Boolean(\n        !navigator.userAgent.match(/AppleWebKit\\/601|Edge\\/15/) &&\n          window.CSS &&\n          CSS.supports &&\n          CSS.supports('box-shadow', '0 0 0 var(--foo)')\n      );\n  }\n}\n\n/** @type {string | undefined} */\nexport let cssBuild;\nif (window.ShadyCSS && window.ShadyCSS.cssBuild !== undefined) {\n  cssBuild = window.ShadyCSS.cssBuild;\n}\n\n/** @type {boolean} */\nexport const disableRuntime = Boolean(\n  window.ShadyCSS && window.ShadyCSS.disableRuntime\n);\n\nif (window.ShadyCSS && window.ShadyCSS.nativeCss !== undefined) {\n  nativeCssVariables_ = window.ShadyCSS.nativeCss;\n} else if (window.ShadyCSS) {\n  calcCssVariables(window.ShadyCSS);\n  // reset window variable to let ShadyCSS API take its place\n  window.ShadyCSS = undefined;\n} else {\n  calcCssVariables(window['WebComponents'] && window['WebComponents']['flags']);\n}\n\n// Hack for type error under new type inference which doesn't like that\n// nativeCssVariables is updated in a function and assigns the type\n// `function(): ?` instead of `boolean`.\nexport const nativeCssVariables = /** @type {boolean} */ (nativeCssVariables_);\n","/**\n@license\nCopyright (c) 2017 The Polymer Project Authors. All rights reserved.\nThis code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt\nThe complete set of authors may be found at http://polymer.github.io/AUTHORS.txt\nThe complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt\nCode distributed by Google as part of the polymer project is also\nsubject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt\n*/\n\n/*\nExtremely simple css parser. Intended to be not more than what we need\nand definitely not necessarily correct =).\n*/\n\n'use strict';\n\n/** @unrestricted */\nclass StyleNode {\n  constructor() {\n    /** @type {number} */\n    this['start'] = 0;\n    /** @type {number} */\n    this['end'] = 0;\n    /** @type {StyleNode} */\n    this['previous'] = null;\n    /** @type {StyleNode} */\n    this['parent'] = null;\n    /** @type {Array<StyleNode>} */\n    this['rules'] = null;\n    /** @type {string} */\n    this['parsedCssText'] = '';\n    /** @type {string} */\n    this['cssText'] = '';\n    /** @type {boolean} */\n    this['atRule'] = false;\n    /** @type {number} */\n    this['type'] = 0;\n    /** @type {string} */\n    this['keyframesName'] = '';\n    /** @type {string} */\n    this['selector'] = '';\n    /** @type {string} */\n    this['parsedSelector'] = '';\n  }\n}\n\nexport {StyleNode};\n\n// given a string of css, return a simple rule tree\n/**\n * @param {string} text\n * @return {StyleNode}\n */\nexport function parse(text) {\n  text = clean(text);\n  return parseCss(lex(text), text);\n}\n\n// remove stuff we don't care about that may hinder parsing\n/**\n * @param {string} cssText\n * @return {string}\n */\nfunction clean(cssText) {\n  return cssText.replace(RX.comments, '').replace(RX.port, '');\n}\n\n// super simple {...} lexer that returns a node tree\n/**\n * @param {string} text\n * @return {!StyleNode}\n */\nfunction lex(text) {\n  let root = new StyleNode();\n  root['start'] = 0;\n  root['end'] = text.length;\n  let n = root;\n  for (let i = 0, l = text.length; i < l; i++) {\n    if (text[i] === OPEN_BRACE) {\n      if (!n['rules']) {\n        n['rules'] = [];\n      }\n      let p = n;\n      let previous = p['rules'][p['rules'].length - 1] || null;\n      n = new StyleNode();\n      n['start'] = i + 1;\n      n['parent'] = p;\n      n['previous'] = previous;\n      p['rules'].push(n);\n    } else if (text[i] === CLOSE_BRACE) {\n      n['end'] = i + 1;\n      n = n['parent'] || root;\n    }\n  }\n  return root;\n}\n\n// add selectors/cssText to node tree\n/**\n * @param {StyleNode} node\n * @param {string} text\n * @return {!StyleNode}\n */\nfunction parseCss(node, text) {\n  let t = text.substring(node['start'], node['end'] - 1);\n  node['parsedCssText'] = node['cssText'] = t.trim();\n  if (node['parent']) {\n    let ss = node['previous']\n      ? node['previous']['end']\n      : node['parent']['start'];\n    t = text.substring(ss, node['start'] - 1);\n    t = _expandUnicodeEscapes(t);\n    t = t.replace(RX.multipleSpaces, ' ');\n    // TODO(sorvell): ad hoc; make selector include only after last ;\n    // helps with mixin syntax\n    t = t.substring(t.lastIndexOf(';') + 1);\n    let s = (node['parsedSelector'] = node['selector'] = t.trim());\n    node['atRule'] = s.indexOf(AT_START) === 0;\n    // note, support a subset of rule types...\n    if (node['atRule']) {\n      if (s.indexOf(MEDIA_START) === 0) {\n        node['type'] = types.MEDIA_RULE;\n      } else if (s.match(RX.keyframesRule)) {\n        node['type'] = types.KEYFRAMES_RULE;\n        node['keyframesName'] = node['selector'].split(RX.multipleSpaces).pop();\n      }\n    } else {\n      if (s.indexOf(VAR_START) === 0) {\n        node['type'] = types.MIXIN_RULE;\n      } else {\n        node['type'] = types.STYLE_RULE;\n      }\n    }\n  }\n  let r$ = node['rules'];\n  if (r$) {\n    for (let i = 0, l = r$.length, r; i < l && (r = r$[i]); i++) {\n      parseCss(r, text);\n    }\n  }\n  return node;\n}\n\n/**\n * conversion of sort unicode escapes with spaces like `\\33 ` (and longer) into\n * expanded form that doesn't require trailing space `\\000033`\n * @param {string} s\n * @return {string}\n */\nfunction _expandUnicodeEscapes(s) {\n  return s.replace(/\\\\([0-9a-f]{1,6})\\s/gi, function () {\n    let code = arguments[1],\n      repeat = 6 - code.length;\n    while (repeat--) {\n      code = '0' + code;\n    }\n    return '\\\\' + code;\n  });\n}\n\n/**\n * stringify parsed css.\n * @param {StyleNode} node\n * @param {boolean=} preserveProperties\n * @param {string=} text\n * @return {string}\n */\nexport function stringify(node, preserveProperties, text = '') {\n  // calc rule cssText\n  let cssText = '';\n  if (node['cssText'] || node['rules']) {\n    let r$ = node['rules'];\n    if (r$ && !_hasMixinRules(r$)) {\n      for (let i = 0, l = r$.length, r; i < l && (r = r$[i]); i++) {\n        cssText = stringify(r, preserveProperties, cssText);\n      }\n    } else {\n      cssText = preserveProperties\n        ? node['cssText']\n        : removeCustomProps(node['cssText']);\n      cssText = cssText.trim();\n      if (cssText) {\n        cssText = '  ' + cssText + '\\n';\n      }\n    }\n  }\n  // emit rule if there is cssText\n  if (cssText) {\n    if (node['selector']) {\n      text += node['selector'] + ' ' + OPEN_BRACE + '\\n';\n    }\n    text += cssText;\n    if (node['selector']) {\n      text += CLOSE_BRACE + '\\n\\n';\n    }\n  }\n  return text;\n}\n\n/**\n * @param {Array<StyleNode>} rules\n * @return {boolean}\n */\nfunction _hasMixinRules(rules) {\n  let r = rules[0];\n  return (\n    Boolean(r) &&\n    Boolean(r['selector']) &&\n    r['selector'].indexOf(VAR_START) === 0\n  );\n}\n\n/**\n * @param {string} cssText\n * @return {string}\n */\nfunction removeCustomProps(cssText) {\n  cssText = removeCustomPropAssignment(cssText);\n  return removeCustomPropApply(cssText);\n}\n\n/**\n * @param {string} cssText\n * @return {string}\n */\nexport function removeCustomPropAssignment(cssText) {\n  return cssText.replace(RX.customProp, '').replace(RX.mixinProp, '');\n}\n\n/**\n * @param {string} cssText\n * @return {string}\n */\nfunction removeCustomPropApply(cssText) {\n  return cssText.replace(RX.mixinApply, '').replace(RX.varApply, '');\n}\n\n/** @enum {number} */\nexport const types = {\n  STYLE_RULE: 1,\n  KEYFRAMES_RULE: 7,\n  MEDIA_RULE: 4,\n  MIXIN_RULE: 1000,\n};\n\nconst OPEN_BRACE = '{';\nconst CLOSE_BRACE = '}';\n\n// helper regexp's\nconst RX = {\n  comments: /\\/\\*[^*]*\\*+([^/*][^*]*\\*+)*\\//gim,\n  port: /@import[^;]*;/gim,\n  customProp: /(?:^[^;\\-\\s}]+)?--[^;{}]*?:[^{};]*?(?:[;\\n]|$)/gim,\n  mixinProp: /(?:^[^;\\-\\s}]+)?--[^;{}]*?:[^{};]*?{[^}]*?}(?:[;\\n]|$)?/gim,\n  mixinApply: /@apply\\s*\\(?[^);]*\\)?\\s*(?:[;\\n]|$)?/gim,\n  varApply: /[^;:]*?:[^;]*?var\\([^;]*\\)(?:[;\\n]|$)?/gim,\n  keyframesRule: /^@[^\\s]*keyframes/,\n  multipleSpaces: /\\s+/g,\n};\n\nconst VAR_START = '--';\nconst MEDIA_START = '@media';\nconst AT_START = '@';\n","/**\n@license\nCopyright (c) 2017 The Polymer Project Authors. All rights reserved.\nThis code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt\nThe complete set of authors may be found at http://polymer.github.io/AUTHORS.txt\nThe complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt\nCode distributed by Google as part of the polymer project is also\nsubject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt\n*/\n\nexport const VAR_ASSIGN = /(?:^|[;\\s{]\\s*)(--[\\w-]*?)\\s*:\\s*(?:((?:'(?:\\\\'|.)*?'|\"(?:\\\\\"|.)*?\"|\\([^)]*?\\)|[^};{])+)|\\{([^}]*)\\}(?:(?=[;\\s}])|$))/gi;\nexport const MIXIN_MATCH = /(?:^|\\W+)@apply\\s*\\(?([^);\\n]*)\\)?/gi;\nexport const VAR_CONSUMED = /(--[\\w-]+)\\s*([:,;)]|$)/gi;\nexport const ANIMATION_MATCH = /(animation\\s*:)|(animation-name\\s*:)/;\nexport const MEDIA_MATCH = /@media\\s(.*)/;\nexport const IS_VAR = /^--/;\nexport const BRACKETED = /\\{[^}]*\\}/g;\nexport const HOST_PREFIX = '(?:^|[^.#[:])';\nexport const HOST_SUFFIX = '($|[.:[\\\\s>+~])';\n","/**\n@license\nCopyright (c) 2017 The Polymer Project Authors. All rights reserved.\nThis code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt\nThe complete set of authors may be found at http://polymer.github.io/AUTHORS.txt\nThe complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt\nCode distributed by Google as part of the polymer project is also\nsubject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt\n*/\n\n'use strict';\n\n/** @type {!Set<string>} */\nconst styleTextSet = new Set();\n\nexport const scopingAttribute = 'shady-unscoped';\n\n/**\n * Add a specifically-marked style to the document directly, and only one copy of that style.\n *\n * @param {!HTMLStyleElement} style\n * @return {undefined}\n */\nexport function processUnscopedStyle(style) {\n  const text = style.textContent;\n  if (!styleTextSet.has(text)) {\n    styleTextSet.add(text);\n    const newStyle = document.createElement('style');\n    newStyle.setAttribute('shady-unscoped', '');\n    newStyle.textContent = text;\n    document.head.appendChild(newStyle);\n  }\n}\n\n/**\n * Check if a style is supposed to be unscoped\n * @param {!HTMLStyleElement} style\n * @return {boolean} true if the style has the unscoping attribute\n */\nexport function isUnscopedStyle(style) {\n  return style.hasAttribute(scopingAttribute);\n}\n","/**\n@license\nCopyright (c) 2017 The Polymer Project Authors. All rights reserved.\nThis code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt\nThe complete set of authors may be found at http://polymer.github.io/AUTHORS.txt\nThe complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt\nCode distributed by Google as part of the polymer project is also\nsubject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt\n*/\n\n'use strict';\n\nimport {nativeShadow, nativeCssVariables, cssBuild} from './style-settings.js';\nimport {parse, stringify, types, StyleNode} from './css-parse.js'; // eslint-disable-line @typescript-eslint/no-unused-vars\nimport {MEDIA_MATCH} from './common-regex.js';\n// prettier-ignore\nimport {processUnscopedStyle, isUnscopedStyle} from './unscoped-style-handler.js';\n\n/**\n * @param {string|StyleNode} rules\n * @param {function(StyleNode)=} callback\n * @return {string}\n */\nexport function toCssText(rules, callback) {\n  if (!rules) {\n    return '';\n  }\n  if (typeof rules === 'string') {\n    rules = parse(rules);\n  }\n  if (callback) {\n    forEachRule(rules, callback);\n  }\n  return stringify(rules, nativeCssVariables);\n}\n\n/**\n * @param {HTMLStyleElement} style\n * @return {StyleNode}\n */\nexport function rulesForStyle(style) {\n  if (!style['__cssRules'] && style.textContent) {\n    style['__cssRules'] = parse(style.textContent);\n  }\n  return style['__cssRules'] || null;\n}\n\n// Tests if a rule is a keyframes selector, which looks almost exactly\n// like a normal selector but is not (it has nothing to do with scoping\n// for example).\n/**\n * @param {StyleNode} rule\n * @return {boolean}\n */\nexport function isKeyframesSelector(rule) {\n  return (\n    Boolean(rule['parent']) && rule['parent']['type'] === types.KEYFRAMES_RULE\n  );\n}\n\n/**\n * @param {StyleNode} node\n * @param {Function=} styleRuleCallback\n * @param {Function=} keyframesRuleCallback\n * @param {boolean=} onlyActiveRules\n */\nexport function forEachRule(\n  node,\n  styleRuleCallback,\n  keyframesRuleCallback,\n  onlyActiveRules\n) {\n  if (!node) {\n    return;\n  }\n  let skipRules = false;\n  let type = node['type'];\n  if (onlyActiveRules) {\n    if (type === types.MEDIA_RULE) {\n      let matchMedia = node['selector'].match(MEDIA_MATCH);\n      if (matchMedia) {\n        // if rule is a non matching @media rule, skip subrules\n        if (!window.matchMedia(matchMedia[1]).matches) {\n          skipRules = true;\n        }\n      }\n    }\n  }\n  if (type === types.STYLE_RULE) {\n    styleRuleCallback(node);\n  } else if (keyframesRuleCallback && type === types.KEYFRAMES_RULE) {\n    keyframesRuleCallback(node);\n  } else if (type === types.MIXIN_RULE) {\n    skipRules = true;\n  }\n  let r$ = node['rules'];\n  if (r$ && !skipRules) {\n    for (let i = 0, l = r$.length, r; i < l && (r = r$[i]); i++) {\n      forEachRule(r, styleRuleCallback, keyframesRuleCallback, onlyActiveRules);\n    }\n  }\n}\n\n// add a string of cssText to the document.\n/**\n * @param {string} cssText\n * @param {string} moniker\n * @param {Node} target\n * @param {Node} contextNode\n * @return {HTMLStyleElement}\n */\nexport function applyCss(cssText, moniker, target, contextNode) {\n  let style = createScopeStyle(cssText, moniker);\n  applyStyle(style, target, contextNode);\n  return style;\n}\n\n/**\n * @param {string} cssText\n * @param {string} moniker\n * @return {!HTMLStyleElement}\n */\nexport function createScopeStyle(cssText, moniker) {\n  let style = /** @type {HTMLStyleElement} */ (document.createElement('style'));\n  if (moniker) {\n    style.setAttribute('scope', moniker);\n  }\n  style.textContent = cssText;\n  return style;\n}\n\n/**\n * Track the position of the last added style for placing placeholders\n * @type {Node}\n */\nlet lastHeadApplyNode = null;\n\n// insert a comment node as a styling position placeholder.\n/**\n * @param {string} moniker\n * @return {!Comment}\n */\nexport function applyStylePlaceHolder(moniker) {\n  let placeHolder = document.createComment(\n    ' Shady DOM styles for ' + moniker + ' '\n  );\n  let after = lastHeadApplyNode ? lastHeadApplyNode['nextSibling'] : null;\n  let scope = document.head;\n  scope.insertBefore(placeHolder, after || scope.firstChild);\n  lastHeadApplyNode = placeHolder;\n  return placeHolder;\n}\n\n/**\n * @param {HTMLStyleElement} style\n * @param {?Node} target\n * @param {?Node} contextNode\n */\nexport function applyStyle(style, target, contextNode) {\n  target = target || document.head;\n  let after = (contextNode && contextNode.nextSibling) || target.firstChild;\n  target.insertBefore(style, after);\n  if (!lastHeadApplyNode) {\n    lastHeadApplyNode = style;\n  } else {\n    // only update lastHeadApplyNode if the new style is inserted after the old lastHeadApplyNode\n    let position = style.compareDocumentPosition(lastHeadApplyNode);\n    if (position === Node.DOCUMENT_POSITION_PRECEDING) {\n      lastHeadApplyNode = style;\n    }\n  }\n}\n\n/**\n * @param {string} buildType\n * @return {boolean}\n */\nexport function isTargetedBuild(buildType) {\n  return nativeShadow ? buildType === 'shadow' : buildType === 'shady';\n}\n\n/**\n * Walk from text[start] matching parens and\n * returns position of the outer end paren\n * @param {string} text\n * @param {number} start\n * @return {number}\n */\nexport function findMatchingParen(text, start) {\n  let level = 0;\n  for (let i = start, l = text.length; i < l; i++) {\n    if (text[i] === '(') {\n      level++;\n    } else if (text[i] === ')') {\n      if (--level === 0) {\n        return i;\n      }\n    }\n  }\n  return -1;\n}\n\n/**\n * @param {string} str\n * @param {function(string, string, string, string)} callback\n */\nexport function processVariableAndFallback(str, callback) {\n  // find 'var('\n  let start = str.indexOf('var(');\n  if (start === -1) {\n    // no var?, everything is prefix\n    return callback(str, '', '', '');\n  }\n  //${prefix}var(${inner})${suffix}\n  let end = findMatchingParen(str, start + 3);\n  let inner = str.substring(start + 4, end);\n  let prefix = str.substring(0, start);\n  // suffix may have other variables\n  let suffix = processVariableAndFallback(str.substring(end + 1), callback);\n  let comma = inner.indexOf(',');\n  // value and fallback args should be trimmed to match in property lookup\n  if (comma === -1) {\n    // variable, no fallback\n    return callback(prefix, inner.trim(), '', suffix);\n  }\n  // var(${value},${fallback})\n  let value = inner.substring(0, comma).trim();\n  let fallback = inner.substring(comma + 1).trim();\n  return callback(prefix, value, fallback, suffix);\n}\n\n/**\n * @param {Element} element\n * @param {string} value\n */\nexport function setElementClassRaw(element, value) {\n  // use native setAttribute provided by ShadyDOM when setAttribute is patched\n  if (nativeShadow) {\n    element.setAttribute('class', value);\n  } else {\n    window['ShadyDOM']['nativeMethods']['setAttribute'].call(\n      element,\n      'class',\n      value\n    );\n  }\n}\n\n/**\n * @type {function(*):*}\n */\nexport const wrap =\n  (window['ShadyDOM'] && window['ShadyDOM']['wrap']) || ((node) => node);\n\n/**\n * @param {Element | {is: string, extends: string}} element\n * @return {{is: string, typeExtension: string}}\n */\nexport function getIsExtends(element) {\n  let localName = element['localName'];\n  let is = '',\n    typeExtension = '';\n  /*\n  NOTE: technically, this can be wrong for certain svg elements\n  with `-` in the name like `<font-face>`\n  */\n  if (localName) {\n    if (localName.indexOf('-') > -1) {\n      is = localName;\n    } else {\n      typeExtension = localName;\n      is = (element.getAttribute && element.getAttribute('is')) || '';\n    }\n  } else {\n    is = /** @type {?} */ (element).is;\n    typeExtension = /** @type {?} */ (element).extends;\n  }\n  return {is, typeExtension};\n}\n\n/**\n * @param {Element|DocumentFragment} element\n * @return {string}\n */\nexport function gatherStyleText(element) {\n  /** @type {!Array<string>} */\n  const styleTextParts = [];\n  const styles = /** @type {!NodeList<!HTMLStyleElement>} */ (element.querySelectorAll(\n    'style'\n  ));\n  for (let i = 0; i < styles.length; i++) {\n    const style = styles[i];\n    if (isUnscopedStyle(style)) {\n      if (!nativeShadow) {\n        processUnscopedStyle(style);\n        style.parentNode.removeChild(style);\n      }\n    } else {\n      styleTextParts.push(style.textContent);\n      style.parentNode.removeChild(style);\n    }\n  }\n  return styleTextParts.join('').trim();\n}\n\n/**\n * Split a selector separated by commas into an array in a smart way\n * @param {string} selector\n * @return {!Array<string>}\n */\nexport function splitSelectorList(selector) {\n  const parts = [];\n  let part = '';\n  for (let i = 0; i >= 0 && i < selector.length; i++) {\n    // A selector with parentheses will be one complete part\n    if (selector[i] === '(') {\n      // find the matching paren\n      const end = findMatchingParen(selector, i);\n      // push the paren block into the part\n      part += selector.slice(i, end + 1);\n      // move the index to after the paren block\n      i = end;\n    } else if (selector[i] === ',') {\n      parts.push(part);\n      part = '';\n    } else {\n      part += selector[i];\n    }\n  }\n  // catch any pieces after the last comma\n  if (part) {\n    parts.push(part);\n  }\n  return parts;\n}\n\nconst CSS_BUILD_ATTR = 'css-build';\n\n/**\n * Return the polymer-css-build \"build type\" applied to this element\n *\n * @param {!HTMLElement} element\n * @return {string} Can be \"\", \"shady\", or \"shadow\"\n */\nexport function getCssBuild(element) {\n  if (cssBuild !== undefined) {\n    return /** @type {string} */ (cssBuild);\n  }\n  if (element.__cssBuild === undefined) {\n    // try attribute first, as it is the common case\n    const attrValue = element.getAttribute(CSS_BUILD_ATTR);\n    if (attrValue) {\n      element.__cssBuild = attrValue;\n    } else {\n      const buildComment = getBuildComment(element);\n      if (buildComment !== '') {\n        // remove build comment so it is not needlessly copied into every element instance\n        removeBuildComment(element);\n      }\n      element.__cssBuild = buildComment;\n    }\n  }\n  return element.__cssBuild || '';\n}\n\n/**\n * Check if the given element, either a <template> or <style>, has been processed\n * by polymer-css-build.\n *\n * If so, then we can make a number of optimizations:\n * - polymer-css-build will decompose mixins into individual CSS Custom Properties,\n * so the ApplyShim can be skipped entirely.\n * - Under native ShadowDOM, the style text can just be copied into each instance\n * without modification\n * - If the build is \"shady\" and ShadyDOM is in use, the styling does not need\n * scoping beyond the shimming of CSS Custom Properties\n *\n * @param {!HTMLElement} element\n * @return {boolean}\n */\nexport function elementHasBuiltCss(element) {\n  return getCssBuild(element) !== '';\n}\n\n/**\n * For templates made with tagged template literals, polymer-css-build will\n * insert a comment of the form `<!--css-build:shadow-->`\n *\n * @param {!HTMLElement} element\n * @return {string}\n */\nexport function getBuildComment(element) {\n  const buildComment =\n    element.localName === 'template'\n      ? /** @type {!HTMLTemplateElement} */ (element).content.firstChild\n      : element.firstChild;\n  if (buildComment instanceof Comment) {\n    const commentParts = buildComment.textContent.trim().split(':');\n    if (commentParts[0] === CSS_BUILD_ATTR) {\n      return commentParts[1];\n    }\n  }\n  return '';\n}\n\n/**\n * Check if the css build status is optimal, and do no unneeded work.\n *\n * @param {string=} cssBuild CSS build status\n * @return {boolean} css build is optimal or not\n */\nexport function isOptimalCssBuild(cssBuild = '') {\n  // CSS custom property shim always requires work\n  if (cssBuild === '' || !nativeCssVariables) {\n    return false;\n  }\n  return nativeShadow ? cssBuild === 'shadow' : cssBuild === 'shady';\n}\n\n/**\n * @param {!HTMLElement} element\n */\nfunction removeBuildComment(element) {\n  const buildComment =\n    element.localName === 'template'\n      ? /** @type {!HTMLTemplateElement} */ (element).content.firstChild\n      : element.firstChild;\n  buildComment.parentNode.removeChild(buildComment);\n}\n","/**\n@license\nCopyright (c) 2017 The Polymer Project Authors. All rights reserved.\nThis code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt\nThe complete set of authors may be found at http://polymer.github.io/AUTHORS.txt\nThe complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt\nCode distributed by Google as part of the polymer project is also\nsubject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt\n*/\n\n'use strict';\n\nimport {MIXIN_MATCH, VAR_ASSIGN} from './common-regex.js';\n\n/**\n * @param {Element} element\n * @param {Object=} properties\n */\nexport function updateNativeProperties(element, properties) {\n  // remove previous properties\n  for (let p in properties) {\n    // NOTE: for bc with shim, don't apply null values.\n    if (p === null) {\n      element.style.removeProperty(p);\n    } else {\n      element.style.setProperty(p, properties[p]);\n    }\n  }\n}\n\n/**\n * @param {Element} element\n * @param {string} property\n * @return {string}\n */\nexport function getComputedStyleValue(element, property) {\n  /**\n   * @const {string}\n   */\n  const value = window.getComputedStyle(element).getPropertyValue(property);\n  if (!value) {\n    return '';\n  } else {\n    return value.trim();\n  }\n}\n\n/**\n * return true if `cssText` contains a mixin definition or consumption\n * @param {string} cssText\n * @return {boolean}\n */\nexport function detectMixin(cssText) {\n  const has = MIXIN_MATCH.test(cssText) || VAR_ASSIGN.test(cssText);\n  // reset state of the regexes\n  MIXIN_MATCH.lastIndex = 0;\n  VAR_ASSIGN.lastIndex = 0;\n  return has;\n}\n","/**\n@license\nCopyright (c) 2017 The Polymer Project Authors. All rights reserved.\nThis code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt\nThe complete set of authors may be found at http://polymer.github.io/AUTHORS.txt\nThe complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt\nCode distributed by Google as part of the polymer project is also\nsubject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt\n*/\n/*\n * The apply shim simulates the behavior of `@apply` proposed at\n * https://tabatkins.github.io/specs/css-apply-rule/.\n * The approach is to convert a property like this:\n *\n *    --foo: {color: red; background: blue;}\n *\n * to this:\n *\n *    --foo_-_color: red;\n *    --foo_-_background: blue;\n *\n * Then where `@apply --foo` is used, that is converted to:\n *\n *    color: var(--foo_-_color);\n *    background: var(--foo_-_background);\n *\n * This approach generally works but there are some issues and limitations.\n * Consider, for example, that somewhere *between* where `--foo` is set and used,\n * another element sets it to:\n *\n *    --foo: { border: 2px solid red; }\n *\n * We must now ensure that the color and background from the previous setting\n * do not apply. This is accomplished by changing the property set to this:\n *\n *    --foo_-_border: 2px solid red;\n *    --foo_-_color: initial;\n *    --foo_-_background: initial;\n *\n * This works but introduces one new issue.\n * Consider this setup at the point where the `@apply` is used:\n *\n *    background: orange;\n *    `@apply` --foo;\n *\n * In this case the background will be unset (initial) rather than the desired\n * `orange`. We address this by altering the property set to use a fallback\n * value like this:\n *\n *    color: var(--foo_-_color);\n *    background: var(--foo_-_background, orange);\n *    border: var(--foo_-_border);\n *\n * Note that the default is retained in the property set and the `background` is\n * the desired `orange`. This leads us to a limitation.\n *\n * Limitation 1:\n\n * Only properties in the rule where the `@apply`\n * is used are considered as default values.\n * If another rule matches the element and sets `background` with\n * less specificity than the rule in which `@apply` appears,\n * the `background` will not be set.\n *\n * Limitation 2:\n *\n * When using Polymer's `updateStyles` api, new properties may not be set for\n * `@apply` properties.\n\n*/\n\n'use strict';\n\n// prettier-ignore\nimport {forEachRule, processVariableAndFallback, rulesForStyle, toCssText, gatherStyleText} from './style-util.js';\nimport {MIXIN_MATCH, VAR_ASSIGN} from './common-regex.js';\nimport {detectMixin} from './common-utils.js';\nimport {StyleNode} from './css-parse.js'; // eslint-disable-line @typescript-eslint/no-unused-vars\n\nconst APPLY_NAME_CLEAN = /;\\s*/m;\nconst INITIAL_INHERIT = /^\\s*(initial)|(inherit)\\s*$/;\nconst IMPORTANT = /\\s*!important/;\n\n// separator used between mixin-name and mixin-property-name when producing properties\n// NOTE: plain '-' may cause collisions in user styles\nconst MIXIN_VAR_SEP = '_-_';\n\n/**\n * @typedef {!Object<string, string>}\n */\nlet PropertyEntry; // eslint-disable-line @typescript-eslint/no-unused-vars\n\n/**\n * @typedef {!Object<string, boolean>}\n */\nlet DependantsEntry; // eslint-disable-line @typescript-eslint/no-unused-vars\n\n/** @typedef {{\n *    properties: PropertyEntry,\n *    dependants: DependantsEntry\n * }}\n */\nlet MixinMapEntry; // eslint-disable-line @typescript-eslint/no-unused-vars\n\n// map of mixin to property names\n// --foo: {border: 2px} -> {properties: {(--foo, ['border'])}, dependants: {'element-name': proto}}\nclass MixinMap {\n  constructor() {\n    /** @type {!Object<string, !MixinMapEntry>} */\n    this._map = {};\n  }\n  /**\n   * @param {string} name\n   * @param {!PropertyEntry} props\n   */\n  set(name, props) {\n    name = name.trim();\n    this._map[name] = {\n      properties: props,\n      dependants: {},\n    };\n  }\n  /**\n   * @param {string} name\n   * @return {MixinMapEntry}\n   */\n  get(name) {\n    name = name.trim();\n    return this._map[name] || null;\n  }\n}\n\n/**\n * Callback for when an element is marked invalid\n * @type {?function(string)}\n */\nlet invalidCallback = null;\n\n/** @unrestricted */\nclass ApplyShim {\n  constructor() {\n    /** @type {?string} */\n    this._currentElement = null;\n    /** @type {HTMLMetaElement} */\n    this._measureElement = null;\n    this._map = new MixinMap();\n  }\n  /**\n   * return true if `cssText` contains a mixin definition or consumption\n   * @param {string} cssText\n   * @return {boolean}\n   */\n  detectMixin(cssText) {\n    return detectMixin(cssText);\n  }\n\n  /**\n   * Gather styles into one style for easier processing\n   * @param {!HTMLTemplateElement} template\n   * @return {HTMLStyleElement}\n   */\n  gatherStyles(template) {\n    const styleText = gatherStyleText(template.content);\n    if (styleText) {\n      const style = /** @type {!HTMLStyleElement} */ (document.createElement(\n        'style'\n      ));\n      style.textContent = styleText;\n      template.content.insertBefore(style, template.content.firstChild);\n      return style;\n    }\n    return null;\n  }\n  /**\n   * @param {!HTMLTemplateElement} template\n   * @param {string} elementName\n   * @return {StyleNode}\n   */\n  transformTemplate(template, elementName) {\n    if (template._gatheredStyle === undefined) {\n      template._gatheredStyle = this.gatherStyles(template);\n    }\n    /** @type {HTMLStyleElement} */\n    const style = template._gatheredStyle;\n    return style ? this.transformStyle(style, elementName) : null;\n  }\n  /**\n   * @param {!HTMLStyleElement} style\n   * @param {string} elementName\n   * @return {StyleNode}\n   */\n  transformStyle(style, elementName = '') {\n    let ast = rulesForStyle(style);\n    this.transformRules(ast, elementName);\n    style.textContent = toCssText(ast);\n    return ast;\n  }\n  /**\n   * @param {!HTMLStyleElement} style\n   * @return {StyleNode}\n   */\n  transformCustomStyle(style) {\n    let ast = rulesForStyle(style);\n    forEachRule(ast, (rule) => {\n      if (rule['selector'] === ':root') {\n        rule['selector'] = 'html';\n      }\n      this.transformRule(rule);\n    });\n    style.textContent = toCssText(ast);\n    return ast;\n  }\n  /**\n   * @param {StyleNode} rules\n   * @param {string} elementName\n   */\n  transformRules(rules, elementName) {\n    this._currentElement = elementName;\n    forEachRule(rules, (r) => {\n      this.transformRule(r);\n    });\n    this._currentElement = null;\n  }\n  /**\n   * @param {!StyleNode} rule\n   */\n  transformRule(rule) {\n    rule['cssText'] = this.transformCssText(rule['parsedCssText'], rule);\n    // :root was only used for variable assignment in property shim,\n    // but generates invalid selectors with real properties.\n    // replace with `:host > *`, which serves the same effect\n    if (rule['selector'] === ':root') {\n      rule['selector'] = ':host > *';\n    }\n  }\n  /**\n   * @param {string} cssText\n   * @param {!StyleNode} rule\n   * @return {string}\n   */\n  transformCssText(cssText, rule) {\n    // produce variables\n    cssText = cssText.replace(\n      VAR_ASSIGN,\n      (matchText, propertyName, valueProperty, valueMixin) =>\n        this._produceCssProperties(\n          matchText,\n          propertyName,\n          valueProperty,\n          valueMixin,\n          rule\n        )\n    );\n    // consume mixins\n    return this._consumeCssProperties(cssText, rule);\n  }\n  /**\n   * @param {string} property\n   * @return {string}\n   */\n  _getInitialValueForProperty(property) {\n    if (!this._measureElement) {\n      this._measureElement = /** @type {HTMLMetaElement} */ (document.createElement(\n        'meta'\n      ));\n      this._measureElement.setAttribute('apply-shim-measure', '');\n      this._measureElement.style.all = 'initial';\n      document.head.appendChild(this._measureElement);\n    }\n    return window\n      .getComputedStyle(this._measureElement)\n      .getPropertyValue(property);\n  }\n  /**\n   * Walk over all rules before this rule to find fallbacks for mixins\n   *\n   * @param {!StyleNode} startRule\n   * @return {!Object}\n   */\n  _fallbacksFromPreviousRules(startRule) {\n    // find the \"top\" rule\n    let topRule = startRule;\n    while (topRule['parent']) {\n      topRule = topRule['parent'];\n    }\n    const fallbacks = {};\n    let seenStartRule = false;\n    forEachRule(topRule, (r) => {\n      // stop when we hit the input rule\n      seenStartRule = seenStartRule || r === startRule;\n      if (seenStartRule) {\n        return;\n      }\n      // NOTE: Only matching selectors are \"safe\" for this fallback processing\n      // It would be prohibitive to run `matchesSelector()` on each selector,\n      // so we cheat and only check if the same selector string is used, which\n      // guarantees things like specificity matching\n      if (r['selector'] === startRule['selector']) {\n        Object.assign(fallbacks, this._cssTextToMap(r['parsedCssText']));\n      }\n    });\n    return fallbacks;\n  }\n  /**\n   * replace mixin consumption with variable consumption\n   * @param {string} text\n   * @param {!StyleNode=} rule\n   * @return {string}\n   */\n  _consumeCssProperties(text, rule) {\n    /** @type {Array} */\n    let m = null;\n    // loop over text until all mixins with defintions have been applied\n    while ((m = MIXIN_MATCH.exec(text))) {\n      let matchText = m[0];\n      let mixinName = m[1];\n      let idx = m.index;\n      // collect properties before apply to be \"defaults\" if mixin might override them\n      // match includes a \"prefix\", so find the start and end positions of @apply\n      let applyPos = idx + matchText.indexOf('@apply');\n      let afterApplyPos = idx + matchText.length;\n      // find props defined before this @apply\n      let textBeforeApply = text.slice(0, applyPos);\n      let textAfterApply = text.slice(afterApplyPos);\n      let defaults = rule ? this._fallbacksFromPreviousRules(rule) : {};\n      Object.assign(defaults, this._cssTextToMap(textBeforeApply));\n      let replacement = this._atApplyToCssProperties(mixinName, defaults);\n      // use regex match position to replace mixin, keep linear processing time\n      text = `${textBeforeApply}${replacement}${textAfterApply}`;\n      // move regex search to _after_ replacement\n      MIXIN_MATCH.lastIndex = idx + replacement.length;\n    }\n    return text;\n  }\n  /**\n   * produce variable consumption at the site of mixin consumption\n   * `@apply` --foo; -> for all props (${propname}: var(--foo_-_${propname}, ${fallback[propname]}}))\n   * Example:\n   *  border: var(--foo_-_border); padding: var(--foo_-_padding, 2px)\n   *\n   * @param {string} mixinName\n   * @param {Object} fallbacks\n   * @return {string}\n   */\n  _atApplyToCssProperties(mixinName, fallbacks) {\n    mixinName = mixinName.replace(APPLY_NAME_CLEAN, '');\n    let vars = [];\n    let mixinEntry = this._map.get(mixinName);\n    // if we depend on a mixin before it is created\n    // make a sentinel entry in the map to add this element as a dependency for when it is defined.\n    if (!mixinEntry) {\n      this._map.set(mixinName, {});\n      mixinEntry = this._map.get(mixinName);\n    }\n    if (mixinEntry) {\n      if (this._currentElement) {\n        mixinEntry.dependants[this._currentElement] = true;\n      }\n      let p, parts, f;\n      const properties = mixinEntry.properties;\n      for (p in properties) {\n        f = fallbacks && fallbacks[p];\n        parts = [p, ': var(', mixinName, MIXIN_VAR_SEP, p];\n        if (f) {\n          parts.push(',', f.replace(IMPORTANT, ''));\n        }\n        parts.push(')');\n        if (IMPORTANT.test(properties[p])) {\n          parts.push(' !important');\n        }\n        vars.push(parts.join(''));\n      }\n    }\n    return vars.join('; ');\n  }\n\n  /**\n   * @param {string} property\n   * @param {string} value\n   * @return {string}\n   */\n  _replaceInitialOrInherit(property, value) {\n    let match = INITIAL_INHERIT.exec(value);\n    if (match) {\n      if (match[1]) {\n        // initial\n        // replace `initial` with the concrete initial value for this property\n        value = this._getInitialValueForProperty(property);\n      } else {\n        // inherit\n        // with this purposfully illegal value, the variable will be invalid at\n        // compute time (https://www.w3.org/TR/css-variables/#invalid-at-computed-value-time)\n        // and for inheriting values, will behave similarly\n        // we cannot support the same behavior for non inheriting values like 'border'\n        value = 'apply-shim-inherit';\n      }\n    }\n    return value;\n  }\n\n  /**\n   * \"parse\" a mixin definition into a map of properties and values\n   * cssTextToMap('border: 2px solid black') -> ('border', '2px solid black')\n   * @param {string} text\n   * @param {boolean=} replaceInitialOrInherit\n   * @return {!Object<string, string>}\n   */\n  _cssTextToMap(text, replaceInitialOrInherit = false) {\n    let props = text.split(';');\n    let property, value;\n    let out = {};\n    for (let i = 0, p, sp; i < props.length; i++) {\n      p = props[i];\n      if (p) {\n        sp = p.split(':');\n        // ignore lines that aren't definitions like @media\n        if (sp.length > 1) {\n          property = sp[0].trim();\n          // some properties may have ':' in the value, like data urls\n          value = sp.slice(1).join(':');\n          if (replaceInitialOrInherit) {\n            value = this._replaceInitialOrInherit(property, value);\n          }\n          out[property] = value;\n        }\n      }\n    }\n    return out;\n  }\n\n  /**\n   * @param {MixinMapEntry} mixinEntry\n   */\n  _invalidateMixinEntry(mixinEntry) {\n    if (!invalidCallback) {\n      return;\n    }\n    for (let elementName in mixinEntry.dependants) {\n      if (elementName !== this._currentElement) {\n        invalidCallback(elementName);\n      }\n    }\n  }\n\n  /**\n   * @param {string} matchText\n   * @param {string} propertyName\n   * @param {?string} valueProperty\n   * @param {?string} valueMixin\n   * @param {!StyleNode} rule\n   * @return {string}\n   */\n  _produceCssProperties(\n    matchText,\n    propertyName,\n    valueProperty,\n    valueMixin,\n    rule\n  ) {\n    // handle case where property value is a mixin\n    if (valueProperty) {\n      // form: --mixin2: var(--mixin1), where --mixin1 is in the map\n      processVariableAndFallback(valueProperty, (prefix, value) => {\n        if (value && this._map.get(value)) {\n          valueMixin = `@apply ${value};`;\n        }\n      });\n    }\n    if (!valueMixin) {\n      return matchText;\n    }\n    let mixinAsProperties = this._consumeCssProperties('' + valueMixin, rule);\n    let prefix = matchText.slice(0, matchText.indexOf('--'));\n    // `initial` and `inherit` as properties in a map should be replaced because\n    // these keywords are eagerly evaluated when the mixin becomes CSS Custom Properties,\n    // and would set the variable value, rather than carry the keyword to the `var()` usage.\n    let mixinValues = this._cssTextToMap(mixinAsProperties, true);\n    let combinedProps = mixinValues;\n    let mixinEntry = this._map.get(propertyName);\n    let oldProps = mixinEntry && mixinEntry.properties;\n    if (oldProps) {\n      // NOTE: since we use mixin, the map of properties is updated here\n      // and this is what we want.\n      combinedProps = Object.assign(Object.create(oldProps), mixinValues);\n    } else {\n      this._map.set(propertyName, combinedProps);\n    }\n    let out = [];\n    let p, v;\n    // set variables defined by current mixin\n    let needToInvalidate = false;\n    for (p in combinedProps) {\n      v = mixinValues[p];\n      // if property not defined by current mixin, set initial\n      if (v === undefined) {\n        v = 'initial';\n      }\n      if (oldProps && !(p in oldProps)) {\n        needToInvalidate = true;\n      }\n      out.push(`${propertyName}${MIXIN_VAR_SEP}${p}: ${v}`);\n    }\n    if (needToInvalidate) {\n      this._invalidateMixinEntry(mixinEntry);\n    }\n    if (mixinEntry) {\n      mixinEntry.properties = combinedProps;\n    }\n    // because the mixinMap is global, the mixin might conflict with\n    // a different scope's simple variable definition:\n    // Example:\n    // some style somewhere:\n    // --mixin1:{ ... }\n    // --mixin2: var(--mixin1);\n    // some other element:\n    // --mixin1: 10px solid red;\n    // --foo: var(--mixin1);\n    // In this case, we leave the original variable definition in place.\n    if (valueProperty) {\n      prefix = `${matchText};${prefix}`;\n    }\n    return `${prefix}${out.join('; ')};`;\n  }\n}\n\n/* exports */\n/* eslint-disable no-self-assign */\nApplyShim.prototype['detectMixin'] = ApplyShim.prototype.detectMixin;\nApplyShim.prototype['transformStyle'] = ApplyShim.prototype.transformStyle;\nApplyShim.prototype['transformCustomStyle'] =\n  ApplyShim.prototype.transformCustomStyle;\nApplyShim.prototype['transformRules'] = ApplyShim.prototype.transformRules;\nApplyShim.prototype['transformRule'] = ApplyShim.prototype.transformRule;\nApplyShim.prototype['transformTemplate'] =\n  ApplyShim.prototype.transformTemplate;\nApplyShim.prototype['_separator'] = MIXIN_VAR_SEP;\n/* eslint-enable no-self-assign */\nObject.defineProperty(ApplyShim.prototype, 'invalidCallback', {\n  /** @return {?function(string)} */\n  get() {\n    return invalidCallback;\n  },\n  /** @param {?function(string)} cb */\n  set(cb) {\n    invalidCallback = cb;\n  },\n});\n\nexport default ApplyShim;\n","/**\n@license\nCopyright (c) 2017 The Polymer Project Authors. All rights reserved.\nThis code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt\nThe complete set of authors may be found at http://polymer.github.io/AUTHORS.txt\nThe complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt\nCode distributed by Google as part of the polymer project is also\nsubject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt\n*/\n\n'use strict';\n\n/**\n * @const {!Object<string, !HTMLTemplateElement>}\n */\nconst templateMap = {};\nexport default templateMap;\n","/**\n@license\nCopyright (c) 2017 The Polymer Project Authors. All rights reserved.\nThis code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt\nThe complete set of authors may be found at http://polymer.github.io/AUTHORS.txt\nThe complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt\nCode distributed by Google as part of the polymer project is also\nsubject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt\n*/\n\n'use strict';\nimport templateMap from './template-map.js';\nimport {StyleNode} from './css-parse.js'; // eslint-disable-line @typescript-eslint/no-unused-vars\n\n/*\n * Utilities for handling invalidating apply-shim mixins for a given template.\n *\n * The invalidation strategy involves keeping track of the \"current\" version of a template's mixins, and updating that count when a mixin is invalidated.\n * The template\n */\n\n/** @const {string} */\nconst CURRENT_VERSION = '_applyShimCurrentVersion';\n\n/** @const {string} */\nconst NEXT_VERSION = '_applyShimNextVersion';\n\n/** @const {string} */\nconst VALIDATING_VERSION = '_applyShimValidatingVersion';\n\n/**\n * @const {Promise<void>}\n */\nconst promise = Promise.resolve();\n\n/**\n * @param {string} elementName\n */\nexport function invalidate(elementName) {\n  let template = templateMap[elementName];\n  if (template) {\n    invalidateTemplate(template);\n  }\n}\n\n/**\n * This function can be called multiple times to mark a template invalid\n * and signal that the style inside must be regenerated.\n *\n * Use `startValidatingTemplate` to begin an asynchronous validation cycle.\n * During that cycle, call `templateIsValidating` to see if the template must\n * be revalidated\n * @param {HTMLTemplateElement} template\n */\nexport function invalidateTemplate(template) {\n  // default the current version to 0\n  template[CURRENT_VERSION] = template[CURRENT_VERSION] || 0;\n  // ensure the \"validating for\" flag exists\n  template[VALIDATING_VERSION] = template[VALIDATING_VERSION] || 0;\n  // increment the next version\n  template[NEXT_VERSION] = (template[NEXT_VERSION] || 0) + 1;\n}\n\n/**\n * @param {string} elementName\n * @return {boolean}\n */\nexport function isValid(elementName) {\n  let template = templateMap[elementName];\n  if (template) {\n    return templateIsValid(template);\n  }\n  return true;\n}\n\n/**\n * @param {HTMLTemplateElement} template\n * @return {boolean}\n */\nexport function templateIsValid(template) {\n  return template[CURRENT_VERSION] === template[NEXT_VERSION];\n}\n\n/**\n * @param {string} elementName\n * @return {boolean}\n */\nexport function isValidating(elementName) {\n  let template = templateMap[elementName];\n  if (template) {\n    return templateIsValidating(template);\n  }\n  return false;\n}\n\n/**\n * Returns true if the template is currently invalid and `startValidating` has been called since the last invalidation.\n * If false, the template must be validated.\n * @param {HTMLTemplateElement} template\n * @return {boolean}\n */\nexport function templateIsValidating(template) {\n  return (\n    !templateIsValid(template) &&\n    template[VALIDATING_VERSION] === template[NEXT_VERSION]\n  );\n}\n\n/**\n * the template is marked as `validating` for one microtask so that all instances\n * found in the tree crawl of `applyStyle` will update themselves,\n * but the template will only be updated once.\n * @param {string} elementName\n */\nexport function startValidating(elementName) {\n  let template = templateMap[elementName];\n  startValidatingTemplate(template);\n}\n\n/**\n * Begin an asynchronous invalidation cycle.\n * This should be called after every validation of a template\n *\n * After one microtask, the template will be marked as valid until the next call to `invalidateTemplate`\n * @param {HTMLTemplateElement} template\n */\nexport function startValidatingTemplate(template) {\n  // remember that the current \"next version\" is the reason for this validation cycle\n  template[VALIDATING_VERSION] = template[NEXT_VERSION];\n  // however, there only needs to be one async task to clear the counters\n  if (!template._validating) {\n    template._validating = true;\n    promise.then(function () {\n      // sync the current version to let future invalidations cause a refresh cycle\n      template[CURRENT_VERSION] = template[NEXT_VERSION];\n      template._validating = false;\n    });\n  }\n}\n\n/**\n * @return {boolean}\n */\nexport function elementsAreInvalid() {\n  for (let elementName in templateMap) {\n    let template = templateMap[elementName];\n    if (!templateIsValid(template)) {\n      return true;\n    }\n  }\n  return false;\n}\n","/**\n@license\nCopyright (c) 2017 The Polymer Project Authors. All rights reserved.\nThis code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt\nThe complete set of authors may be found at http://polymer.github.io/AUTHORS.txt\nThe complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt\nCode distributed by Google as part of the polymer project is also\nsubject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt\n*/\n\n'use strict';\n\n/** @type {Promise<void>} */\nlet readyPromise = null;\n\n/** @type {?function(?function())} */\nlet whenReady =\n  (window['HTMLImports'] && window['HTMLImports']['whenReady']) || null;\n\n/** @type {function()} */\nlet resolveFn;\n\n/**\n * @param {?function()} callback\n */\nexport default function documentWait(callback) {\n  requestAnimationFrame(function () {\n    if (whenReady) {\n      whenReady(callback);\n    } else {\n      if (!readyPromise) {\n        readyPromise = new Promise((resolve) => {\n          resolveFn = resolve;\n        });\n        if (document.readyState === 'complete') {\n          resolveFn();\n        } else {\n          document.addEventListener('readystatechange', () => {\n            if (document.readyState === 'complete') {\n              resolveFn();\n            }\n          });\n        }\n      }\n      readyPromise.then(function () {\n        callback && callback();\n      });\n    }\n  });\n}\n","/**\n@license\nCopyright (c) 2017 The Polymer Project Authors. All rights reserved.\nThis code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt\nThe complete set of authors may be found at http://polymer.github.io/AUTHORS.txt\nThe complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt\nCode distributed by Google as part of the polymer project is also\nsubject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt\n*/\n\n'use strict';\n\nimport documentWait from './document-wait.js';\n\n/**\n * @typedef {HTMLStyleElement | {getStyle: function():HTMLStyleElement}}\n */\nexport let CustomStyleProvider;\n\nconst SEEN_MARKER = '__seenByShadyCSS';\nconst CACHED_STYLE = '__shadyCSSCachedStyle';\n\n/** @type {?function(!HTMLStyleElement)} */\nlet transformFn = null;\n\n/** @type {?function()} */\nlet validateFn = null;\n\n/**\nThis interface is provided to add document-level <style> elements to ShadyCSS for processing.\nThese styles must be processed by ShadyCSS to simulate ShadowRoot upper-bound encapsulation from outside styles\nIn addition, these styles may also need to be processed for @apply rules and CSS Custom Properties\n\nTo add document-level styles to ShadyCSS, one can call `ShadyCSS.addDocumentStyle(styleElement)` or `ShadyCSS.addDocumentStyle({getStyle: () => styleElement})`\n\nIn addition, if the process used to discover document-level styles can be synchronously flushed, one should set `ShadyCSS.documentStyleFlush`.\nThis function will be called when calculating styles.\n\nAn example usage of the document-level styling api can be found in `examples/document-style-lib.js`\n\n@unrestricted\n*/\nexport default class CustomStyleInterface {\n  constructor() {\n    /** @type {!Array<!CustomStyleProvider>} */\n    this['customStyles'] = [];\n    this['enqueued'] = false;\n    // NOTE(dfreedm): use quotes here to prevent closure inlining to `function(){}`;\n    documentWait(() => {\n      if (window['ShadyCSS']['flushCustomStyles']) {\n        window['ShadyCSS']['flushCustomStyles']();\n      }\n    });\n  }\n  /**\n   * Queue a validation for new custom styles to batch style recalculations\n   */\n  enqueueDocumentValidation() {\n    if (this['enqueued'] || !validateFn) {\n      return;\n    }\n    this['enqueued'] = true;\n    documentWait(validateFn);\n  }\n  /**\n   * @param {!HTMLStyleElement} style\n   */\n  addCustomStyle(style) {\n    if (!style[SEEN_MARKER]) {\n      style[SEEN_MARKER] = true;\n      this['customStyles'].push(style);\n      this.enqueueDocumentValidation();\n    }\n  }\n  /**\n   * @param {!CustomStyleProvider} customStyle\n   * @return {HTMLStyleElement}\n   */\n  getStyleForCustomStyle(customStyle) {\n    if (customStyle[CACHED_STYLE]) {\n      return customStyle[CACHED_STYLE];\n    }\n    let style;\n    if (customStyle['getStyle']) {\n      style = customStyle['getStyle']();\n    } else {\n      style = customStyle;\n    }\n    return style;\n  }\n  /**\n   * @return {!Array<!CustomStyleProvider>}\n   */\n  processStyles() {\n    const cs = this['customStyles'];\n    for (let i = 0; i < cs.length; i++) {\n      const customStyle = cs[i];\n      if (customStyle[CACHED_STYLE]) {\n        continue;\n      }\n      const style = this.getStyleForCustomStyle(customStyle);\n      if (style) {\n        // HTMLImports polyfill may have cloned the style into the main document,\n        // which is referenced with __appliedElement.\n        const styleToTransform = /** @type {!HTMLStyleElement} */ (style[\n          '__appliedElement'\n        ] || style);\n        if (transformFn) {\n          transformFn(styleToTransform);\n        }\n        customStyle[CACHED_STYLE] = styleToTransform;\n      }\n    }\n    return cs;\n  }\n}\n\n/* eslint-disable no-self-assign */\nCustomStyleInterface.prototype['addCustomStyle'] =\n  CustomStyleInterface.prototype.addCustomStyle;\nCustomStyleInterface.prototype['getStyleForCustomStyle'] =\n  CustomStyleInterface.prototype.getStyleForCustomStyle;\nCustomStyleInterface.prototype['processStyles'] =\n  CustomStyleInterface.prototype.processStyles;\n/* eslint-enable no-self-assign */\n\nObject.defineProperties(CustomStyleInterface.prototype, {\n  'transformCallback': {\n    /** @return {?function(!HTMLStyleElement)} */\n    get() {\n      return transformFn;\n    },\n    /** @param {?function(!HTMLStyleElement)} fn */\n    set(fn) {\n      transformFn = fn;\n    },\n  },\n  'validateCallback': {\n    /** @return {?function()} */\n    get() {\n      return validateFn;\n    },\n    /**\n     * @param {?function()} fn\n     * @this {CustomStyleInterface}\n     */\n    set(fn) {\n      let needsEnqueue = false;\n      if (!validateFn) {\n        needsEnqueue = true;\n      }\n      validateFn = fn;\n      if (needsEnqueue) {\n        this.enqueueDocumentValidation();\n      }\n    },\n  },\n});\n\n/** @typedef {{\n * customStyles: !Array<!CustomStyleProvider>,\n * addCustomStyle: function(!CustomStyleProvider),\n * getStyleForCustomStyle: function(!CustomStyleProvider): HTMLStyleElement,\n * findStyles: function(),\n * transformCallback: ?function(!HTMLStyleElement),\n * validateCallback: ?function()\n * }}\n */\nexport const CustomStyleInterfaceInterface = {};\n","/**\n@license\nCopyright (c) 2017 The Polymer Project Authors. All rights reserved.\nThis code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt\nThe complete set of authors may be found at http://polymer.github.io/AUTHORS.txt\nThe complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt\nCode distributed by Google as part of the polymer project is also\nsubject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt\n*/\n\n'use strict';\n\nimport ApplyShim from '../src/apply-shim.js';\nimport templateMap from '../src/template-map.js';\n// prettier-ignore\nimport {getIsExtends, toCssText, elementHasBuiltCss} from '../src/style-util.js';\nimport * as ApplyShimUtils from '../src/apply-shim-utils.js';\n// prettier-ignore\nimport {getComputedStyleValue, updateNativeProperties} from '../src/common-utils.js';\nimport {CustomStyleInterfaceInterface} from '../src/custom-style-interface.js'; // eslint-disable-line @typescript-eslint/no-unused-vars\n// prettier-ignore\nimport {nativeCssVariables, nativeShadow, cssBuild, disableRuntime} from '../src/style-settings.js';\n\n/** @const {ApplyShim} */\nconst applyShim = new ApplyShim();\n\nclass ApplyShimInterface {\n  constructor() {\n    /** @type {?CustomStyleInterfaceInterface} */\n    this.customStyleInterface = null;\n    applyShim['invalidCallback'] = ApplyShimUtils.invalidate;\n  }\n  ensure() {\n    if (this.customStyleInterface) {\n      return;\n    }\n    if (window.ShadyCSS.CustomStyleInterface) {\n      this.customStyleInterface = /** @type {!CustomStyleInterfaceInterface} */ (window\n        .ShadyCSS.CustomStyleInterface);\n      this.customStyleInterface['transformCallback'] = (style) => {\n        applyShim.transformCustomStyle(style);\n      };\n      this.customStyleInterface['validateCallback'] = () => {\n        requestAnimationFrame(() => {\n          if (this.customStyleInterface['enqueued']) {\n            this.flushCustomStyles();\n          }\n        });\n      };\n    }\n  }\n  /**\n   * @param {!HTMLTemplateElement} template\n   * @param {string} elementName\n   */\n  prepareTemplate(template, elementName) {\n    this.ensure();\n    if (elementHasBuiltCss(template)) {\n      return;\n    }\n    templateMap[elementName] = template;\n    let ast = applyShim.transformTemplate(template, elementName);\n    // save original style ast to use for revalidating instances\n    template['_styleAst'] = ast;\n  }\n  flushCustomStyles() {\n    this.ensure();\n    if (!this.customStyleInterface) {\n      return;\n    }\n    let styles = this.customStyleInterface['processStyles']();\n    if (!this.customStyleInterface['enqueued']) {\n      return;\n    }\n    for (let i = 0; i < styles.length; i++) {\n      let cs = styles[i];\n      let style = this.customStyleInterface['getStyleForCustomStyle'](cs);\n      if (style) {\n        applyShim.transformCustomStyle(style);\n      }\n    }\n    this.customStyleInterface['enqueued'] = false;\n  }\n  /**\n   * @param {HTMLElement} element\n   * @param {Object=} properties\n   */\n  styleSubtree(element, properties) {\n    this.ensure();\n    if (properties) {\n      updateNativeProperties(element, properties);\n    }\n    if (element.shadowRoot) {\n      this.styleElement(element);\n      let shadowChildren =\n        /** @type {!ParentNode} */ (element.shadowRoot).children ||\n        element.shadowRoot.childNodes;\n      for (let i = 0; i < shadowChildren.length; i++) {\n        this.styleSubtree(/** @type {HTMLElement} */ (shadowChildren[i]));\n      }\n    } else {\n      let children = element.children || element.childNodes;\n      for (let i = 0; i < children.length; i++) {\n        this.styleSubtree(/** @type {HTMLElement} */ (children[i]));\n      }\n    }\n  }\n  /**\n   * @param {HTMLElement} element\n   */\n  styleElement(element) {\n    this.ensure();\n    let {is} = getIsExtends(element);\n    let template = templateMap[is];\n    if (template && elementHasBuiltCss(template)) {\n      return;\n    }\n    if (template && !ApplyShimUtils.templateIsValid(template)) {\n      // only revalidate template once\n      if (!ApplyShimUtils.templateIsValidating(template)) {\n        this.prepareTemplate(template, is);\n        ApplyShimUtils.startValidatingTemplate(template);\n      }\n      // update this element instance\n      let root = element.shadowRoot;\n      if (root) {\n        let style = /** @type {HTMLStyleElement} */ (root.querySelector(\n          'style'\n        ));\n        if (style) {\n          // reuse the template's style ast, it has all the original css text\n          style['__cssRules'] = template['_styleAst'];\n          style.textContent = toCssText(template['_styleAst']);\n        }\n      }\n    }\n  }\n  /**\n   * @param {Object=} properties\n   */\n  styleDocument(properties) {\n    this.ensure();\n    this.styleSubtree(document.body, properties);\n  }\n}\n\nif (!window.ShadyCSS || !window.ShadyCSS.ScopingShim) {\n  const applyShimInterface = new ApplyShimInterface();\n  let CustomStyleInterface =\n    window.ShadyCSS && window.ShadyCSS.CustomStyleInterface;\n\n  /** @suppress {duplicate} */\n  window.ShadyCSS = {\n    /**\n     * @param {!HTMLTemplateElement} template\n     * @param {string} elementName\n     * @param {string=} elementExtends\n     */\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    prepareTemplate(template, elementName, elementExtends) {\n      applyShimInterface.flushCustomStyles();\n      applyShimInterface.prepareTemplate(template, elementName);\n    },\n\n    /**\n     * @param {!HTMLTemplateElement} template\n     * @param {string} elementName\n     * @param {string=} elementExtends\n     */\n    prepareTemplateStyles(template, elementName, elementExtends) {\n      window.ShadyCSS.prepareTemplate(template, elementName, elementExtends);\n    },\n\n    /**\n     * @param {!HTMLTemplateElement} template\n     * @param {string} elementName\n     */\n    prepareTemplateDom(template, elementName) {}, // eslint-disable-line @typescript-eslint/no-unused-vars\n\n    /**\n     * @param {!HTMLElement} element\n     * @param {Object=} properties\n     */\n    styleSubtree(element, properties) {\n      applyShimInterface.flushCustomStyles();\n      applyShimInterface.styleSubtree(element, properties);\n    },\n\n    /**\n     * @param {!HTMLElement} element\n     */\n    styleElement(element) {\n      applyShimInterface.flushCustomStyles();\n      applyShimInterface.styleElement(element);\n    },\n\n    /**\n     * @param {Object=} properties\n     */\n    styleDocument(properties) {\n      applyShimInterface.flushCustomStyles();\n      applyShimInterface.styleDocument(properties);\n    },\n\n    /**\n     * @param {Element} element\n     * @param {string} property\n     * @return {string}\n     */\n    getComputedStyleValue(element, property) {\n      return getComputedStyleValue(element, property);\n    },\n\n    flushCustomStyles() {\n      applyShimInterface.flushCustomStyles();\n    },\n\n    nativeCss: nativeCssVariables,\n    nativeShadow: nativeShadow,\n    cssBuild: cssBuild,\n    disableRuntime: disableRuntime,\n  };\n\n  if (CustomStyleInterface) {\n    window.ShadyCSS.CustomStyleInterface = CustomStyleInterface;\n  }\n}\n\nwindow.ShadyCSS.ApplyShim = applyShim;\n","/**\n@license\nCopyright (c) 2017 The Polymer Project Authors. All rights reserved.\nThis code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt\nThe complete set of authors may be found at http://polymer.github.io/AUTHORS.txt\nThe complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt\nCode distributed by Google as part of the polymer project is also\nsubject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt\n*/\n\n/* eslint-disable no-unused-vars */\n/**\n * When using Closure Compiler, JSCompiler_renameProperty(property, object) is replaced by the munged name for object[property]\n * We cannot alias this function, so we have to use a small shim that has the same behavior when not compiling.\n *\n * @param {?} prop Property name\n * @param {*} obj Reference object\n * @return {string} Potentially renamed property name\n */\nwindow.JSCompiler_renameProperty = function(prop, obj) {\n  return prop;\n};\n/* eslint-enable */\n\nexport {};\n","/**\n@license\nCopyright (c) 2017 The Polymer Project Authors. All rights reserved.\nThis code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt\nThe complete set of authors may be found at http://polymer.github.io/AUTHORS.txt\nThe complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt\nCode distributed by Google as part of the polymer project is also\nsubject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt\n*/\nimport './boot.js';\n\nlet CSS_URL_RX = /(url\\()([^)]*)(\\))/g;\nlet ABS_URL = /(^\\/[^\\/])|(^#)|(^[\\w-\\d]*:)/;\nlet workingURL;\nlet resolveDoc;\n/**\n * Resolves the given URL against the provided `baseUri'.\n *\n * Note that this function performs no resolution for URLs that start\n * with `/` (absolute URLs) or `#` (hash identifiers).  For general purpose\n * URL resolution, use `window.URL`.\n *\n * @param {string} url Input URL to resolve\n * @param {?string=} baseURI Base URI to resolve the URL against\n * @return {string} resolved URL\n */\nexport function resolveUrl(url, baseURI) {\n  if (url && ABS_URL.test(url)) {\n    return url;\n  }\n  if (url === '//') {\n    return url;\n  }\n  // Lazy feature detection.\n  if (workingURL === undefined) {\n    workingURL = false;\n    try {\n      const u = new URL('b', 'http://a');\n      u.pathname = 'c%20d';\n      workingURL = (u.href === 'http://a/c%20d');\n    } catch (e) {\n      // silently fail\n    }\n  }\n  if (!baseURI) {\n    baseURI = document.baseURI || window.location.href;\n  }\n  if (workingURL) {\n    try {\n      return (new URL(url, baseURI)).href;\n    } catch (e) {\n      // Bad url or baseURI structure. Do not attempt to resolve.\n      return url;\n    }\n  }\n  // Fallback to creating an anchor into a disconnected document.\n  if (!resolveDoc) {\n    resolveDoc = document.implementation.createHTMLDocument('temp');\n    resolveDoc.base = resolveDoc.createElement('base');\n    resolveDoc.head.appendChild(resolveDoc.base);\n    resolveDoc.anchor = resolveDoc.createElement('a');\n    resolveDoc.body.appendChild(resolveDoc.anchor);\n  }\n  resolveDoc.base.href = baseURI;\n  resolveDoc.anchor.href = url;\n  return resolveDoc.anchor.href || url;\n\n}\n\n/**\n * Resolves any relative URL's in the given CSS text against the provided\n * `ownerDocument`'s `baseURI`.\n *\n * @param {string} cssText CSS text to process\n * @param {string} baseURI Base URI to resolve the URL against\n * @return {string} Processed CSS text with resolved URL's\n */\nexport function resolveCss(cssText, baseURI) {\n  return cssText.replace(CSS_URL_RX, function(m, pre, url, post) {\n    return pre + '\\'' +\n      resolveUrl(url.replace(/[\"']/g, ''), baseURI) +\n      '\\'' + post;\n  });\n}\n\n/**\n * Returns a path from a given `url`. The path includes the trailing\n * `/` from the url.\n *\n * @param {string} url Input URL to transform\n * @return {string} resolved path\n */\nexport function pathFromUrl(url) {\n  return url.substring(0, url.lastIndexOf('/') + 1);\n}\n","/**\n@license\nCopyright (c) 2017 The Polymer Project Authors. All rights reserved.\nThis code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt\nThe complete set of authors may be found at http://polymer.github.io/AUTHORS.txt\nThe complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt\nCode distributed by Google as part of the polymer project is also\nsubject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt\n*/\nimport './boot.js';\nimport { pathFromUrl } from './resolve-url.js';\nexport const useShadow = !(window.ShadyDOM) || !(window.ShadyDOM.inUse);\nexport const useNativeCSSProperties = Boolean(!window.ShadyCSS || window.ShadyCSS.nativeCss);\nexport const useNativeCustomElements = !(window.customElements.polyfillWrapFlushCallback);\nexport const supportsAdoptingStyleSheets = useShadow &&\n    ('adoptedStyleSheets' in Document.prototype) &&\n    ('replaceSync' in CSSStyleSheet.prototype) &&\n    // Since spec may change, feature detect exact API we need\n    (() => {\n      try {\n        const sheet = new CSSStyleSheet();\n        sheet.replaceSync('');\n        const host = document.createElement('div');\n        host.attachShadow({mode: 'open'});\n        host.shadowRoot.adoptedStyleSheets = [sheet];\n        return (host.shadowRoot.adoptedStyleSheets[0] === sheet);\n      } catch(e) {\n        return false;\n      }\n    })();\n\n/**\n * Globally settable property that is automatically assigned to\n * `ElementMixin` instances, useful for binding in templates to\n * make URL's relative to an application's root.  Defaults to the main\n * document URL, but can be overridden by users.  It may be useful to set\n * `rootPath` to provide a stable application mount path when\n * using client side routing.\n */\nexport let rootPath = window.Polymer && window.Polymer.rootPath ||\n  pathFromUrl(document.baseURI || window.location.href);\n\n/**\n * Sets the global rootPath property used by `ElementMixin` and\n * available via `rootPath`.\n *\n * @param {string} path The new root path\n * @return {void}\n */\nexport const setRootPath = function(path) {\n  rootPath = path;\n};\n\n/**\n * A global callback used to sanitize any value before inserting it into the DOM.\n * The callback signature is:\n *\n *  function sanitizeDOMValue(value, name, type, node) { ... }\n *\n * Where:\n *\n * `value` is the value to sanitize.\n * `name` is the name of an attribute or property (for example, href).\n * `type` indicates where the value is being inserted: one of property, attribute, or text.\n * `node` is the node where the value is being inserted.\n *\n * @type {(function(*,string,string,?Node):*)|undefined}\n */\nexport let sanitizeDOMValue =\n  window.Polymer && window.Polymer.sanitizeDOMValue || undefined;\n\n/**\n * Sets the global sanitizeDOMValue available via this module's exported\n * `sanitizeDOMValue` variable.\n *\n * @param {(function(*,string,string,?Node):*)|undefined} newSanitizeDOMValue the global sanitizeDOMValue callback\n * @return {void}\n */\nexport const setSanitizeDOMValue = function(newSanitizeDOMValue) {\n  sanitizeDOMValue = newSanitizeDOMValue;\n};\n\n/**\n * Gets sanitizeDOMValue, for environments that don't well support `export let`.\n *\n * @return {(function(*,string,string,?Node):*)|undefined} sanitizeDOMValue\n */\nexport const getSanitizeDOMValue = function() {\n  return sanitizeDOMValue;\n};\n\n/**\n * Globally settable property to make Polymer Gestures use passive TouchEvent listeners when recognizing gestures.\n * When set to `true`, gestures made from touch will not be able to prevent scrolling, allowing for smoother\n * scrolling performance.\n * Defaults to `false` for backwards compatibility.\n */\nexport let passiveTouchGestures =\n  window.Polymer && window.Polymer.setPassiveTouchGestures || false;\n\n/**\n * Sets `passiveTouchGestures` globally for all elements using Polymer Gestures.\n *\n * @param {boolean} usePassive enable or disable passive touch gestures globally\n * @return {void}\n */\nexport const setPassiveTouchGestures = function(usePassive) {\n  passiveTouchGestures = usePassive;\n};\n\n/**\n * Setting to ensure Polymer template evaluation only occurs based on tempates\n * defined in trusted script.  When true, `<dom-module>` re-registration is\n * disallowed, `<dom-bind>` is disabled, and `<dom-if>`/`<dom-repeat>`\n * templates will only evaluate in the context of a trusted element template.\n */\nexport let strictTemplatePolicy =\n  window.Polymer && window.Polymer.strictTemplatePolicy || false;\n\n/**\n * Sets `strictTemplatePolicy` globally for all elements\n *\n * @param {boolean} useStrictPolicy enable or disable strict template policy\n *   globally\n * @return {void}\n */\nexport const setStrictTemplatePolicy = function(useStrictPolicy) {\n  strictTemplatePolicy = useStrictPolicy;\n};\n\n/**\n * Setting to enable dom-module lookup from Polymer.Element.  By default,\n * templates must be defined in script using the `static get template()`\n * getter and the `html` tag function.  To enable legacy loading of templates\n * via dom-module, set this flag to true.\n */\nexport let allowTemplateFromDomModule =\n  window.Polymer && window.Polymer.allowTemplateFromDomModule || false;\n\n/**\n * Sets `lookupTemplateFromDomModule` globally for all elements\n *\n * @param {boolean} allowDomModule enable or disable template lookup\n *   globally\n * @return {void}\n */\nexport const setAllowTemplateFromDomModule = function(allowDomModule) {\n  allowTemplateFromDomModule = allowDomModule;\n};\n\n/**\n * Setting to skip processing style includes and re-writing urls in css styles.\n * Normally \"included\" styles are pulled into the element and all urls in styles\n * are re-written to be relative to the containing script url.\n * If no includes or relative urls are used in styles, these steps can be\n * skipped as an optimization.\n */\nexport let legacyOptimizations =\n  window.Polymer && window.Polymer.legacyOptimizations || false;\n\n/**\n * Sets `legacyOptimizations` globally for all elements to enable optimizations\n * when only legacy based elements are used.\n *\n * @param {boolean} useLegacyOptimizations enable or disable legacy optimizations\n * includes and url rewriting\n * @return {void}\n */\nexport const setLegacyOptimizations = function(useLegacyOptimizations) {\n  legacyOptimizations = useLegacyOptimizations;\n};\n\n/**\n * Setting to add warnings useful when migrating from Polymer 1.x to 2.x.\n */\nexport let legacyWarnings =\n  window.Polymer && window.Polymer.legacyWarnings || false;\n\n/**\n * Sets `legacyWarnings` globally for all elements to migration warnings.\n *\n * @param {boolean} useLegacyWarnings enable or disable warnings\n * @return {void}\n */\nexport const setLegacyWarnings = function(useLegacyWarnings) {\n  legacyWarnings = useLegacyWarnings;\n};\n\n/**\n * Setting to perform initial rendering synchronously when running under ShadyDOM.\n * This matches the behavior of Polymer 1.\n */\nexport let syncInitialRender =\n  window.Polymer && window.Polymer.syncInitialRender || false;\n\n/**\n * Sets `syncInitialRender` globally for all elements to enable synchronous\n * initial rendering.\n *\n * @param {boolean} useSyncInitialRender enable or disable synchronous initial\n * rendering globally.\n * @return {void}\n */\nexport const setSyncInitialRender = function(useSyncInitialRender) {\n  syncInitialRender = useSyncInitialRender;\n};\n\n/**\n * Setting to retain the legacy Polymer 1 behavior for multi-property\n * observers around undefined values. Observers and computed property methods\n * are not called until no argument is undefined.\n */\nexport let legacyUndefined =\n  window.Polymer && window.Polymer.legacyUndefined || false;\n\n/**\n * Sets `legacyUndefined` globally for all elements to enable legacy\n * multi-property behavior for undefined values.\n *\n * @param {boolean} useLegacyUndefined enable or disable legacy\n * multi-property behavior for undefined.\n * @return {void}\n */\nexport const setLegacyUndefined = function(useLegacyUndefined) {\n  legacyUndefined = useLegacyUndefined;\n};\n\n/**\n * Setting to ensure computed properties are computed in order to ensure\n * re-computation never occurs in a given turn.\n */\nexport let orderedComputed =\n  window.Polymer && window.Polymer.orderedComputed || false;\n\n/**\n * Sets `orderedComputed` globally for all elements to enable ordered computed\n * property computation.\n *\n * @param {boolean} useOrderedComputed enable or disable ordered computed effects\n * @return {void}\n */\nexport const setOrderedComputed = function(useOrderedComputed) {\n  orderedComputed = useOrderedComputed;\n};\n\n/**\n * Setting to cancel synthetic click events fired by older mobile browsers. Modern browsers\n * no longer fire synthetic click events, and the cancellation behavior can interfere\n * when programmatically clicking on elements.\n */\nexport let cancelSyntheticClickEvents = true;\n\n/**\n * Sets `setCancelSyntheticEvents` globally for all elements to cancel synthetic click events.\n *\n * @param {boolean} useCancelSyntheticClickEvents enable or disable cancelling synthetic\n * events\n * @return {void}\n */\nexport const setCancelSyntheticClickEvents = function(useCancelSyntheticClickEvents) {\n  cancelSyntheticClickEvents = useCancelSyntheticClickEvents;\n};\n\n/**\n * Setting to remove nested templates inside `dom-if` and `dom-repeat` as\n * part of element template parsing.  This is a performance optimization that\n * eliminates most of the tax of needing two elements due to the loss of\n * type-extended templates as a result of the V1 specification changes.\n */\nexport let removeNestedTemplates =\n  window.Polymer && window.Polymer.removeNestedTemplates || false;\n\n/**\n * Sets `removeNestedTemplates` globally, to eliminate nested templates\n * inside `dom-if` and `dom-repeat` as part of template parsing.\n *\n * @param {boolean} useRemoveNestedTemplates enable or disable removing nested\n *   templates during parsing\n * @return {void}\n */\nexport const setRemoveNestedTemplates = function(useRemoveNestedTemplates) {\n  removeNestedTemplates = useRemoveNestedTemplates;\n};\n\n/**\n * Setting to place `dom-if` elements in a performance-optimized mode that takes\n * advantage of lighter-weight host runtime template stamping to eliminate the\n * need for an intermediate Templatizer `TemplateInstance` to mange the nodes\n * stamped by `dom-if`.  Under this setting, any Templatizer-provided API's\n * such as `modelForElement` will not be available for nodes stamped by\n * `dom-if`.\n */\nexport let fastDomIf = window.Polymer && window.Polymer.fastDomIf || false;\n\n/**\n * Sets `fastDomIf` globally, to put `dom-if` in a performance-optimized mode.\n *\n * @param {boolean} useFastDomIf enable or disable `dom-if` fast-mode\n * @return {void}\n */\nexport const setFastDomIf = function(useFastDomIf) {\n  fastDomIf = useFastDomIf;\n};\n\n/**\n * Setting to disable `dom-change` and `rendered-item-count` events from\n * `dom-if` and `dom-repeat`. Users can opt back into `dom-change` events by\n * setting the `notify-dom-change` attribute (`notifyDomChange: true` property)\n * to `dom-if`/`don-repeat` instances.\n */\nexport let suppressTemplateNotifications =\n  window.Polymer && window.Polymer.suppressTemplateNotifications || false;\n\n/**\n * Sets `suppressTemplateNotifications` globally, to disable `dom-change` and\n * `rendered-item-count` events from `dom-if` and `dom-repeat`.\n *\n * @param {boolean} suppress enable or disable `suppressTemplateNotifications`\n * @return {void}\n */\nexport const setSuppressTemplateNotifications = function(suppress) {\n  suppressTemplateNotifications = suppress;\n};\n\n/**\n * Setting to disable use of dynamic attributes. This is an optimization\n * to avoid setting `observedAttributes`. Instead attributes are read\n * once at create time and set/removeAttribute are patched.\n */\nexport let legacyNoObservedAttributes =\n  window.Polymer && window.Polymer.legacyNoObservedAttributes || false;\n\n/**\n * Sets `legacyNoObservedAttributes` globally, to disable `observedAttributes`.\n *\n * @param {boolean} noObservedAttributes enable or disable `legacyNoObservedAttributes`\n * @return {void}\n */\nexport const setLegacyNoObservedAttributes = function(noObservedAttributes) {\n  legacyNoObservedAttributes = noObservedAttributes;\n};\n\n/**\n * Setting to enable use of `adoptedStyleSheets` for sharing style sheets\n * between component instances' shadow roots, if the app uses built Shady CSS\n * styles.\n */\nexport let useAdoptedStyleSheetsWithBuiltCSS =\n  window.Polymer && window.Polymer.useAdoptedStyleSheetsWithBuiltCSS || false;\n\n/**\n * Sets `useAdoptedStyleSheetsWithBuiltCSS` globally.\n *\n * @param {boolean} value enable or disable `useAdoptedStyleSheetsWithBuiltCSS`\n * @return {void}\n */\nexport const setUseAdoptedStyleSheetsWithBuiltCSS = function(value) {\n  useAdoptedStyleSheetsWithBuiltCSS = value;\n};\n","/**\n@license\nCopyright (c) 2017 The Polymer Project Authors. All rights reserved.\nThis code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt\nThe complete set of authors may be found at http://polymer.github.io/AUTHORS.txt\nThe complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt\nCode distributed by Google as part of the polymer project is also\nsubject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt\n*/\nimport './boot.js';\n\n// unique global id for deduping mixins.\nlet dedupeId = 0;\n\n/**\n * @constructor\n * @extends {Function}\n * @private\n */\nfunction MixinFunction(){}\n/** @type {(WeakMap | undefined)} */\nMixinFunction.prototype.__mixinApplications;\n/** @type {(Object | undefined)} */\nMixinFunction.prototype.__mixinSet;\n\n/* eslint-disable valid-jsdoc */\n/**\n * Wraps an ES6 class expression mixin such that the mixin is only applied\n * if it has not already been applied its base argument. Also memoizes mixin\n * applications.\n *\n * @template T\n * @param {T} mixin ES6 class expression mixin to wrap\n * @return {T}\n * @suppress {invalidCasts}\n */\nexport const dedupingMixin = function(mixin) {\n  let mixinApplications = /** @type {!MixinFunction} */(mixin).__mixinApplications;\n  if (!mixinApplications) {\n    mixinApplications = new WeakMap();\n    /** @type {!MixinFunction} */(mixin).__mixinApplications = mixinApplications;\n  }\n  // maintain a unique id for each mixin\n  let mixinDedupeId = dedupeId++;\n  function dedupingMixin(base) {\n    let baseSet = /** @type {!MixinFunction} */(base).__mixinSet;\n    if (baseSet && baseSet[mixinDedupeId]) {\n      return base;\n    }\n    let map = mixinApplications;\n    let extended = map.get(base);\n    if (!extended) {\n      extended = /** @type {!Function} */(mixin)(base);\n      map.set(base, extended);\n      // copy inherited mixin set from the extended class, or the base class\n      // NOTE: we avoid use of Set here because some browser (IE11)\n      // cannot extend a base Set via the constructor.\n      let mixinSet = Object.create(/** @type {!MixinFunction} */(extended).__mixinSet || baseSet || null);\n      mixinSet[mixinDedupeId] = true;\n      /** @type {!MixinFunction} */(extended).__mixinSet = mixinSet;\n    }\n    return extended;\n  }\n\n  return dedupingMixin;\n};\n/* eslint-enable valid-jsdoc */\n","/**\n@license\nCopyright (c) 2017 The Polymer Project Authors. All rights reserved.\nThis code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt\nThe complete set of authors may be found at http://polymer.github.io/AUTHORS.txt\nThe complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt\nCode distributed by Google as part of the polymer project is also\nsubject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt\n*/\nimport '../utils/boot.js';\n\nimport { resolveUrl, pathFromUrl } from '../utils/resolve-url.js';\nimport { strictTemplatePolicy } from '../utils/settings.js';\n\nlet modules = {};\nlet lcModules = {};\n/**\n * Sets a dom-module into the global registry by id.\n *\n * @param {string} id dom-module id\n * @param {DomModule} module dom-module instance\n * @return {void}\n */\nfunction setModule(id, module) {\n  // store id separate from lowercased id so that\n  // in all cases mixedCase id will stored distinctly\n  // and lowercase version is a fallback\n  modules[id] = lcModules[id.toLowerCase()] = module;\n}\n/**\n * Retrieves a dom-module from the global registry by id.\n *\n * @param {string} id dom-module id\n * @return {DomModule!} dom-module instance\n */\nfunction findModule(id) {\n  return modules[id] || lcModules[id.toLowerCase()];\n}\n\nfunction styleOutsideTemplateCheck(inst) {\n  if (inst.querySelector('style')) {\n    console.warn('dom-module %s has style outside template', inst.id);\n  }\n}\n\n/**\n * The `dom-module` element registers the dom it contains to the name given\n * by the module's id attribute. It provides a unified database of dom\n * accessible via its static `import` API.\n *\n * A key use case of `dom-module` is for providing custom element `<template>`s\n * via HTML imports that are parsed by the native HTML parser, that can be\n * relocated during a bundling pass and still looked up by `id`.\n *\n * Example:\n *\n *     <dom-module id=\"foo\">\n *       <img src=\"stuff.png\">\n *     </dom-module>\n *\n * Then in code in some other location that cannot access the dom-module above\n *\n *     let img = customElements.get('dom-module').import('foo', 'img');\n *\n * @customElement\n * @extends HTMLElement\n * @summary Custom element that provides a registry of relocatable DOM content\n *   by `id` that is agnostic to bundling.\n * @unrestricted\n */\nexport class DomModule extends HTMLElement {\n\n  /** @override */\n  static get observedAttributes() { return ['id']; }\n\n  /**\n   * Retrieves the element specified by the css `selector` in the module\n   * registered by `id`. For example, this.import('foo', 'img');\n   * @param {string} id The id of the dom-module in which to search.\n   * @param {string=} selector The css selector by which to find the element.\n   * @return {Element} Returns the element which matches `selector` in the\n   * module registered at the specified `id`.\n   *\n   * @export\n   * @nocollapse Referred to indirectly in style-gather.js\n   */\n  static import(id, selector) {\n    if (id) {\n      let m = findModule(id);\n      if (m && selector) {\n        return m.querySelector(selector);\n      }\n      return m;\n    }\n    return null;\n  }\n\n  /* eslint-disable no-unused-vars */\n  /**\n   * @param {string} name Name of attribute.\n   * @param {?string} old Old value of attribute.\n   * @param {?string} value Current value of attribute.\n   * @param {?string} namespace Attribute namespace.\n   * @return {void}\n   * @override\n   */\n  attributeChangedCallback(name, old, value, namespace) {\n    if (old !== value) {\n      this.register();\n    }\n  }\n  /* eslint-enable no-unused-args */\n\n  /**\n   * The absolute URL of the original location of this `dom-module`.\n   *\n   * This value will differ from this element's `ownerDocument` in the\n   * following ways:\n   * - Takes into account any `assetpath` attribute added during bundling\n   *   to indicate the original location relative to the bundled location\n   * - Uses the HTMLImports polyfill's `importForElement` API to ensure\n   *   the path is relative to the import document's location since\n   *   `ownerDocument` is not currently polyfilled\n   */\n  get assetpath() {\n    // Don't override existing assetpath.\n    if (!this.__assetpath) {\n      // note: assetpath set via an attribute must be relative to this\n      // element's location; accommodate polyfilled HTMLImports\n      const owner = window.HTMLImports && HTMLImports.importForElement ?\n        HTMLImports.importForElement(this) || document : this.ownerDocument;\n      const url = resolveUrl(\n        this.getAttribute('assetpath') || '', owner.baseURI);\n      this.__assetpath = pathFromUrl(url);\n    }\n    return this.__assetpath;\n  }\n\n  /**\n   * Registers the dom-module at a given id. This method should only be called\n   * when a dom-module is imperatively created. For\n   * example, `document.createElement('dom-module').register('foo')`.\n   * @param {string=} id The id at which to register the dom-module.\n   * @return {void}\n   */\n  register(id) {\n    id = id || this.id;\n    if (id) {\n      // Under strictTemplatePolicy, reject and null out any re-registered\n      // dom-module since it is ambiguous whether first-in or last-in is trusted\n      if (strictTemplatePolicy && findModule(id) !== undefined) {\n        setModule(id, null);\n        throw new Error(`strictTemplatePolicy: dom-module ${id} re-registered`);\n      }\n      this.id = id;\n      setModule(id, this);\n      styleOutsideTemplateCheck(this);\n    }\n  }\n}\n\nDomModule.prototype['modules'] = modules;\n\ncustomElements.define('dom-module', DomModule);\n","/**\n@license\nCopyright (c) 2017 The Polymer Project Authors. All rights reserved.\nThis code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt\nThe complete set of authors may be found at http://polymer.github.io/AUTHORS.txt\nThe complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt\nCode distributed by Google as part of the polymer project is also\nsubject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt\n*/\n\n/**\n * Module with utilities for collection CSS text from `<templates>`, external\n * stylesheets, and `dom-module`s.\n *\n * @summary Module with utilities for collection CSS text from various sources.\n */\n\nimport { DomModule } from '../elements/dom-module.js';\nimport { resolveCss } from './resolve-url.js';\n\nconst MODULE_STYLE_LINK_SELECTOR = 'link[rel=import][type~=css]';\nconst INCLUDE_ATTR = 'include';\nconst SHADY_UNSCOPED_ATTR = 'shady-unscoped';\n\n/**\n * @param {string} moduleId .\n * @return {?DomModule} .\n */\nfunction importModule(moduleId) {\n  return /** @type {?DomModule} */(DomModule.import(moduleId));\n}\n\nfunction styleForImport(importDoc) {\n  // NOTE: polyfill affordance.\n  // under the HTMLImports polyfill, there will be no 'body',\n  // but the import pseudo-doc can be used directly.\n  let container = importDoc.body ? importDoc.body : importDoc;\n  const importCss = resolveCss(container.textContent,\n    importDoc.baseURI);\n  const style = document.createElement('style');\n  style.textContent = importCss;\n  return style;\n}\n\n/** @typedef {{assetpath: string}} */\nlet templateWithAssetPath; // eslint-disable-line no-unused-vars\n\n\n/**\n * Returns a list of <style> elements in a space-separated list of `dom-module`s.\n *\n * @function\n * @param {string} moduleIds List of dom-module id's within which to\n * search for css.\n * @return {!Array<!HTMLStyleElement>} Array of contained <style> elements\n */\nexport function stylesFromModules(moduleIds) {\n const modules = moduleIds.trim().split(/\\s+/);\n const styles = [];\n for (let i=0; i < modules.length; i++) {\n   styles.push(...stylesFromModule(modules[i]));\n }\n return styles;\n}\n\n/**\n * Returns a list of <style> elements in a given `dom-module`.\n * Styles in a `dom-module` can come either from `<style>`s within the\n * first `<template>`, or else from one or more\n * `<link rel=\"import\" type=\"css\">` links outside the template.\n *\n * @param {string} moduleId dom-module id to gather styles from\n * @return {!Array<!HTMLStyleElement>} Array of contained styles.\n */\nexport function stylesFromModule(moduleId) {\n  const m = importModule(moduleId);\n\n  if (!m) {\n    console.warn('Could not find style data in module named', moduleId);\n    return [];\n  }\n\n  if (m._styles === undefined) {\n    const styles = [];\n    // module imports: <link rel=\"import\" type=\"css\">\n    styles.push(..._stylesFromModuleImports(m));\n    // include css from the first template in the module\n    const template = /** @type {?HTMLTemplateElement} */(\n        m.querySelector('template'));\n    if (template) {\n      styles.push(...stylesFromTemplate(template,\n        /** @type {templateWithAssetPath} */(m).assetpath));\n    }\n\n    m._styles = styles;\n  }\n\n  return m._styles;\n}\n\n/**\n * Returns the `<style>` elements within a given template.\n *\n * @param {!HTMLTemplateElement} template Template to gather styles from\n * @param {string=} baseURI baseURI for style content\n * @return {!Array<!HTMLStyleElement>} Array of styles\n */\nexport function stylesFromTemplate(template, baseURI) {\n  if (!template._styles) {\n    const styles = [];\n    // if element is a template, get content from its .content\n    const e$ = template.content.querySelectorAll('style');\n    for (let i=0; i < e$.length; i++) {\n      let e = e$[i];\n      // support style sharing by allowing styles to \"include\"\n      // other dom-modules that contain styling\n      let include = e.getAttribute(INCLUDE_ATTR);\n      if (include) {\n        styles.push(...stylesFromModules(include).filter(function(item, index, self) {\n          return self.indexOf(item) === index;\n        }));\n      }\n      if (baseURI) {\n        e.textContent =\n            resolveCss(e.textContent, /** @type {string} */ (baseURI));\n      }\n      styles.push(e);\n    }\n    template._styles = styles;\n  }\n  return template._styles;\n}\n\n/**\n * Returns a list of <style> elements  from stylesheets loaded via `<link rel=\"import\" type=\"css\">` links within the specified `dom-module`.\n *\n * @param {string} moduleId Id of `dom-module` to gather CSS from\n * @return {!Array<!HTMLStyleElement>} Array of contained styles.\n */\nexport function stylesFromModuleImports(moduleId) {\n let m = importModule(moduleId);\n return m ? _stylesFromModuleImports(m) : [];\n}\n\n/**\n * @param {!HTMLElement} module dom-module element that could contain `<link rel=\"import\" type=\"css\">` styles\n * @return {!Array<!HTMLStyleElement>} Array of contained styles\n */\nfunction _stylesFromModuleImports(module) {\n  const styles = [];\n  const p$ = module.querySelectorAll(MODULE_STYLE_LINK_SELECTOR);\n  for (let i=0; i < p$.length; i++) {\n    let p = p$[i];\n    if (p.import) {\n      const importDoc = p.import;\n      const unscoped = p.hasAttribute(SHADY_UNSCOPED_ATTR);\n      if (unscoped && !importDoc._unscopedStyle) {\n        const style = styleForImport(importDoc);\n        style.setAttribute(SHADY_UNSCOPED_ATTR, '');\n        importDoc._unscopedStyle = style;\n      } else if (!importDoc._style) {\n        importDoc._style = styleForImport(importDoc);\n      }\n      styles.push(unscoped ? importDoc._unscopedStyle : importDoc._style);\n    }\n  }\n  return styles;\n}\n\n/**\n *\n * Returns CSS text of styles in a space-separated list of `dom-module`s.\n * Note: This method is deprecated, use `stylesFromModules` instead.\n *\n * @deprecated\n * @param {string} moduleIds List of dom-module id's within which to\n * search for css.\n * @return {string} Concatenated CSS content from specified `dom-module`s\n */\nexport function cssFromModules(moduleIds) {\n let modules = moduleIds.trim().split(/\\s+/);\n let cssText = '';\n for (let i=0; i < modules.length; i++) {\n   cssText += cssFromModule(modules[i]);\n }\n return cssText;\n}\n\n/**\n * Returns CSS text of styles in a given `dom-module`.  CSS in a `dom-module`\n * can come either from `<style>`s within the first `<template>`, or else\n * from one or more `<link rel=\"import\" type=\"css\">` links outside the\n * template.\n *\n * Any `<styles>` processed are removed from their original location.\n * Note: This method is deprecated, use `styleFromModule` instead.\n *\n * @deprecated\n * @param {string} moduleId dom-module id to gather styles from\n * @return {string} Concatenated CSS content from specified `dom-module`\n */\nexport function cssFromModule(moduleId) {\n  let m = importModule(moduleId);\n  if (m && m._cssText === undefined) {\n    // module imports: <link rel=\"import\" type=\"css\">\n    let cssText = _cssFromModuleImports(m);\n    // include css from the first template in the module\n    let t = /** @type {?HTMLTemplateElement} */(m.querySelector('template'));\n    if (t) {\n      cssText += cssFromTemplate(t,\n        /** @type {templateWithAssetPath} */(m).assetpath);\n    }\n    m._cssText = cssText || null;\n  }\n  if (!m) {\n    console.warn('Could not find style data in module named', moduleId);\n  }\n  return m && m._cssText || '';\n}\n\n/**\n * Returns CSS text of `<styles>` within a given template.\n *\n * Any `<styles>` processed are removed from their original location.\n * Note: This method is deprecated, use `styleFromTemplate` instead.\n *\n * @deprecated\n * @param {!HTMLTemplateElement} template Template to gather styles from\n * @param {string} baseURI Base URI to resolve the URL against\n * @return {string} Concatenated CSS content from specified template\n */\nexport function cssFromTemplate(template, baseURI) {\n  let cssText = '';\n  const e$ = stylesFromTemplate(template, baseURI);\n  // if element is a template, get content from its .content\n  for (let i=0; i < e$.length; i++) {\n    let e = e$[i];\n    if (e.parentNode) {\n      e.parentNode.removeChild(e);\n    }\n    cssText += e.textContent;\n  }\n  return cssText;\n}\n\n/**\n * Returns CSS text from stylesheets loaded via `<link rel=\"import\" type=\"css\">`\n * links within the specified `dom-module`.\n *\n * Note: This method is deprecated, use `stylesFromModuleImports` instead.\n *\n * @deprecated\n *\n * @param {string} moduleId Id of `dom-module` to gather CSS from\n * @return {string} Concatenated CSS content from links in specified `dom-module`\n */\nexport function cssFromModuleImports(moduleId) {\n  let m = importModule(moduleId);\n  return m ? _cssFromModuleImports(m) : '';\n}\n\n/**\n * @deprecated\n * @param {!HTMLElement} module dom-module element that could contain `<link rel=\"import\" type=\"css\">` styles\n * @return {string} Concatenated CSS content from links in the dom-module\n */\nfunction _cssFromModuleImports(module) {\n  let cssText = '';\n  let styles = _stylesFromModuleImports(module);\n  for (let i=0; i < styles.length; i++) {\n    cssText += styles[i].textContent;\n  }\n  return cssText;\n}\n","/**\n@license\nCopyright (c) 2017 The Polymer Project Authors. All rights reserved.\nThis code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt\nThe complete set of authors may be found at http://polymer.github.io/AUTHORS.txt\nThe complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt\nCode distributed by Google as part of the polymer project is also\nsubject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt\n*/\n\n/* eslint-disable valid-jsdoc */\n/**\n * Node wrapper to ensure ShadowDOM safe operation regardless of polyfill\n * presence or mode. Note that with the introduction of `ShadyDOM.noPatch`,\n * a node wrapper must be used to access ShadowDOM API.\n * This is similar to using `Polymer.dom` but relies exclusively\n * on the presence of the ShadyDOM polyfill rather than requiring the loading\n * of legacy (Polymer.dom) API.\n * @type {function(Node):Node}\n */\nexport const wrap = (window['ShadyDOM'] && window['ShadyDOM']['noPatch'] && window['ShadyDOM']['wrap']) ?\n  window['ShadyDOM']['wrap'] :\n  (window['ShadyDOM'] ? (n) => ShadyDOM['patch'](n) : (n) => n);\n\n","/**\n@license\nCopyright (c) 2017 The Polymer Project Authors. All rights reserved.\nThis code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt\nThe complete set of authors may be found at http://polymer.github.io/AUTHORS.txt\nThe complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt\nCode distributed by Google as part of the polymer project is also\nsubject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt\n*/\nimport './boot.js';\n\n/**\n * Module with utilities for manipulating structured data path strings.\n *\n * @summary Module with utilities for manipulating structured data path strings.\n */\n\n/**\n * Returns true if the given string is a structured data path (has dots).\n *\n * Example:\n *\n * ```\n * isPath('foo.bar.baz') // true\n * isPath('foo')         // false\n * ```\n *\n * @param {string} path Path string\n * @return {boolean} True if the string contained one or more dots\n */\nexport function isPath(path) {\n  return path.indexOf('.') >= 0;\n}\n\n/**\n * Returns the root property name for the given path.\n *\n * Example:\n *\n * ```\n * root('foo.bar.baz') // 'foo'\n * root('foo')         // 'foo'\n * ```\n *\n * @param {string} path Path string\n * @return {string} Root property name\n */\nexport function root(path) {\n  let dotIndex = path.indexOf('.');\n  if (dotIndex === -1) {\n    return path;\n  }\n  return path.slice(0, dotIndex);\n}\n\n/**\n * Given `base` is `foo.bar`, `foo` is an ancestor, `foo.bar` is not\n * Returns true if the given path is an ancestor of the base path.\n *\n * Example:\n *\n * ```\n * isAncestor('foo.bar', 'foo')         // true\n * isAncestor('foo.bar', 'foo.bar')     // false\n * isAncestor('foo.bar', 'foo.bar.baz') // false\n * ```\n *\n * @param {string} base Path string to test against.\n * @param {string} path Path string to test.\n * @return {boolean} True if `path` is an ancestor of `base`.\n */\nexport function isAncestor(base, path) {\n  //     base.startsWith(path + '.');\n  return base.indexOf(path + '.') === 0;\n}\n\n/**\n * Given `base` is `foo.bar`, `foo.bar.baz` is an descendant\n *\n * Example:\n *\n * ```\n * isDescendant('foo.bar', 'foo.bar.baz') // true\n * isDescendant('foo.bar', 'foo.bar')     // false\n * isDescendant('foo.bar', 'foo')         // false\n * ```\n *\n * @param {string} base Path string to test against.\n * @param {string} path Path string to test.\n * @return {boolean} True if `path` is a descendant of `base`.\n */\nexport function isDescendant(base, path) {\n  //     path.startsWith(base + '.');\n  return path.indexOf(base + '.') === 0;\n}\n\n/**\n * Replaces a previous base path with a new base path, preserving the\n * remainder of the path.\n *\n * User must ensure `path` has a prefix of `base`.\n *\n * Example:\n *\n * ```\n * translate('foo.bar', 'zot', 'foo.bar.baz') // 'zot.baz'\n * ```\n *\n * @param {string} base Current base string to remove\n * @param {string} newBase New base string to replace with\n * @param {string} path Path to translate\n * @return {string} Translated string\n */\nexport function translate(base, newBase, path) {\n  return newBase + path.slice(base.length);\n}\n\n/**\n * @param {string} base Path string to test against\n * @param {string} path Path string to test\n * @return {boolean} True if `path` is equal to `base`\n */\nexport function matches(base, path) {\n  return (base === path) ||\n         isAncestor(base, path) ||\n         isDescendant(base, path);\n}\n\n/**\n * Converts array-based paths to flattened path.  String-based paths\n * are returned as-is.\n *\n * Example:\n *\n * ```\n * normalize(['foo.bar', 0, 'baz'])  // 'foo.bar.0.baz'\n * normalize('foo.bar.0.baz')        // 'foo.bar.0.baz'\n * ```\n *\n * @param {string | !Array<string|number>} path Input path\n * @return {string} Flattened path\n */\nexport function normalize(path) {\n  if (Array.isArray(path)) {\n    let parts = [];\n    for (let i=0; i<path.length; i++) {\n      let args = path[i].toString().split('.');\n      for (let j=0; j<args.length; j++) {\n        parts.push(args[j]);\n      }\n    }\n    return parts.join('.');\n  } else {\n    return path;\n  }\n}\n\n/**\n * Splits a path into an array of property names. Accepts either arrays\n * of path parts or strings.\n *\n * Example:\n *\n * ```\n * split(['foo.bar', 0, 'baz'])  // ['foo', 'bar', '0', 'baz']\n * split('foo.bar.0.baz')        // ['foo', 'bar', '0', 'baz']\n * ```\n *\n * @param {string | !Array<string|number>} path Input path\n * @return {!Array<string>} Array of path parts\n * @suppress {checkTypes}\n */\nexport function split(path) {\n  if (Array.isArray(path)) {\n    return normalize(path).split('.');\n  }\n  return path.toString().split('.');\n}\n\n/**\n * Reads a value from a path.  If any sub-property in the path is `undefined`,\n * this method returns `undefined` (will never throw.\n *\n * @param {Object} root Object from which to dereference path from\n * @param {string | !Array<string|number>} path Path to read\n * @param {Object=} info If an object is provided to `info`, the normalized\n *  (flattened) path will be set to `info.path`.\n * @return {*} Value at path, or `undefined` if the path could not be\n *  fully dereferenced.\n */\nexport function get(root, path, info) {\n  let prop = root;\n  let parts = split(path);\n  // Loop over path parts[0..n-1] and dereference\n  for (let i=0; i<parts.length; i++) {\n    if (!prop) {\n      return;\n    }\n    let part = parts[i];\n    prop = prop[part];\n  }\n  if (info) {\n    info.path = parts.join('.');\n  }\n  return prop;\n}\n\n/**\n * Sets a value to a path.  If any sub-property in the path is `undefined`,\n * this method will no-op.\n *\n * @param {Object} root Object from which to dereference path from\n * @param {string | !Array<string|number>} path Path to set\n * @param {*} value Value to set to path\n * @return {string | undefined} The normalized version of the input path\n */\nexport function set(root, path, value) {\n  let prop = root;\n  let parts = split(path);\n  let last = parts[parts.length-1];\n  if (parts.length > 1) {\n    // Loop over path parts[0..n-2] and dereference\n    for (let i=0; i<parts.length-1; i++) {\n      let part = parts[i];\n      prop = prop[part];\n      if (!prop) {\n        return;\n      }\n    }\n    // Set value to object at end of path\n    prop[last] = value;\n  } else {\n    // Simple property set\n    prop[path] = value;\n  }\n  return parts.join('.');\n}\n\n/**\n * Returns true if the given string is a structured data path (has dots).\n *\n * This function is deprecated.  Use `isPath` instead.\n *\n * Example:\n *\n * ```\n * isDeep('foo.bar.baz') // true\n * isDeep('foo')         // false\n * ```\n *\n * @deprecated\n * @param {string} path Path string\n * @return {boolean} True if the string contained one or more dots\n */\nexport const isDeep = isPath;\n","/**\n@license\nCopyright (c) 2017 The Polymer Project Authors. All rights reserved.\nThis code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt\nThe complete set of authors may be found at http://polymer.github.io/AUTHORS.txt\nThe complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt\nCode distributed by Google as part of the polymer project is also\nsubject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt\n*/\nimport './boot.js';\n\nconst caseMap = {};\nconst DASH_TO_CAMEL = /-[a-z]/g;\nconst CAMEL_TO_DASH = /([A-Z])/g;\n\n/**\n * @fileoverview Module with utilities for converting between \"dash-case\" and\n * \"camelCase\" identifiers.\n */\n\n/**\n * Converts \"dash-case\" identifier (e.g. `foo-bar-baz`) to \"camelCase\"\n * (e.g. `fooBarBaz`).\n *\n * @param {string} dash Dash-case identifier\n * @return {string} Camel-case representation of the identifier\n */\nexport function dashToCamelCase(dash) {\n  return caseMap[dash] || (\n    caseMap[dash] = dash.indexOf('-') < 0 ? dash : dash.replace(DASH_TO_CAMEL,\n      (m) => m[1].toUpperCase()\n    )\n  );\n}\n\n/**\n * Converts \"camelCase\" identifier (e.g. `fooBarBaz`) to \"dash-case\"\n * (e.g. `foo-bar-baz`).\n *\n * @param {string} camel Camel-case identifier\n * @return {string} Dash-case representation of the identifier\n */\nexport function camelToDashCase(camel) {\n  return caseMap[camel] || (\n    caseMap[camel] = camel.replace(CAMEL_TO_DASH, '-$1').toLowerCase()\n  );\n}\n","/**\n@license\nCopyright (c) 2017 The Polymer Project Authors. All rights reserved.\nThis code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt\nThe complete set of authors may be found at http://polymer.github.io/AUTHORS.txt\nThe complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt\nCode distributed by Google as part of the polymer project is also\nsubject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt\n*/\n\n/**\n * @fileoverview\n *\n * This module provides a number of strategies for enqueuing asynchronous\n * tasks. Each sub-module provides a standard `run(fn)` interface that returns a\n * handle, and a `cancel(handle)` interface for canceling async tasks before\n * they run.\n *\n * @summary Module that provides a number of strategies for enqueuing\n * asynchronous tasks.\n */\n\nimport './boot.js';\n\n// Microtask implemented using Mutation Observer\nlet microtaskCurrHandle = 0;\nlet microtaskLastHandle = 0;\nlet microtaskCallbacks = [];\nlet microtaskNodeContent = 0;\nlet microtaskScheduled = false;\nlet microtaskNode = document.createTextNode('');\nnew window.MutationObserver(microtaskFlush).observe(microtaskNode, {characterData: true});\n\nfunction microtaskFlush() {\n  microtaskScheduled = false;\n  const len = microtaskCallbacks.length;\n  for (let i = 0; i < len; i++) {\n    let cb = microtaskCallbacks[i];\n    if (cb) {\n      try {\n        cb();\n      } catch (e) {\n        setTimeout(() => { throw e; });\n      }\n    }\n  }\n  microtaskCallbacks.splice(0, len);\n  microtaskLastHandle += len;\n}\n\n/**\n * Async interface wrapper around `setTimeout`.\n *\n * @namespace\n * @summary Async interface wrapper around `setTimeout`.\n */\nconst timeOut = {\n  /**\n   * Returns a sub-module with the async interface providing the provided\n   * delay.\n   *\n   * @memberof timeOut\n   * @param {number=} delay Time to wait before calling callbacks in ms\n   * @return {!AsyncInterface} An async timeout interface\n   */\n  after(delay) {\n    return {\n      run(fn) { return window.setTimeout(fn, delay); },\n      cancel(handle) {\n        window.clearTimeout(handle);\n      }\n    };\n  },\n  /**\n   * Enqueues a function called in the next task.\n   *\n   * @memberof timeOut\n   * @param {!Function} fn Callback to run\n   * @param {number=} delay Delay in milliseconds\n   * @return {number} Handle used for canceling task\n   */\n  run(fn, delay) {\n    return window.setTimeout(fn, delay);\n  },\n  /**\n   * Cancels a previously enqueued `timeOut` callback.\n   *\n   * @memberof timeOut\n   * @param {number} handle Handle returned from `run` of callback to cancel\n   * @return {void}\n   */\n  cancel(handle) {\n    window.clearTimeout(handle);\n  }\n};\nexport {timeOut};\n\n/**\n * Async interface wrapper around `requestAnimationFrame`.\n *\n * @namespace\n * @summary Async interface wrapper around `requestAnimationFrame`.\n */\nconst animationFrame = {\n  /**\n   * Enqueues a function called at `requestAnimationFrame` timing.\n   *\n   * @memberof animationFrame\n   * @param {function(number):void} fn Callback to run\n   * @return {number} Handle used for canceling task\n   */\n  run(fn) {\n    return window.requestAnimationFrame(fn);\n  },\n  /**\n   * Cancels a previously enqueued `animationFrame` callback.\n   *\n   * @memberof animationFrame\n   * @param {number} handle Handle returned from `run` of callback to cancel\n   * @return {void}\n   */\n  cancel(handle) {\n    window.cancelAnimationFrame(handle);\n  }\n};\nexport {animationFrame};\n\n/**\n * Async interface wrapper around `requestIdleCallback`.  Falls back to\n * `setTimeout` on browsers that do not support `requestIdleCallback`.\n *\n * @namespace\n * @summary Async interface wrapper around `requestIdleCallback`.\n */\nconst idlePeriod = {\n  /**\n   * Enqueues a function called at `requestIdleCallback` timing.\n   *\n   * @memberof idlePeriod\n   * @param {function(!IdleDeadline):void} fn Callback to run\n   * @return {number} Handle used for canceling task\n   */\n  run(fn) {\n    return window.requestIdleCallback ?\n      window.requestIdleCallback(fn) :\n      window.setTimeout(fn, 16);\n  },\n  /**\n   * Cancels a previously enqueued `idlePeriod` callback.\n   *\n   * @memberof idlePeriod\n   * @param {number} handle Handle returned from `run` of callback to cancel\n   * @return {void}\n   */\n  cancel(handle) {\n    window.cancelIdleCallback ?\n      window.cancelIdleCallback(handle) :\n      window.clearTimeout(handle);\n  }\n};\nexport {idlePeriod};\n\n/**\n * Async interface for enqueuing callbacks that run at microtask timing.\n *\n * Note that microtask timing is achieved via a single `MutationObserver`,\n * and thus callbacks enqueued with this API will all run in a single\n * batch, and not interleaved with other microtasks such as promises.\n * Promises are avoided as an implementation choice for the time being\n * due to Safari bugs that cause Promises to lack microtask guarantees.\n *\n * @namespace\n * @summary Async interface for enqueuing callbacks that run at microtask\n *   timing.\n */\nconst microTask = {\n\n  /**\n   * Enqueues a function called at microtask timing.\n   *\n   * @memberof microTask\n   * @param {!Function=} callback Callback to run\n   * @return {number} Handle used for canceling task\n   */\n  run(callback) {\n    if (!microtaskScheduled) {\n      microtaskScheduled = true;\n      microtaskNode.textContent = microtaskNodeContent++;\n    }\n    microtaskCallbacks.push(callback);\n    return microtaskCurrHandle++;\n  },\n\n  /**\n   * Cancels a previously enqueued `microTask` callback.\n   *\n   * @memberof microTask\n   * @param {number} handle Handle returned from `run` of callback to cancel\n   * @return {void}\n   */\n  cancel(handle) {\n    const idx = handle - microtaskLastHandle;\n    if (idx >= 0) {\n      if (!microtaskCallbacks[idx]) {\n        throw new Error('invalid async handle: ' + handle);\n      }\n      microtaskCallbacks[idx] = null;\n    }\n  }\n\n};\nexport {microTask};\n","/**\n@license\nCopyright (c) 2017 The Polymer Project Authors. All rights reserved.\nThis code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt\nThe complete set of authors may be found at http://polymer.github.io/AUTHORS.txt\nThe complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt\nCode distributed by Google as part of the polymer project is also\nsubject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt\n*/\nimport '../utils/boot.js';\n\nimport { dedupingMixin } from '../utils/mixin.js';\nimport { microTask } from '../utils/async.js';\nimport { wrap } from '../utils/wrap.js';\n\n/** @const {!AsyncInterface} */\nconst microtask = microTask;\n\n/**\n * Element class mixin that provides basic meta-programming for creating one\n * or more property accessors (getter/setter pair) that enqueue an async\n * (batched) `_propertiesChanged` callback.\n *\n * For basic usage of this mixin, call `MyClass.createProperties(props)`\n * once at class definition time to create property accessors for properties\n * named in props, implement `_propertiesChanged` to react as desired to\n * property changes, and implement `static get observedAttributes()` and\n * include lowercase versions of any property names that should be set from\n * attributes. Last, call `this._enableProperties()` in the element's\n * `connectedCallback` to enable the accessors.\n *\n * @mixinFunction\n * @polymer\n * @summary Element class mixin for reacting to property changes from\n *   generated property accessors.\n * @template T\n * @param {function(new:T)} superClass Class to apply mixin to.\n * @return {function(new:T)} superClass with mixin applied.\n */\nexport const PropertiesChanged = dedupingMixin(\n    /**\n     * @template T\n     * @param {function(new:T)} superClass Class to apply mixin to.\n     * @return {function(new:T)} superClass with mixin applied.\n     */\n    (superClass) => {\n\n  /**\n   * @polymer\n   * @mixinClass\n   * @implements {Polymer_PropertiesChanged}\n   * @unrestricted\n   */\n  class PropertiesChanged extends superClass {\n\n    /**\n     * Creates property accessors for the given property names.\n     * @param {!Object} props Object whose keys are names of accessors.\n     * @return {void}\n     * @protected\n     * @nocollapse\n     */\n    static createProperties(props) {\n      const proto = this.prototype;\n      for (let prop in props) {\n        // don't stomp an existing accessor\n        if (!(prop in proto)) {\n          proto._createPropertyAccessor(prop);\n        }\n      }\n    }\n\n    /**\n     * Returns an attribute name that corresponds to the given property.\n     * The attribute name is the lowercased property name. Override to\n     * customize this mapping.\n     * @param {string} property Property to convert\n     * @return {string} Attribute name corresponding to the given property.\n     *\n     * @protected\n     * @nocollapse\n     */\n    static attributeNameForProperty(property) {\n      return property.toLowerCase();\n    }\n\n    /**\n     * Override point to provide a type to which to deserialize a value to\n     * a given property.\n     * @param {string} name Name of property\n     *\n     * @protected\n     * @nocollapse\n     */\n    static typeForProperty(name) { } //eslint-disable-line no-unused-vars\n\n    /**\n     * Creates a setter/getter pair for the named property with its own\n     * local storage.  The getter returns the value in the local storage,\n     * and the setter calls `_setProperty`, which updates the local storage\n     * for the property and enqueues a `_propertiesChanged` callback.\n     *\n     * This method may be called on a prototype or an instance.  Calling\n     * this method may overwrite a property value that already exists on\n     * the prototype/instance by creating the accessor.\n     *\n     * @param {string} property Name of the property\n     * @param {boolean=} readOnly When true, no setter is created; the\n     *   protected `_setProperty` function must be used to set the property\n     * @return {void}\n     * @protected\n     * @override\n     */\n    _createPropertyAccessor(property, readOnly) {\n      this._addPropertyToAttributeMap(property);\n      if (!this.hasOwnProperty(JSCompiler_renameProperty('__dataHasAccessor', this))) {\n        this.__dataHasAccessor = Object.assign({}, this.__dataHasAccessor);\n      }\n      if (!this.__dataHasAccessor[property]) {\n        this.__dataHasAccessor[property] = true;\n        this._definePropertyAccessor(property, readOnly);\n      }\n    }\n\n    /**\n     * Adds the given `property` to a map matching attribute names\n     * to property names, using `attributeNameForProperty`. This map is\n     * used when deserializing attribute values to properties.\n     *\n     * @param {string} property Name of the property\n     * @override\n     */\n    _addPropertyToAttributeMap(property) {\n      if (!this.hasOwnProperty(JSCompiler_renameProperty('__dataAttributes', this))) {\n        this.__dataAttributes = Object.assign({}, this.__dataAttributes);\n      }\n      // This check is technically not correct; it's an optimization that\n      // assumes that if a _property_ name is already in the map (note this is\n      // an attr->property map), the property mapped directly to the attribute\n      // and it has already been mapped.  This would fail if\n      // `attributeNameForProperty` were overridden such that this was not the\n      // case.\n      let attr = this.__dataAttributes[property];\n      if (!attr) {\n        attr = this.constructor.attributeNameForProperty(property);\n        this.__dataAttributes[attr] = property;\n      }\n      return attr;\n    }\n\n    /**\n     * Defines a property accessor for the given property.\n     * @param {string} property Name of the property\n     * @param {boolean=} readOnly When true, no setter is created\n     * @return {void}\n     * @override\n     */\n     _definePropertyAccessor(property, readOnly) {\n      Object.defineProperty(this, property, {\n        /* eslint-disable valid-jsdoc */\n        /** @this {PropertiesChanged} */\n        get() {\n          // Inline for perf instead of using `_getProperty`\n          return this.__data[property];\n        },\n        /** @this {PropertiesChanged} */\n        set: readOnly ? function () {} : function (value) {\n          // Inline for perf instead of using `_setProperty`\n          if (this._setPendingProperty(property, value, true)) {\n            this._invalidateProperties();\n          }\n        }\n        /* eslint-enable */\n      });\n    }\n\n    constructor() {\n      super();\n      /** @type {boolean} */\n      this.__dataEnabled = false;\n      this.__dataReady = false;\n      this.__dataInvalid = false;\n      this.__data = {};\n      this.__dataPending = null;\n      this.__dataOld = null;\n      this.__dataInstanceProps = null;\n      /** @type {number} */\n      // NOTE: used to track re-entrant calls to `_flushProperties`\n      this.__dataCounter = 0;\n      this.__serializing = false;\n      this._initializeProperties();\n    }\n\n    /**\n     * Lifecycle callback called when properties are enabled via\n     * `_enableProperties`.\n     *\n     * Users may override this function to implement behavior that is\n     * dependent on the element having its property data initialized, e.g.\n     * from defaults (initialized from `constructor`, `_initializeProperties`),\n     * `attributeChangedCallback`, or values propagated from host e.g. via\n     * bindings.  `super.ready()` must be called to ensure the data system\n     * becomes enabled.\n     *\n     * @return {void}\n     * @public\n     * @override\n     */\n    ready() {\n      this.__dataReady = true;\n      this._flushProperties();\n    }\n\n    /**\n     * Initializes the local storage for property accessors.\n     *\n     * Provided as an override point for performing any setup work prior\n     * to initializing the property accessor system.\n     *\n     * @return {void}\n     * @protected\n     * @override\n     */\n    _initializeProperties() {\n      // Capture instance properties; these will be set into accessors\n      // during first flush. Don't set them here, since we want\n      // these to overwrite defaults/constructor assignments\n      for (let p in this.__dataHasAccessor) {\n        if (this.hasOwnProperty(p)) {\n          this.__dataInstanceProps = this.__dataInstanceProps || {};\n          this.__dataInstanceProps[p] = this[p];\n          delete this[p];\n        }\n      }\n    }\n\n    /**\n     * Called at ready time with bag of instance properties that overwrote\n     * accessors when the element upgraded.\n     *\n     * The default implementation sets these properties back into the\n     * setter at ready time.  This method is provided as an override\n     * point for customizing or providing more efficient initialization.\n     *\n     * @param {Object} props Bag of property values that were overwritten\n     *   when creating property accessors.\n     * @return {void}\n     * @protected\n     * @override\n     */\n    _initializeInstanceProperties(props) {\n      Object.assign(this, props);\n    }\n\n    /**\n     * Updates the local storage for a property (via `_setPendingProperty`)\n     * and enqueues a `_proeprtiesChanged` callback.\n     *\n     * @param {string} property Name of the property\n     * @param {*} value Value to set\n     * @return {void}\n     * @protected\n     * @override\n     */\n    _setProperty(property, value) {\n      if (this._setPendingProperty(property, value)) {\n        this._invalidateProperties();\n      }\n    }\n\n    /**\n     * Returns the value for the given property.\n     * @param {string} property Name of property\n     * @return {*} Value for the given property\n     * @protected\n     * @override\n     */\n    _getProperty(property) {\n      return this.__data[property];\n    }\n\n    /* eslint-disable no-unused-vars */\n    /**\n     * Updates the local storage for a property, records the previous value,\n     * and adds it to the set of \"pending changes\" that will be passed to the\n     * `_propertiesChanged` callback.  This method does not enqueue the\n     * `_propertiesChanged` callback.\n     *\n     * @param {string} property Name of the property\n     * @param {*} value Value to set\n     * @param {boolean=} ext Not used here; affordance for closure\n     * @return {boolean} Returns true if the property changed\n     * @protected\n     * @override\n     */\n    _setPendingProperty(property, value, ext) {\n      let old = this.__data[property];\n      let changed = this._shouldPropertyChange(property, value, old);\n      if (changed) {\n        if (!this.__dataPending) {\n          this.__dataPending = {};\n          this.__dataOld = {};\n        }\n        // Ensure old is captured from the last turn\n        if (this.__dataOld && !(property in this.__dataOld)) {\n          this.__dataOld[property] = old;\n        }\n        this.__data[property] = value;\n        this.__dataPending[property] = value;\n      }\n      return changed;\n    }\n    /* eslint-enable */\n\n    /**\n     * @param {string} property Name of the property\n     * @return {boolean} Returns true if the property is pending.\n     */\n    _isPropertyPending(property) {\n      return !!(this.__dataPending && this.__dataPending.hasOwnProperty(property));\n    }\n\n    /**\n     * Marks the properties as invalid, and enqueues an async\n     * `_propertiesChanged` callback.\n     *\n     * @return {void}\n     * @protected\n     * @override\n     */\n    _invalidateProperties() {\n      if (!this.__dataInvalid && this.__dataReady) {\n        this.__dataInvalid = true;\n        microtask.run(() => {\n          if (this.__dataInvalid) {\n            this.__dataInvalid = false;\n            this._flushProperties();\n          }\n        });\n      }\n    }\n\n    /**\n     * Call to enable property accessor processing. Before this method is\n     * called accessor values will be set but side effects are\n     * queued. When called, any pending side effects occur immediately.\n     * For elements, generally `connectedCallback` is a normal spot to do so.\n     * It is safe to call this method multiple times as it only turns on\n     * property accessors once.\n     *\n     * @return {void}\n     * @protected\n     * @override\n     */\n    _enableProperties() {\n      if (!this.__dataEnabled) {\n        this.__dataEnabled = true;\n        if (this.__dataInstanceProps) {\n          this._initializeInstanceProperties(this.__dataInstanceProps);\n          this.__dataInstanceProps = null;\n        }\n        this.ready();\n      }\n    }\n\n    /**\n     * Calls the `_propertiesChanged` callback with the current set of\n     * pending changes (and old values recorded when pending changes were\n     * set), and resets the pending set of changes. Generally, this method\n     * should not be called in user code.\n     *\n     * @return {void}\n     * @protected\n     * @override\n     */\n    _flushProperties() {\n      this.__dataCounter++;\n      const props = this.__data;\n      const changedProps = this.__dataPending;\n      const old = this.__dataOld;\n      if (this._shouldPropertiesChange(props, changedProps, old)) {\n        this.__dataPending = null;\n        this.__dataOld = null;\n        this._propertiesChanged(props, changedProps, old);\n      }\n      this.__dataCounter--;\n    }\n\n    /**\n     * Called in `_flushProperties` to determine if `_propertiesChanged`\n     * should be called. The default implementation returns true if\n     * properties are pending. Override to customize when\n     * `_propertiesChanged` is called.\n     * @param {!Object} currentProps Bag of all current accessor values\n     * @param {?Object} changedProps Bag of properties changed since the last\n     *   call to `_propertiesChanged`\n     * @param {?Object} oldProps Bag of previous values for each property\n     *   in `changedProps`\n     * @return {boolean} true if changedProps is truthy\n     * @override\n     */\n    _shouldPropertiesChange(currentProps, changedProps, oldProps) { // eslint-disable-line no-unused-vars\n      return Boolean(changedProps);\n    }\n\n    /**\n     * Callback called when any properties with accessors created via\n     * `_createPropertyAccessor` have been set.\n     *\n     * @param {!Object} currentProps Bag of all current accessor values\n     * @param {?Object} changedProps Bag of properties changed since the last\n     *   call to `_propertiesChanged`\n     * @param {?Object} oldProps Bag of previous values for each property\n     *   in `changedProps`\n     * @return {void}\n     * @protected\n     * @override\n     */\n    _propertiesChanged(currentProps, changedProps, oldProps) { // eslint-disable-line no-unused-vars\n    }\n\n    /**\n     * Method called to determine whether a property value should be\n     * considered as a change and cause the `_propertiesChanged` callback\n     * to be enqueued.\n     *\n     * The default implementation returns `true` if a strict equality\n     * check fails. The method always returns false for `NaN`.\n     *\n     * Override this method to e.g. provide stricter checking for\n     * Objects/Arrays when using immutable patterns.\n     *\n     * @param {string} property Property name\n     * @param {*} value New property value\n     * @param {*} old Previous property value\n     * @return {boolean} Whether the property should be considered a change\n     *   and enqueue a `_proeprtiesChanged` callback\n     * @protected\n     * @override\n     */\n    _shouldPropertyChange(property, value, old) {\n      return (\n        // Strict equality check\n        (old !== value &&\n          // This ensures (old==NaN, value==NaN) always returns false\n          (old === old || value === value))\n      );\n    }\n\n    /**\n     * Implements native Custom Elements `attributeChangedCallback` to\n     * set an attribute value to a property via `_attributeToProperty`.\n     *\n     * @param {string} name Name of attribute that changed\n     * @param {?string} old Old attribute value\n     * @param {?string} value New attribute value\n     * @param {?string} namespace Attribute namespace.\n     * @return {void}\n     * @suppress {missingProperties} Super may or may not implement the callback\n     * @override\n     */\n    attributeChangedCallback(name, old, value, namespace) {\n      if (old !== value) {\n        this._attributeToProperty(name, value);\n      }\n      if (super.attributeChangedCallback) {\n        super.attributeChangedCallback(name, old, value, namespace);\n      }\n    }\n\n    /**\n     * Deserializes an attribute to its associated property.\n     *\n     * This method calls the `_deserializeValue` method to convert the string to\n     * a typed value.\n     *\n     * @param {string} attribute Name of attribute to deserialize.\n     * @param {?string} value of the attribute.\n     * @param {*=} type type to deserialize to, defaults to the value\n     * returned from `typeForProperty`\n     * @return {void}\n     * @override\n     */\n    _attributeToProperty(attribute, value, type) {\n      if (!this.__serializing) {\n        const map = this.__dataAttributes;\n        const property = map && map[attribute] || attribute;\n        this[property] = this._deserializeValue(value, type ||\n          this.constructor.typeForProperty(property));\n      }\n    }\n\n    /**\n     * Serializes a property to its associated attribute.\n     *\n     * @suppress {invalidCasts} Closure can't figure out `this` is an element.\n     *\n     * @param {string} property Property name to reflect.\n     * @param {string=} attribute Attribute name to reflect to.\n     * @param {*=} value Property value to refect.\n     * @return {void}\n     * @override\n     */\n    _propertyToAttribute(property, attribute, value) {\n      this.__serializing = true;\n      value = (arguments.length < 3) ? this[property] : value;\n      this._valueToNodeAttribute(/** @type {!HTMLElement} */(this), value,\n        attribute || this.constructor.attributeNameForProperty(property));\n      this.__serializing = false;\n    }\n\n    /**\n     * Sets a typed value to an HTML attribute on a node.\n     *\n     * This method calls the `_serializeValue` method to convert the typed\n     * value to a string.  If the `_serializeValue` method returns `undefined`,\n     * the attribute will be removed (this is the default for boolean\n     * type `false`).\n     *\n     * @param {Element} node Element to set attribute to.\n     * @param {*} value Value to serialize.\n     * @param {string} attribute Attribute name to serialize to.\n     * @return {void}\n     * @override\n     */\n    _valueToNodeAttribute(node, value, attribute) {\n      const str = this._serializeValue(value);\n      if (attribute === 'class' || attribute === 'name' || attribute === 'slot') {\n        node = /** @type {?Element} */(wrap(node));\n      }\n      if (str === undefined) {\n        node.removeAttribute(attribute);\n      } else {\n        node.setAttribute(\n            attribute,\n            // Closure's type for `setAttribute`'s second parameter incorrectly\n            // excludes `TrustedScript`.\n            (str === '' && window.trustedTypes) ?\n                /** @type {?} */ (window.trustedTypes.emptyScript) :\n                str);\n      }\n    }\n\n    /**\n     * Converts a typed JavaScript value to a string.\n     *\n     * This method is called when setting JS property values to\n     * HTML attributes.  Users may override this method to provide\n     * serialization for custom types.\n     *\n     * @param {*} value Property value to serialize.\n     * @return {string | undefined} String serialized from the provided\n     * property  value.\n     * @override\n     */\n    _serializeValue(value) {\n      switch (typeof value) {\n        case 'boolean':\n          return value ? '' : undefined;\n        default:\n          return value != null ? value.toString() : undefined;\n      }\n    }\n\n    /**\n     * Converts a string to a typed JavaScript value.\n     *\n     * This method is called when reading HTML attribute values to\n     * JS properties.  Users may override this method to provide\n     * deserialization for custom `type`s. Types for `Boolean`, `String`,\n     * and `Number` convert attributes to the expected types.\n     *\n     * @param {?string} value Value to deserialize.\n     * @param {*=} type Type to deserialize the string to.\n     * @return {*} Typed value deserialized from the provided string.\n     * @override\n     */\n    _deserializeValue(value, type) {\n      switch (type) {\n        case Boolean:\n          return (value !== null);\n        case Number:\n          return Number(value);\n        default:\n          return value;\n      }\n    }\n\n  }\n\n  return PropertiesChanged;\n});\n","/**\n@license\nCopyright (c) 2017 The Polymer Project Authors. All rights reserved.\nThis code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt\nThe complete set of authors may be found at http://polymer.github.io/AUTHORS.txt\nThe complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt\nCode distributed by Google as part of the polymer project is also\nsubject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt\n*/\nimport '../utils/boot.js';\n\nimport { dedupingMixin } from '../utils/mixin.js';\nimport { camelToDashCase, dashToCamelCase } from '../utils/case-map.js';\nimport { PropertiesChanged } from './properties-changed.js';\n\n// Save map of native properties; this forms a blacklist or properties\n// that won't have their values \"saved\" by `saveAccessorValue`, since\n// reading from an HTMLElement accessor from the context of a prototype throws\nconst nativeProperties = {};\nlet proto = HTMLElement.prototype;\nwhile (proto) {\n  let props = Object.getOwnPropertyNames(proto);\n  for (let i=0; i<props.length; i++) {\n    nativeProperties[props[i]] = true;\n  }\n  proto = Object.getPrototypeOf(proto);\n}\n\nconst isTrustedType = (() => {\n  if (!window.trustedTypes) {\n    return () => false;\n  }\n  return (val) => trustedTypes.isHTML(val) ||\n        trustedTypes.isScript(val) || trustedTypes.isScriptURL(val);\n})();\n\n/**\n * Used to save the value of a property that will be overridden with\n * an accessor. If the `model` is a prototype, the values will be saved\n * in `__dataProto`, and it's up to the user (or downstream mixin) to\n * decide how/when to set these values back into the accessors.\n * If `model` is already an instance (it has a `__data` property), then\n * the value will be set as a pending property, meaning the user should\n * call `_invalidateProperties` or `_flushProperties` to take effect\n *\n * @param {Object} model Prototype or instance\n * @param {string} property Name of property\n * @return {void}\n * @private\n */\nfunction saveAccessorValue(model, property) {\n  // Don't read/store value for any native properties since they could throw\n  if (!nativeProperties[property]) {\n    let value = model[property];\n    if (value !== undefined) {\n      if (model.__data) {\n        // Adding accessor to instance; update the property\n        // It is the user's responsibility to call _flushProperties\n        model._setPendingProperty(property, value);\n      } else {\n        // Adding accessor to proto; save proto's value for instance-time use\n        if (!model.__dataProto) {\n          model.__dataProto = {};\n        } else if (!model.hasOwnProperty(JSCompiler_renameProperty('__dataProto', model))) {\n          model.__dataProto = Object.create(model.__dataProto);\n        }\n        model.__dataProto[property] = value;\n      }\n    }\n  }\n}\n\n/**\n * Element class mixin that provides basic meta-programming for creating one\n * or more property accessors (getter/setter pair) that enqueue an async\n * (batched) `_propertiesChanged` callback.\n *\n * For basic usage of this mixin:\n *\n * -   Declare attributes to observe via the standard `static get\n *     observedAttributes()`. Use `dash-case` attribute names to represent\n *     `camelCase` property names.\n * -   Implement the `_propertiesChanged` callback on the class.\n * -   Call `MyClass.createPropertiesForAttributes()` **once** on the class to\n *     generate property accessors for each observed attribute. This must be\n *     called before the first instance is created, for example, by calling it\n *     before calling `customElements.define`. It can also be called lazily from\n *     the element's `constructor`, as long as it's guarded so that the call is\n *     only made once, when the first instance is created.\n * -   Call `this._enableProperties()` in the element's `connectedCallback` to\n *     enable the accessors.\n *\n * Any `observedAttributes` will automatically be\n * deserialized via `attributeChangedCallback` and set to the associated\n * property using `dash-case`-to-`camelCase` convention.\n *\n * @mixinFunction\n * @polymer\n * @appliesMixin PropertiesChanged\n * @summary Element class mixin for reacting to property changes from\n *   generated property accessors.\n * @template T\n * @param {function(new:T)} superClass Class to apply mixin to.\n * @return {function(new:T)} superClass with mixin applied.\n */\nexport const PropertyAccessors = dedupingMixin(superClass => {\n\n  /**\n   * @constructor\n   * @implements {Polymer_PropertiesChanged}\n   * @unrestricted\n   * @private\n   */\n   const base = PropertiesChanged(superClass);\n\n  /**\n   * @polymer\n   * @mixinClass\n   * @implements {Polymer_PropertyAccessors}\n   * @extends {base}\n   * @unrestricted\n   */\n  class PropertyAccessors extends base {\n\n    /**\n     * Generates property accessors for all attributes in the standard\n     * static `observedAttributes` array.\n     *\n     * Attribute names are mapped to property names using the `dash-case` to\n     * `camelCase` convention\n     *\n     * @return {void}\n     * @nocollapse\n     */\n    static createPropertiesForAttributes() {\n      let a$ =  /** @type {?} */ (this).observedAttributes;\n      for (let i=0; i < a$.length; i++) {\n        this.prototype._createPropertyAccessor(dashToCamelCase(a$[i]));\n      }\n    }\n\n    /**\n     * Returns an attribute name that corresponds to the given property.\n     * By default, converts camel to dash case, e.g. `fooBar` to `foo-bar`.\n     * @param {string} property Property to convert\n     * @return {string} Attribute name corresponding to the given property.\n     *\n     * @protected\n     * @nocollapse\n     */\n    static attributeNameForProperty(property) {\n      return camelToDashCase(property);\n    }\n\n    /**\n     * Overrides PropertiesChanged implementation to initialize values for\n     * accessors created for values that already existed on the element\n     * prototype.\n     *\n     * @return {void}\n     * @protected\n     * @override\n     */\n    _initializeProperties() {\n      if (this.__dataProto) {\n        this._initializeProtoProperties(this.__dataProto);\n        this.__dataProto = null;\n      }\n      super._initializeProperties();\n    }\n\n    /**\n     * Called at instance time with bag of properties that were overwritten\n     * by accessors on the prototype when accessors were created.\n     *\n     * The default implementation sets these properties back into the\n     * setter at instance time.  This method is provided as an override\n     * point for customizing or providing more efficient initialization.\n     *\n     * @param {Object} props Bag of property values that were overwritten\n     *   when creating property accessors.\n     * @return {void}\n     * @protected\n     * @override\n     */\n    _initializeProtoProperties(props) {\n      for (let p in props) {\n        this._setProperty(p, props[p]);\n      }\n    }\n\n    /**\n     * Ensures the element has the given attribute. If it does not,\n     * assigns the given value to the attribute.\n     *\n     * @suppress {invalidCasts} Closure can't figure out `this` is infact an\n     *     element\n     *\n     * @param {string} attribute Name of attribute to ensure is set.\n     * @param {string} value of the attribute.\n     * @return {void}\n     * @override\n     */\n    _ensureAttribute(attribute, value) {\n      const el = /** @type {!HTMLElement} */(this);\n      if (!el.hasAttribute(attribute)) {\n        this._valueToNodeAttribute(el, value, attribute);\n      }\n    }\n\n    /**\n     * Overrides PropertiesChanged implemention to serialize objects as JSON.\n     *\n     * @param {*} value Property value to serialize.\n     * @return {string | undefined} String serialized from the provided property\n     *     value.\n     * @override\n     */\n    _serializeValue(value) {\n      /* eslint-disable no-fallthrough */\n      switch (typeof value) {\n        case 'object':\n          if (value instanceof Date) {\n            return value.toString();\n          } else if (value) {\n            if (isTrustedType(value)) {\n              /**\n               * Here `value` isn't actually a string, but it should be\n               * passed into APIs that normally expect a string, like\n               * elem.setAttribute.\n               */\n              return /** @type {?} */ (value);\n            }\n            try {\n              return JSON.stringify(value);\n            } catch(x) {\n              return '';\n            }\n          }\n\n        default:\n          return super._serializeValue(value);\n      }\n    }\n\n    /**\n     * Converts a string to a typed JavaScript value.\n     *\n     * This method is called by Polymer when reading HTML attribute values to\n     * JS properties.  Users may override this method on Polymer element\n     * prototypes to provide deserialization for custom `type`s.  Note,\n     * the `type` argument is the value of the `type` field provided in the\n     * `properties` configuration object for a given property, and is\n     * by convention the constructor for the type to deserialize.\n     *\n     *\n     * @param {?string} value Attribute value to deserialize.\n     * @param {*=} type Type to deserialize the string to.\n     * @return {*} Typed value deserialized from the provided string.\n     * @override\n     */\n    _deserializeValue(value, type) {\n      /**\n       * @type {*}\n       */\n      let outValue;\n      switch (type) {\n        case Object:\n          try {\n            outValue = JSON.parse(/** @type {string} */(value));\n          } catch(x) {\n            // allow non-JSON literals like Strings and Numbers\n            outValue = value;\n          }\n          break;\n        case Array:\n          try {\n            outValue = JSON.parse(/** @type {string} */(value));\n          } catch(x) {\n            outValue = null;\n            console.warn(`Polymer::Attributes: couldn't decode Array as JSON: ${value}`);\n          }\n          break;\n        case Date:\n          outValue = isNaN(value) ? String(value) : Number(value);\n          outValue = new Date(outValue);\n          break;\n        default:\n          outValue = super._deserializeValue(value, type);\n          break;\n      }\n      return outValue;\n    }\n    /* eslint-enable no-fallthrough */\n\n    /**\n     * Overrides PropertiesChanged implementation to save existing prototype\n     * property value so that it can be reset.\n     * @param {string} property Name of the property\n     * @param {boolean=} readOnly When true, no setter is created\n     *\n     * When calling on a prototype, any overwritten values are saved in\n     * `__dataProto`, and it is up to the subclasser to decide how/when\n     * to set those properties back into the accessor.  When calling on an\n     * instance, the overwritten value is set via `_setPendingProperty`,\n     * and the user should call `_invalidateProperties` or `_flushProperties`\n     * for the values to take effect.\n     * @protected\n     * @return {void}\n     * @override\n     */\n    _definePropertyAccessor(property, readOnly) {\n      saveAccessorValue(this, property);\n      super._definePropertyAccessor(property, readOnly);\n    }\n\n    /**\n     * Returns true if this library created an accessor for the given property.\n     *\n     * @param {string} property Property name\n     * @return {boolean} True if an accessor was created\n     * @override\n     */\n    _hasAccessor(property) {\n      return this.__dataHasAccessor && this.__dataHasAccessor[property];\n    }\n\n    /**\n     * Returns true if the specified property has a pending change.\n     *\n     * @param {string} prop Property name\n     * @return {boolean} True if property has a pending change\n     * @protected\n     * @override\n     */\n    _isPropertyPending(prop) {\n      return Boolean(this.__dataPending && (prop in this.__dataPending));\n    }\n\n  }\n\n  return PropertyAccessors;\n\n});\n","/**\n@license\nCopyright (c) 2017 The Polymer Project Authors. All rights reserved.\nThis code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt\nThe complete set of authors may be found at http://polymer.github.io/AUTHORS.txt\nThe complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt\nCode distributed by Google as part of the polymer project is also\nsubject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt\n*/\nimport '../utils/boot.js';\n\nimport { dedupingMixin } from '../utils/mixin.js';\n\n// 1.x backwards-compatible auto-wrapper for template type extensions\n// This is a clear layering violation and gives favored-nation status to\n// dom-if and dom-repeat templates.  This is a conceit we're choosing to keep\n// a.) to ease 1.x backwards-compatibility due to loss of `is`, and\n// b.) to maintain if/repeat capability in parser-constrained elements\n//     (e.g. table, select) in lieu of native CE type extensions without\n//     massive new invention in this space (e.g. directive system)\nconst templateExtensions = {\n  'dom-if': true,\n  'dom-repeat': true\n};\n\nlet placeholderBugDetect = false;\nlet placeholderBug = false;\n\nfunction hasPlaceholderBug() {\n  if (!placeholderBugDetect) {\n    placeholderBugDetect = true;\n    const t = document.createElement('textarea');\n    t.placeholder = 'a';\n    placeholderBug = t.placeholder === t.textContent;\n  }\n  return placeholderBug;\n}\n\n/**\n * Some browsers have a bug with textarea, where placeholder text is copied as\n * a textnode child of the textarea.\n *\n * If the placeholder is a binding, this can break template stamping in two\n * ways.\n *\n * One issue is that when the `placeholder` attribute is removed when the\n * binding is processed, the textnode child of the textarea is deleted, and the\n * template info tries to bind into that node.\n *\n * With `legacyOptimizations` in use, when the template is stamped and the\n * `textarea.textContent` binding is processed, no corresponding node is found\n * because it was removed during parsing. An exception is generated when this\n * binding is updated.\n *\n * With `legacyOptimizations` not in use, the template is cloned before\n * processing and this changes the above behavior. The cloned template also has\n * a value property set to the placeholder and textContent. This prevents the\n * removal of the textContent when the placeholder attribute is removed.\n * Therefore the exception does not occur. However, there is an extra\n * unnecessary binding.\n *\n * @param {!Node} node Check node for placeholder bug\n * @return {void}\n */\nfunction fixPlaceholder(node) {\n  if (hasPlaceholderBug() && node.localName === 'textarea' && node.placeholder\n        && node.placeholder === node.textContent) {\n    node.textContent = null;\n  }\n}\n\n/**\n * Copies an attribute from one element to another, converting the value to a\n * `TrustedScript` if it is named like a Polymer template event listener.\n *\n * @param {!Element} dest The element to set the attribute on\n * @param {!Element} src The element to read the attribute from\n * @param {string} name The name of the attribute\n */\nconst copyAttributeWithTemplateEventPolicy = (() => {\n  /**\n   * This `TrustedTypePolicy` is used to work around a Chrome bug in the Trusted\n   * Types API where any attribute that starts with `on` may only be set to a\n   * `TrustedScript` value, even if that attribute would not cause an event\n   * listener to be created. (See https://crbug.com/993268 for details.)\n   *\n   * Polymer's template system allows `<dom-if>` and `<dom-repeat>` to be\n   * written using the `<template is=\"...\">` syntax, even if there is no UA\n   * support for custom element extensions of built-in elements. In doing so, it\n   * copies attributes from the original `<template>` to a newly created\n   * `<dom-if>` or `<dom-repeat>`, which can trigger the bug mentioned above if\n   * any of those attributes uses Polymer's `on-` syntax for event listeners.\n   * (Note, the value of these `on-` listeners is not evaluated as script: it is\n   * the name of a member function of a component that will be used as the event\n   * listener.)\n   *\n   * @type {!TrustedTypePolicy|undefined}\n   */\n  const polymerTemplateEventAttributePolicy = window.trustedTypes &&\n      window.trustedTypes.createPolicy(\n          'polymer-template-event-attribute-policy', {\n            createScript: x => x,\n          });\n\n  return (dest, src, name) => {\n    const value = src.getAttribute(name);\n\n    if (polymerTemplateEventAttributePolicy && name.startsWith('on-')) {\n      dest.setAttribute(\n          name, polymerTemplateEventAttributePolicy.createScript(value, name));\n      return;\n    }\n\n    dest.setAttribute(name, value);\n  };\n})();\n\nfunction wrapTemplateExtension(node) {\n  let is = node.getAttribute('is');\n  if (is && templateExtensions[is]) {\n    let t = node;\n    t.removeAttribute('is');\n    node = t.ownerDocument.createElement(is);\n    t.parentNode.replaceChild(node, t);\n    node.appendChild(t);\n    while(t.attributes.length) {\n      const {name} = t.attributes[0];\n      copyAttributeWithTemplateEventPolicy(node, t, name);\n      t.removeAttribute(name);\n    }\n  }\n  return node;\n}\n\nfunction findTemplateNode(root, nodeInfo) {\n  // recursively ascend tree until we hit root\n  let parent = nodeInfo.parentInfo && findTemplateNode(root, nodeInfo.parentInfo);\n  // unwind the stack, returning the indexed node at each level\n  if (parent) {\n    // note: marginally faster than indexing via childNodes\n    // (http://jsperf.com/childnodes-lookup)\n    for (let n=parent.firstChild, i=0; n; n=n.nextSibling) {\n      if (nodeInfo.parentIndex === i++) {\n        return n;\n      }\n    }\n  } else {\n    return root;\n  }\n}\n\n// construct `$` map (from id annotations)\nfunction applyIdToMap(inst, map, node, nodeInfo) {\n  if (nodeInfo.id) {\n    map[nodeInfo.id] = node;\n  }\n}\n\n// install event listeners (from event annotations)\nfunction applyEventListener(inst, node, nodeInfo) {\n  if (nodeInfo.events && nodeInfo.events.length) {\n    for (let j=0, e$=nodeInfo.events, e; (j<e$.length) && (e=e$[j]); j++) {\n      inst._addMethodEventListenerToNode(node, e.name, e.value, inst);\n    }\n  }\n}\n\n// push configuration references at configure time\nfunction applyTemplateInfo(inst, node, nodeInfo, parentTemplateInfo) {\n  if (nodeInfo.templateInfo) {\n    // Give the node an instance of this templateInfo and set its parent\n    node._templateInfo = nodeInfo.templateInfo;\n    node._parentTemplateInfo = parentTemplateInfo;\n  }\n}\n\nfunction createNodeEventHandler(context, eventName, methodName) {\n  // Instances can optionally have a _methodHost which allows redirecting where\n  // to find methods. Currently used by `templatize`.\n  context = context._methodHost || context;\n  let handler = function(e) {\n    if (context[methodName]) {\n      context[methodName](e, e.detail);\n    } else {\n      console.warn('listener method `' + methodName + '` not defined');\n    }\n  };\n  return handler;\n}\n\n/**\n * Element mixin that provides basic template parsing and stamping, including\n * the following template-related features for stamped templates:\n *\n * - Declarative event listeners (`on-eventname=\"listener\"`)\n * - Map of node id's to stamped node instances (`this.$.id`)\n * - Nested template content caching/removal and re-installation (performance\n *   optimization)\n *\n * @mixinFunction\n * @polymer\n * @summary Element class mixin that provides basic template parsing and stamping\n */\nexport const TemplateStamp = dedupingMixin(\n    /**\n     * @template T\n     * @param {function(new:T)} superClass Class to apply mixin to.\n     * @return {function(new:T)} superClass with mixin applied.\n     */\n    (superClass) => {\n\n  /**\n   * @polymer\n   * @mixinClass\n   * @implements {Polymer_TemplateStamp}\n   */\n  class TemplateStamp extends superClass {\n\n    /**\n     * Scans a template to produce template metadata.\n     *\n     * Template-specific metadata are stored in the object returned, and node-\n     * specific metadata are stored in objects in its flattened `nodeInfoList`\n     * array.  Only nodes in the template that were parsed as nodes of\n     * interest contain an object in `nodeInfoList`.  Each `nodeInfo` object\n     * contains an `index` (`childNodes` index in parent) and optionally\n     * `parent`, which points to node info of its parent (including its index).\n     *\n     * The template metadata object returned from this method has the following\n     * structure (many fields optional):\n     *\n     * ```js\n     *   {\n     *     // Flattened list of node metadata (for nodes that generated metadata)\n     *     nodeInfoList: [\n     *       {\n     *         // `id` attribute for any nodes with id's for generating `$` map\n     *         id: {string},\n     *         // `on-event=\"handler\"` metadata\n     *         events: [\n     *           {\n     *             name: {string},   // event name\n     *             value: {string},  // handler method name\n     *           }, ...\n     *         ],\n     *         // Notes when the template contained a `<slot>` for shady DOM\n     *         // optimization purposes\n     *         hasInsertionPoint: {boolean},\n     *         // For nested `<template>`` nodes, nested template metadata\n     *         templateInfo: {object}, // nested template metadata\n     *         // Metadata to allow efficient retrieval of instanced node\n     *         // corresponding to this metadata\n     *         parentInfo: {number},   // reference to parent nodeInfo>\n     *         parentIndex: {number},  // index in parent's `childNodes` collection\n     *         infoIndex: {number},    // index of this `nodeInfo` in `templateInfo.nodeInfoList`\n     *       },\n     *       ...\n     *     ],\n     *     // When true, the template had the `strip-whitespace` attribute\n     *     // or was nested in a template with that setting\n     *     stripWhitespace: {boolean},\n     *     // For nested templates, nested template content is moved into\n     *     // a document fragment stored here; this is an optimization to\n     *     // avoid the cost of nested template cloning\n     *     content: {DocumentFragment}\n     *   }\n     * ```\n     *\n     * This method kicks off a recursive treewalk as follows:\n     *\n     * ```\n     *    _parseTemplate <---------------------+\n     *      _parseTemplateContent              |\n     *        _parseTemplateNode  <------------|--+\n     *          _parseTemplateNestedTemplate --+  |\n     *          _parseTemplateChildNodes ---------+\n     *          _parseTemplateNodeAttributes\n     *            _parseTemplateNodeAttribute\n     *\n     * ```\n     *\n     * These methods may be overridden to add custom metadata about templates\n     * to either `templateInfo` or `nodeInfo`.\n     *\n     * Note that this method may be destructive to the template, in that\n     * e.g. event annotations may be removed after being noted in the\n     * template metadata.\n     *\n     * @param {!HTMLTemplateElement} template Template to parse\n     * @param {TemplateInfo=} outerTemplateInfo Template metadata from the outer\n     *   template, for parsing nested templates\n     * @return {!TemplateInfo} Parsed template metadata\n     * @nocollapse\n     */\n    static _parseTemplate(template, outerTemplateInfo) {\n      // since a template may be re-used, memo-ize metadata\n      if (!template._templateInfo) {\n        // TODO(rictic): fix typing\n        let /** ? */ templateInfo = template._templateInfo = {};\n        templateInfo.nodeInfoList = [];\n        templateInfo.nestedTemplate = Boolean(outerTemplateInfo);\n        templateInfo.stripWhiteSpace =\n          (outerTemplateInfo && outerTemplateInfo.stripWhiteSpace) ||\n          (template.hasAttribute && template.hasAttribute('strip-whitespace'));\n         // TODO(rictic): fix typing\n         this._parseTemplateContent(\n             template, templateInfo, /** @type {?} */ ({parent: null}));\n      }\n      return template._templateInfo;\n    }\n\n    /**\n     * See docs for _parseTemplateNode.\n     *\n     * @param {!HTMLTemplateElement} template .\n     * @param {!TemplateInfo} templateInfo .\n     * @param {!NodeInfo} nodeInfo .\n     * @return {boolean} .\n     * @nocollapse\n     */\n    static _parseTemplateContent(template, templateInfo, nodeInfo) {\n      return this._parseTemplateNode(template.content, templateInfo, nodeInfo);\n    }\n\n    /**\n     * Parses template node and adds template and node metadata based on\n     * the current node, and its `childNodes` and `attributes`.\n     *\n     * This method may be overridden to add custom node or template specific\n     * metadata based on this node.\n     *\n     * @param {Node} node Node to parse\n     * @param {!TemplateInfo} templateInfo Template metadata for current template\n     * @param {!NodeInfo} nodeInfo Node metadata for current template.\n     * @return {boolean} `true` if the visited node added node-specific\n     *   metadata to `nodeInfo`\n     * @nocollapse\n     */\n    static _parseTemplateNode(node, templateInfo, nodeInfo) {\n      let noted = false;\n      let element = /** @type {!HTMLTemplateElement} */ (node);\n      if (element.localName == 'template' && !element.hasAttribute('preserve-content')) {\n        noted = this._parseTemplateNestedTemplate(element, templateInfo, nodeInfo) || noted;\n      } else if (element.localName === 'slot') {\n        // For ShadyDom optimization, indicating there is an insertion point\n        templateInfo.hasInsertionPoint = true;\n      }\n      fixPlaceholder(element);\n      if (element.firstChild) {\n        this._parseTemplateChildNodes(element, templateInfo, nodeInfo);\n      }\n      if (element.hasAttributes && element.hasAttributes()) {\n        noted = this._parseTemplateNodeAttributes(element, templateInfo, nodeInfo) || noted;\n      }\n      // Checking `nodeInfo.noted` allows a child node of this node (who gets\n      // access to `parentInfo`) to cause the parent to be noted, which\n      // otherwise has no return path via `_parseTemplateChildNodes` (used by\n      // some optimizations)\n      return noted || nodeInfo.noted;\n    }\n\n    /**\n     * Parses template child nodes for the given root node.\n     *\n     * This method also wraps whitelisted legacy template extensions\n     * (`is=\"dom-if\"` and `is=\"dom-repeat\"`) with their equivalent element\n     * wrappers, collapses text nodes, and strips whitespace from the template\n     * if the `templateInfo.stripWhitespace` setting was provided.\n     *\n     * @param {Node} root Root node whose `childNodes` will be parsed\n     * @param {!TemplateInfo} templateInfo Template metadata for current template\n     * @param {!NodeInfo} nodeInfo Node metadata for current template.\n     * @return {void}\n     */\n    static _parseTemplateChildNodes(root, templateInfo, nodeInfo) {\n      if (root.localName === 'script' || root.localName === 'style') {\n        return;\n      }\n      for (let node=root.firstChild, parentIndex=0, next; node; node=next) {\n        // Wrap templates\n        if (node.localName == 'template') {\n          node = wrapTemplateExtension(node);\n        }\n        // collapse adjacent textNodes: fixes an IE issue that can cause\n        // text nodes to be inexplicably split =(\n        // note that root.normalize() should work but does not so we do this\n        // manually.\n        next = node.nextSibling;\n        if (node.nodeType === Node.TEXT_NODE) {\n          let /** Node */ n = next;\n          while (n && (n.nodeType === Node.TEXT_NODE)) {\n            node.textContent += n.textContent;\n            next = n.nextSibling;\n            root.removeChild(n);\n            n = next;\n          }\n          // optionally strip whitespace\n          if (templateInfo.stripWhiteSpace && !node.textContent.trim()) {\n            root.removeChild(node);\n            continue;\n          }\n        }\n        let childInfo =\n            /** @type {!NodeInfo} */ ({parentIndex, parentInfo: nodeInfo});\n        if (this._parseTemplateNode(node, templateInfo, childInfo)) {\n          childInfo.infoIndex = templateInfo.nodeInfoList.push(childInfo) - 1;\n        }\n        // Increment if not removed\n        if (node.parentNode) {\n          parentIndex++;\n        }\n      }\n    }\n\n    /**\n     * Parses template content for the given nested `<template>`.\n     *\n     * Nested template info is stored as `templateInfo` in the current node's\n     * `nodeInfo`. `template.content` is removed and stored in `templateInfo`.\n     * It will then be the responsibility of the host to set it back to the\n     * template and for users stamping nested templates to use the\n     * `_contentForTemplate` method to retrieve the content for this template\n     * (an optimization to avoid the cost of cloning nested template content).\n     *\n     * @param {HTMLTemplateElement} node Node to parse (a <template>)\n     * @param {TemplateInfo} outerTemplateInfo Template metadata for current template\n     *   that includes the template `node`\n     * @param {!NodeInfo} nodeInfo Node metadata for current template.\n     * @return {boolean} `true` if the visited node added node-specific\n     *   metadata to `nodeInfo`\n     * @nocollapse\n     */\n    static _parseTemplateNestedTemplate(node, outerTemplateInfo, nodeInfo) {\n      // TODO(rictic): the type of node should be non-null\n      let element = /** @type {!HTMLTemplateElement} */ (node);\n      let templateInfo = this._parseTemplate(element, outerTemplateInfo);\n      let content = templateInfo.content =\n          element.content.ownerDocument.createDocumentFragment();\n      content.appendChild(element.content);\n      nodeInfo.templateInfo = templateInfo;\n      return true;\n    }\n\n    /**\n     * Parses template node attributes and adds node metadata to `nodeInfo`\n     * for nodes of interest.\n     *\n     * @param {Element} node Node to parse\n     * @param {!TemplateInfo} templateInfo Template metadata for current\n     *     template\n     * @param {!NodeInfo} nodeInfo Node metadata for current template.\n     * @return {boolean} `true` if the visited node added node-specific\n     *   metadata to `nodeInfo`\n     * @nocollapse\n     */\n    static _parseTemplateNodeAttributes(node, templateInfo, nodeInfo) {\n      // Make copy of original attribute list, since the order may change\n      // as attributes are added and removed\n      let noted = false;\n      let attrs = Array.from(node.attributes);\n      for (let i=attrs.length-1, a; (a=attrs[i]); i--) {\n        noted = this._parseTemplateNodeAttribute(node, templateInfo, nodeInfo, a.name, a.value) || noted;\n      }\n      return noted;\n    }\n\n    /**\n     * Parses a single template node attribute and adds node metadata to\n     * `nodeInfo` for attributes of interest.\n     *\n     * This implementation adds metadata for `on-event=\"handler\"` attributes\n     * and `id` attributes.\n     *\n     * @param {Element} node Node to parse\n     * @param {!TemplateInfo} templateInfo Template metadata for current template\n     * @param {!NodeInfo} nodeInfo Node metadata for current template.\n     * @param {string} name Attribute name\n     * @param {string} value Attribute value\n     * @return {boolean} `true` if the visited node added node-specific\n     *   metadata to `nodeInfo`\n     * @nocollapse\n     */\n    static _parseTemplateNodeAttribute(node, templateInfo, nodeInfo, name, value) {\n      // events (on-*)\n      if (name.slice(0, 3) === 'on-') {\n        node.removeAttribute(name);\n        nodeInfo.events = nodeInfo.events || [];\n        nodeInfo.events.push({\n          name: name.slice(3),\n          value\n        });\n        return true;\n      }\n      // static id\n      else if (name === 'id') {\n        nodeInfo.id = value;\n        return true;\n      }\n      return false;\n    }\n\n    /**\n     * Returns the `content` document fragment for a given template.\n     *\n     * For nested templates, Polymer performs an optimization to cache nested\n     * template content to avoid the cost of cloning deeply nested templates.\n     * This method retrieves the cached content for a given template.\n     *\n     * @param {HTMLTemplateElement} template Template to retrieve `content` for\n     * @return {DocumentFragment} Content fragment\n     * @nocollapse\n     */\n    static _contentForTemplate(template) {\n      let templateInfo = /** @type {HTMLTemplateElementWithInfo} */ (template)._templateInfo;\n      return (templateInfo && templateInfo.content) || template.content;\n    }\n\n    /**\n     * Clones the provided template content and returns a document fragment\n     * containing the cloned dom.\n     *\n     * The template is parsed (once and memoized) using this library's\n     * template parsing features, and provides the following value-added\n     * features:\n     * * Adds declarative event listeners for `on-event=\"handler\"` attributes\n     * * Generates an \"id map\" for all nodes with id's under `$` on returned\n     *   document fragment\n     * * Passes template info including `content` back to templates as\n     *   `_templateInfo` (a performance optimization to avoid deep template\n     *   cloning)\n     *\n     * Note that the memoized template parsing process is destructive to the\n     * template: attributes for bindings and declarative event listeners are\n     * removed after being noted in notes, and any nested `<template>.content`\n     * is removed and stored in notes as well.\n     *\n     * @param {!HTMLTemplateElement} template Template to stamp\n     * @param {TemplateInfo=} templateInfo Optional template info associated\n     *   with the template to be stamped; if omitted the template will be\n     *   automatically parsed.\n     * @return {!StampedTemplate} Cloned template content\n     * @override\n     */\n    _stampTemplate(template, templateInfo) {\n      // Polyfill support: bootstrap the template if it has not already been\n      if (template && !template.content &&\n          window.HTMLTemplateElement && HTMLTemplateElement.decorate) {\n        HTMLTemplateElement.decorate(template);\n      }\n      // Accepting the `templateInfo` via an argument allows for creating\n      // instances of the `templateInfo` by the caller, useful for adding\n      // instance-time information to the prototypical data\n      templateInfo = templateInfo || this.constructor._parseTemplate(template);\n      let nodeInfo = templateInfo.nodeInfoList;\n      let content = templateInfo.content || template.content;\n      let dom = /** @type {DocumentFragment} */ (document.importNode(content, true));\n      // NOTE: ShadyDom optimization indicating there is an insertion point\n      dom.__noInsertionPoint = !templateInfo.hasInsertionPoint;\n      let nodes = dom.nodeList = new Array(nodeInfo.length);\n      dom.$ = {};\n      for (let i=0, l=nodeInfo.length, info; (i<l) && (info=nodeInfo[i]); i++) {\n        let node = nodes[i] = findTemplateNode(dom, info);\n        applyIdToMap(this, dom.$, node, info);\n        applyTemplateInfo(this, node, info, templateInfo);\n        applyEventListener(this, node, info);\n      }\n      dom = /** @type {!StampedTemplate} */(dom); // eslint-disable-line no-self-assign\n      return dom;\n    }\n\n    /**\n     * Adds an event listener by method name for the event provided.\n     *\n     * This method generates a handler function that looks up the method\n     * name at handling time.\n     *\n     * @param {!EventTarget} node Node to add listener on\n     * @param {string} eventName Name of event\n     * @param {string} methodName Name of method\n     * @param {*=} context Context the method will be called on (defaults\n     *   to `node`)\n     * @return {Function} Generated handler function\n     * @override\n     */\n    _addMethodEventListenerToNode(node, eventName, methodName, context) {\n      context = context || node;\n      let handler = createNodeEventHandler(context, eventName, methodName);\n      this._addEventListenerToNode(node, eventName, handler);\n      return handler;\n    }\n\n    /**\n     * Override point for adding custom or simulated event handling.\n     *\n     * @param {!EventTarget} node Node to add event listener to\n     * @param {string} eventName Name of event\n     * @param {function(!Event):void} handler Listener function to add\n     * @return {void}\n     * @override\n     */\n    _addEventListenerToNode(node, eventName, handler) {\n      node.addEventListener(eventName, handler);\n    }\n\n    /**\n     * Override point for adding custom or simulated event handling.\n     *\n     * @param {!EventTarget} node Node to remove event listener from\n     * @param {string} eventName Name of event\n     * @param {function(!Event):void} handler Listener function to remove\n     * @return {void}\n     * @override\n     */\n    _removeEventListenerFromNode(node, eventName, handler) {\n      node.removeEventListener(eventName, handler);\n    }\n\n  }\n\n  return TemplateStamp;\n\n});\n","/**\n * @fileoverview\n * @suppress {checkPrototypalTypes}\n * @license Copyright (c) 2017 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at\n * http://polymer.github.io/LICENSE.txt The complete set of authors may be found\n * at http://polymer.github.io/AUTHORS.txt The complete set of contributors may\n * be found at http://polymer.github.io/CONTRIBUTORS.txt Code distributed by\n * Google as part of the polymer project is also subject to an additional IP\n * rights grant found at http://polymer.github.io/PATENTS.txt\n */\n\nimport '../utils/boot.js';\nimport { wrap } from '../utils/wrap.js';\nimport { dedupingMixin } from '../utils/mixin.js';\nimport { root, isAncestor, isDescendant, get, translate, isPath, set, normalize } from '../utils/path.js';\n/* for notify, reflect */\nimport { camelToDashCase, dashToCamelCase } from '../utils/case-map.js';\nimport { PropertyAccessors } from './property-accessors.js';\n/* for annotated effects */\nimport { TemplateStamp } from './template-stamp.js';\nimport { sanitizeDOMValue, legacyUndefined, orderedComputed, removeNestedTemplates, fastDomIf } from '../utils/settings.js';\n\n// Monotonically increasing unique ID used for de-duping effects triggered\n// from multiple properties in the same turn\nlet dedupeId = 0;\n\nconst NOOP = [];\n\n/**\n * Property effect types; effects are stored on the prototype using these keys\n * @enum {string}\n */\nconst TYPES = {\n  COMPUTE: '__computeEffects',\n  REFLECT: '__reflectEffects',\n  NOTIFY: '__notifyEffects',\n  PROPAGATE: '__propagateEffects',\n  OBSERVE: '__observeEffects',\n  READ_ONLY: '__readOnly'\n};\n\nconst COMPUTE_INFO = '__computeInfo';\n\n/** @const {!RegExp} */\nconst capitalAttributeRegex = /[A-Z]/;\n\n/**\n * @typedef {{\n * name: (string | undefined),\n * structured: (boolean | undefined),\n * wildcard: (boolean | undefined)\n * }}\n */\nlet DataTrigger; //eslint-disable-line no-unused-vars\n\n/**\n * @typedef {{\n * info: ?,\n * trigger: (!DataTrigger | undefined),\n * fn: (!Function | undefined)\n * }}\n */\nlet DataEffect; //eslint-disable-line no-unused-vars\n\n/**\n * Ensures that the model has an own-property map of effects for the given type.\n * The model may be a prototype or an instance.\n *\n * Property effects are stored as arrays of effects by property in a map,\n * by named type on the model. e.g.\n *\n *   __computeEffects: {\n *     foo: [ ... ],\n *     bar: [ ... ]\n *   }\n *\n * If the model does not yet have an effect map for the type, one is created\n * and returned.  If it does, but it is not an own property (i.e. the\n * prototype had effects), the the map is deeply cloned and the copy is\n * set on the model and returned, ready for new effects to be added.\n *\n * @param {Object} model Prototype or instance\n * @param {string} type Property effect type\n * @param {boolean=} cloneArrays Clone any arrays assigned to the map when\n *   extending a superclass map onto this subclass\n * @return {Object} The own-property map of effects for the given type\n * @private\n */\nfunction ensureOwnEffectMap(model, type, cloneArrays) {\n  let effects = model[type];\n  if (!effects) {\n    effects = model[type] = {};\n  } else if (!model.hasOwnProperty(type)) {\n    effects = model[type] = Object.create(model[type]);\n    if (cloneArrays) {\n      for (let p in effects) {\n        let protoFx = effects[p];\n        // Perf optimization over Array.slice\n        let instFx = effects[p] = Array(protoFx.length);\n        for (let i=0; i<protoFx.length; i++) {\n          instFx[i] = protoFx[i];\n        }\n      }\n    }\n  }\n  return effects;\n}\n\n// -- effects ----------------------------------------------\n\n/**\n * Runs all effects of a given type for the given set of property changes\n * on an instance.\n *\n * @param {!Polymer_PropertyEffects} inst The instance with effects to run\n * @param {?Object} effects Object map of property-to-Array of effects\n * @param {?Object} props Bag of current property changes\n * @param {?Object=} oldProps Bag of previous values for changed properties\n * @param {boolean=} hasPaths True with `props` contains one or more paths\n * @param {*=} extraArgs Additional metadata to pass to effect function\n * @return {boolean} True if an effect ran for this property\n * @private\n */\nfunction runEffects(inst, effects, props, oldProps, hasPaths, extraArgs) {\n  if (effects) {\n    let ran = false;\n    const id = dedupeId++;\n    for (let prop in props) {\n      // Inline `runEffectsForProperty` for perf.\n      let rootProperty = hasPaths ? root(prop) : prop;\n      let fxs = effects[rootProperty];\n      if (fxs) {\n        for (let i=0, l=fxs.length, fx; (i<l) && (fx=fxs[i]); i++) {\n          if ((!fx.info || fx.info.lastRun !== id) &&\n              (!hasPaths || pathMatchesTrigger(prop, fx.trigger))) {\n            if (fx.info) {\n              fx.info.lastRun = id;\n            }\n            fx.fn(inst, prop, props, oldProps, fx.info, hasPaths, extraArgs);\n            ran = true;\n          }\n        }\n      }\n    }\n    return ran;\n  }\n  return false;\n}\n\n/**\n * Runs a list of effects for a given property.\n *\n * @param {!Polymer_PropertyEffects} inst The instance with effects to run\n * @param {!Object} effects Object map of property-to-Array of effects\n * @param {number} dedupeId Counter used for de-duping effects\n * @param {string} prop Name of changed property\n * @param {*} props Changed properties\n * @param {*} oldProps Old properties\n * @param {boolean=} hasPaths True with `props` contains one or more paths\n * @param {*=} extraArgs Additional metadata to pass to effect function\n * @return {boolean} True if an effect ran for this property\n * @private\n */\nfunction runEffectsForProperty(inst, effects, dedupeId, prop, props, oldProps, hasPaths, extraArgs) {\n  let ran = false;\n  let rootProperty = hasPaths ? root(prop) : prop;\n  let fxs = effects[rootProperty];\n  if (fxs) {\n    for (let i=0, l=fxs.length, fx; (i<l) && (fx=fxs[i]); i++) {\n      if ((!fx.info || fx.info.lastRun !== dedupeId) &&\n          (!hasPaths || pathMatchesTrigger(prop, fx.trigger))) {\n        if (fx.info) {\n          fx.info.lastRun = dedupeId;\n        }\n        fx.fn(inst, prop, props, oldProps, fx.info, hasPaths, extraArgs);\n        ran = true;\n      }\n    }\n  }\n  return ran;\n}\n\n/**\n * Determines whether a property/path that has changed matches the trigger\n * criteria for an effect.  A trigger is a descriptor with the following\n * structure, which matches the descriptors returned from `parseArg`.\n * e.g. for `foo.bar.*`:\n * ```\n * trigger: {\n *   name: 'a.b',\n *   structured: true,\n *   wildcard: true\n * }\n * ```\n * If no trigger is given, the path is deemed to match.\n *\n * @param {string} path Path or property that changed\n * @param {?DataTrigger} trigger Descriptor\n * @return {boolean} Whether the path matched the trigger\n */\nfunction pathMatchesTrigger(path, trigger) {\n  if (trigger) {\n    let triggerPath = /** @type {string} */ (trigger.name);\n    return (triggerPath == path) ||\n        !!(trigger.structured && isAncestor(triggerPath, path)) ||\n        !!(trigger.wildcard && isDescendant(triggerPath, path));\n  } else {\n    return true;\n  }\n}\n\n/**\n * Implements the \"observer\" effect.\n *\n * Calls the method with `info.methodName` on the instance, passing the\n * new and old values.\n *\n * @param {!Polymer_PropertyEffects} inst The instance the effect will be run on\n * @param {string} property Name of property\n * @param {Object} props Bag of current property changes\n * @param {Object} oldProps Bag of previous values for changed properties\n * @param {?} info Effect metadata\n * @return {void}\n * @private\n */\nfunction runObserverEffect(inst, property, props, oldProps, info) {\n  let fn = typeof info.method === \"string\" ? inst[info.method] : info.method;\n  let changedProp = info.property;\n  if (fn) {\n    fn.call(inst, inst.__data[changedProp], oldProps[changedProp]);\n  } else if (!info.dynamicFn) {\n    console.warn('observer method `' + info.method + '` not defined');\n  }\n}\n\n/**\n * Runs \"notify\" effects for a set of changed properties.\n *\n * This method differs from the generic `runEffects` method in that it\n * will dispatch path notification events in the case that the property\n * changed was a path and the root property for that path didn't have a\n * \"notify\" effect.  This is to maintain 1.0 behavior that did not require\n * `notify: true` to ensure object sub-property notifications were\n * sent.\n *\n * @param {!Polymer_PropertyEffects} inst The instance with effects to run\n * @param {Object} notifyProps Bag of properties to notify\n * @param {Object} props Bag of current property changes\n * @param {Object} oldProps Bag of previous values for changed properties\n * @param {boolean} hasPaths True with `props` contains one or more paths\n * @return {void}\n * @private\n */\nfunction runNotifyEffects(inst, notifyProps, props, oldProps, hasPaths) {\n  // Notify\n  let fxs = inst[TYPES.NOTIFY];\n  let notified;\n  let id = dedupeId++;\n  // Try normal notify effects; if none, fall back to try path notification\n  for (let prop in notifyProps) {\n    if (notifyProps[prop]) {\n      if (fxs && runEffectsForProperty(inst, fxs, id, prop, props, oldProps, hasPaths)) {\n        notified = true;\n      } else if (hasPaths && notifyPath(inst, prop, props)) {\n        notified = true;\n      }\n    }\n  }\n  // Flush host if we actually notified and host was batching\n  // And the host has already initialized clients; this prevents\n  // an issue with a host observing data changes before clients are ready.\n  let host;\n  if (notified && (host = inst.__dataHost) && host._invalidateProperties) {\n    host._invalidateProperties();\n  }\n}\n\n/**\n * Dispatches {property}-changed events with path information in the detail\n * object to indicate a sub-path of the property was changed.\n *\n * @param {!Polymer_PropertyEffects} inst The element from which to fire the\n *     event\n * @param {string} path The path that was changed\n * @param {Object} props Bag of current property changes\n * @return {boolean} Returns true if the path was notified\n * @private\n */\nfunction notifyPath(inst, path, props) {\n  let rootProperty = root(path);\n  if (rootProperty !== path) {\n    let eventName = camelToDashCase(rootProperty) + '-changed';\n    dispatchNotifyEvent(inst, eventName, props[path], path);\n    return true;\n  }\n  return false;\n}\n\n/**\n * Dispatches {property}-changed events to indicate a property (or path)\n * changed.\n *\n * @param {!Polymer_PropertyEffects} inst The element from which to fire the\n *     event\n * @param {string} eventName The name of the event to send\n *     ('{property}-changed')\n * @param {*} value The value of the changed property\n * @param {string | null | undefined} path If a sub-path of this property\n *     changed, the path that changed (optional).\n * @return {void}\n * @private\n * @suppress {invalidCasts}\n */\nfunction dispatchNotifyEvent(inst, eventName, value, path) {\n  let detail = {\n    value: value,\n    queueProperty: true\n  };\n  if (path) {\n    detail.path = path;\n  }\n  // As a performance optimization, we could elide the wrap here since notifying\n  // events are non-bubbling and shouldn't need retargeting. However, a very\n  // small number of internal tests failed in obscure ways, which may indicate\n  // user code relied on timing differences resulting from ShadyDOM flushing\n  // as a result of the wrapped `dispatchEvent`.\n  wrap(/** @type {!HTMLElement} */(inst)).dispatchEvent(new CustomEvent(eventName, { detail }));\n}\n\n/**\n * Implements the \"notify\" effect.\n *\n * Dispatches a non-bubbling event named `info.eventName` on the instance\n * with a detail object containing the new `value`.\n *\n * @param {!Polymer_PropertyEffects} inst The instance the effect will be run on\n * @param {string} property Name of property\n * @param {Object} props Bag of current property changes\n * @param {Object} oldProps Bag of previous values for changed properties\n * @param {?} info Effect metadata\n * @param {boolean} hasPaths True with `props` contains one or more paths\n * @return {void}\n * @private\n */\nfunction runNotifyEffect(inst, property, props, oldProps, info, hasPaths) {\n  let rootProperty = hasPaths ? root(property) : property;\n  let path = rootProperty != property ? property : null;\n  let value = path ? get(inst, path) : inst.__data[property];\n  if (path && value === undefined) {\n    value = props[property];  // specifically for .splices\n  }\n  dispatchNotifyEvent(inst, info.eventName, value, path);\n}\n\n/**\n * Handler function for 2-way notification events. Receives context\n * information captured in the `addNotifyListener` closure from the\n * `__notifyListeners` metadata.\n *\n * Sets the value of the notified property to the host property or path.  If\n * the event contained path information, translate that path to the host\n * scope's name for that path first.\n *\n * @param {CustomEvent} event Notification event (e.g. '<property>-changed')\n * @param {!Polymer_PropertyEffects} inst Host element instance handling the\n *     notification event\n * @param {string} fromProp Child element property that was bound\n * @param {string} toPath Host property/path that was bound\n * @param {boolean} negate Whether the binding was negated\n * @return {void}\n * @private\n */\nfunction handleNotification(event, inst, fromProp, toPath, negate) {\n  let value;\n  let detail = /** @type {Object} */(event.detail);\n  let fromPath = detail && detail.path;\n  if (fromPath) {\n    toPath = translate(fromProp, toPath, fromPath);\n    value = detail && detail.value;\n  } else {\n    value = event.currentTarget[fromProp];\n  }\n  value = negate ? !value : value;\n  if (!inst[TYPES.READ_ONLY] || !inst[TYPES.READ_ONLY][toPath]) {\n    if (inst._setPendingPropertyOrPath(toPath, value, true, Boolean(fromPath))\n      && (!detail || !detail.queueProperty)) {\n      inst._invalidateProperties();\n    }\n  }\n}\n\n/**\n * Implements the \"reflect\" effect.\n *\n * Sets the attribute named `info.attrName` to the given property value.\n *\n * @param {!Polymer_PropertyEffects} inst The instance the effect will be run on\n * @param {string} property Name of property\n * @param {Object} props Bag of current property changes\n * @param {Object} oldProps Bag of previous values for changed properties\n * @param {?} info Effect metadata\n * @return {void}\n * @private\n */\nfunction runReflectEffect(inst, property, props, oldProps, info) {\n  let value = inst.__data[property];\n  if (sanitizeDOMValue) {\n    value = sanitizeDOMValue(value, info.attrName, 'attribute', /** @type {Node} */(inst));\n  }\n  inst._propertyToAttribute(property, info.attrName, value);\n}\n\n/**\n * Runs \"computed\" effects for a set of changed properties.\n *\n * This method differs from the generic `runEffects` method in that it\n * continues to run computed effects based on the output of each pass until\n * there are no more newly computed properties.  This ensures that all\n * properties that will be computed by the initial set of changes are\n * computed before other effects (binding propagation, observers, and notify)\n * run.\n *\n * @param {!Polymer_PropertyEffects} inst The instance the effect will be run on\n * @param {?Object} changedProps Bag of changed properties\n * @param {?Object} oldProps Bag of previous values for changed properties\n * @param {boolean} hasPaths True with `props` contains one or more paths\n * @return {void}\n * @private\n */\nfunction runComputedEffects(inst, changedProps, oldProps, hasPaths) {\n  let computeEffects = inst[TYPES.COMPUTE];\n  if (computeEffects) {\n    if (orderedComputed) {\n      // Runs computed effects in efficient order by keeping a topologically-\n      // sorted queue of compute effects to run, and inserting subsequently\n      // invalidated effects as they are run\n      dedupeId++;\n      const order = getComputedOrder(inst);\n      const queue = [];\n      for (let p in changedProps) {\n        enqueueEffectsFor(p, computeEffects, queue, order, hasPaths);\n      }\n      let info;\n      while ((info = queue.shift())) {\n        if (runComputedEffect(inst, '', changedProps, oldProps, info)) {\n          enqueueEffectsFor(info.methodInfo, computeEffects, queue, order, hasPaths);\n        }\n      }\n      Object.assign(/** @type {!Object} */ (oldProps), inst.__dataOld);\n      Object.assign(/** @type {!Object} */ (changedProps), inst.__dataPending);\n      inst.__dataPending = null;\n    } else {\n      // Original Polymer 2.x computed effects order, which continues running\n      // effects until no further computed properties have been invalidated\n      let inputProps = changedProps;\n      while (runEffects(inst, computeEffects, inputProps, oldProps, hasPaths)) {\n        Object.assign(/** @type {!Object} */ (oldProps), inst.__dataOld);\n        Object.assign(/** @type {!Object} */ (changedProps), inst.__dataPending);\n        inputProps = inst.__dataPending;\n        inst.__dataPending = null;\n      }\n    }\n  }\n}\n\n/**\n * Inserts a computed effect into a queue, given the specified order. Performs\n * the insert using a binary search.\n *\n * Used by `orderedComputed: true` computed property algorithm.\n *\n * @param {Object} info Property effects metadata\n * @param {Array<Object>} queue Ordered queue of effects\n * @param {Map<string,number>} order Map of computed property name->topological\n *   sort order\n */\nconst insertEffect = (info, queue, order) => {\n  let start = 0;\n  let end = queue.length - 1;\n  let idx = -1;\n  while (start <= end) {\n    const mid = (start + end) >> 1;\n    // Note `methodInfo` is where the computed property name is stored in\n    // the effect metadata\n    const cmp = order.get(queue[mid].methodInfo) - order.get(info.methodInfo);\n    if (cmp < 0) {\n      start = mid + 1;\n    } else if (cmp > 0) {\n      end = mid - 1;\n    } else {\n      idx = mid;\n      break;\n    }\n  }\n  if (idx < 0) {\n    idx = end + 1;\n  }\n  queue.splice(idx, 0, info);\n};\n\n/**\n * Inserts all downstream computed effects invalidated by the specified property\n * into the topologically-sorted queue of effects to be run.\n *\n * Used by `orderedComputed: true` computed property algorithm.\n *\n * @param {string} prop Property name\n * @param {Object} computeEffects Computed effects for this element\n * @param {Array<Object>} queue Topologically-sorted queue of computed effects\n *   to be run\n * @param {Map<string,number>} order Map of computed property name->topological\n *   sort order\n * @param {boolean} hasPaths True with `changedProps` contains one or more paths\n */\nconst enqueueEffectsFor = (prop, computeEffects, queue, order, hasPaths) => {\n  const rootProperty = hasPaths ? root(prop) : prop;\n  const fxs = computeEffects[rootProperty];\n  if (fxs) {\n    for (let i=0; i<fxs.length; i++) {\n      const fx = fxs[i];\n      if ((fx.info.lastRun !== dedupeId) &&\n          (!hasPaths || pathMatchesTrigger(prop, fx.trigger))) {\n        fx.info.lastRun = dedupeId;\n        insertEffect(fx.info, queue, order);\n      }\n    }\n  }\n};\n\n/**\n * Generates and retrieves a memoized map of computed property name to its\n * topologically-sorted order.\n *\n * The map is generated by first assigning a \"dependency count\" to each property\n * (defined as number properties it depends on, including its method for\n * \"dynamic functions\"). Any properties that have no dependencies are added to\n * the `ready` queue, which are properties whose order can be added to the final\n * order map. Properties are popped off the `ready` queue one by one and a.) added as\n * the next property in the order map, and b.) each property that it is a\n * dependency for has its dep count decremented (and if that property's dep\n * count goes to zero, it is added to the `ready` queue), until all properties\n * have been visited and ordered.\n *\n * Used by `orderedComputed: true` computed property algorithm.\n *\n * @param {!Polymer_PropertyEffects} inst The instance to retrieve the computed\n *   effect order for.\n * @return {Map<string,number>} Map of computed property name->topological sort\n *   order\n */\nfunction getComputedOrder(inst) {\n  let ordered = inst.constructor.__orderedComputedDeps;\n  if (!ordered) {\n    ordered = new Map();\n    const effects = inst[TYPES.COMPUTE];\n    let {counts, ready, total} = dependencyCounts(inst);\n    let curr;\n    while ((curr = ready.shift())) {\n      ordered.set(curr, ordered.size);\n      const computedByCurr = effects[curr];\n      if (computedByCurr) {\n        computedByCurr.forEach(fx => {\n          // Note `methodInfo` is where the computed property name is stored\n          const computedProp = fx.info.methodInfo;\n          --total;\n          if (--counts[computedProp] === 0) {\n            ready.push(computedProp);\n          }\n        });\n      }\n    }\n    if (total !== 0) {\n      const el = /** @type {HTMLElement} */ (inst);\n      console.warn(`Computed graph for ${el.localName} incomplete; circular?`);\n    }\n    inst.constructor.__orderedComputedDeps = ordered;\n  }\n  return ordered;\n}\n\n/**\n * Generates a map of property-to-dependency count (`counts`, where \"dependency\n * count\" is the number of dependencies a given property has assuming it is a\n * computed property, otherwise 0).  It also returns a pre-populated list of\n * `ready` properties that have no dependencies and a `total` count, which is\n * used for error-checking the graph.\n *\n * Used by `orderedComputed: true` computed property algorithm.\n *\n * @param {!Polymer_PropertyEffects} inst The instance to generate dependency\n *   counts for.\n * @return {!Object} Object containing `counts` map (property-to-dependency\n *   count) and pre-populated `ready` array of properties that had zero\n *   dependencies.\n */\nfunction dependencyCounts(inst) {\n  const infoForComputed = inst[COMPUTE_INFO];\n  const counts = {};\n  const computedDeps = inst[TYPES.COMPUTE];\n  const ready = [];\n  let total = 0;\n  // Count dependencies for each computed property\n  for (let p in infoForComputed) {\n    const info = infoForComputed[p];\n    // Be sure to add the method name itself in case of \"dynamic functions\"\n    total += counts[p] =\n      info.args.filter(a => !a.literal).length + (info.dynamicFn ? 1 : 0);\n  }\n  // Build list of ready properties (that aren't themselves computed)\n  for (let p in computedDeps) {\n    if (!infoForComputed[p]) {\n      ready.push(p);\n    }\n  }\n  return {counts, ready, total};\n}\n\n/**\n * Implements the \"computed property\" effect by running the method with the\n * values of the arguments specified in the `info` object and setting the\n * return value to the computed property specified.\n *\n * @param {!Polymer_PropertyEffects} inst The instance the effect will be run on\n * @param {string} property Name of property\n * @param {?Object} changedProps Bag of current property changes\n * @param {?Object} oldProps Bag of previous values for changed properties\n * @param {?} info Effect metadata\n * @return {boolean} True when the property being computed changed\n * @private\n */\nfunction runComputedEffect(inst, property, changedProps, oldProps, info) {\n  // Dirty check dependencies and run if any invalid\n  let result = runMethodEffect(inst, property, changedProps, oldProps, info);\n  // Abort if method returns a no-op result\n  if (result === NOOP) {\n    return false;\n  }\n  let computedProp = info.methodInfo;\n  if (inst.__dataHasAccessor && inst.__dataHasAccessor[computedProp]) {\n    return inst._setPendingProperty(computedProp, result, true);\n  } else {\n    inst[computedProp] = result;\n    return false;\n  }\n}\n\n/**\n * Computes path changes based on path links set up using the `linkPaths`\n * API.\n *\n * @param {!Polymer_PropertyEffects} inst The instance whose props are changing\n * @param {string} path Path that has changed\n * @param {*} value Value of changed path\n * @return {void}\n * @private\n */\nfunction computeLinkedPaths(inst, path, value) {\n  let links = inst.__dataLinkedPaths;\n  if (links) {\n    let link;\n    for (let a in links) {\n      let b = links[a];\n      if (isDescendant(a, path)) {\n        link = translate(a, b, path);\n        inst._setPendingPropertyOrPath(link, value, true, true);\n      } else if (isDescendant(b, path)) {\n        link = translate(b, a, path);\n        inst._setPendingPropertyOrPath(link, value, true, true);\n      }\n    }\n  }\n}\n\n// -- bindings ----------------------------------------------\n\n/**\n * Adds binding metadata to the current `nodeInfo`, and binding effects\n * for all part dependencies to `templateInfo`.\n *\n * @param {Function} constructor Class that `_parseTemplate` is currently\n *   running on\n * @param {TemplateInfo} templateInfo Template metadata for current template\n * @param {NodeInfo} nodeInfo Node metadata for current template node\n * @param {string} kind Binding kind, either 'property', 'attribute', or 'text'\n * @param {string} target Target property name\n * @param {!Array<!BindingPart>} parts Array of binding part metadata\n * @param {string=} literal Literal text surrounding binding parts (specified\n *   only for 'property' bindings, since these must be initialized as part\n *   of boot-up)\n * @return {void}\n * @private\n */\nfunction addBinding(constructor, templateInfo, nodeInfo, kind, target, parts, literal) {\n  // Create binding metadata and add to nodeInfo\n  nodeInfo.bindings = nodeInfo.bindings || [];\n  let /** Binding */ binding = { kind, target, parts, literal, isCompound: (parts.length !== 1) };\n  nodeInfo.bindings.push(binding);\n  // Add listener info to binding metadata\n  if (shouldAddListener(binding)) {\n    let {event, negate} = binding.parts[0];\n    binding.listenerEvent = event || (camelToDashCase(target) + '-changed');\n    binding.listenerNegate = negate;\n  }\n  // Add \"propagate\" property effects to templateInfo\n  let index = templateInfo.nodeInfoList.length;\n  for (let i=0; i<binding.parts.length; i++) {\n    let part = binding.parts[i];\n    part.compoundIndex = i;\n    addEffectForBindingPart(constructor, templateInfo, binding, part, index);\n  }\n}\n\n/**\n * Adds property effects to the given `templateInfo` for the given binding\n * part.\n *\n * @param {Function} constructor Class that `_parseTemplate` is currently\n *   running on\n * @param {TemplateInfo} templateInfo Template metadata for current template\n * @param {!Binding} binding Binding metadata\n * @param {!BindingPart} part Binding part metadata\n * @param {number} index Index into `nodeInfoList` for this node\n * @return {void}\n */\nfunction addEffectForBindingPart(constructor, templateInfo, binding, part, index) {\n  if (!part.literal) {\n    if (binding.kind === 'attribute' && binding.target[0] === '-') {\n      console.warn('Cannot set attribute ' + binding.target +\n        ' because \"-\" is not a valid attribute starting character');\n    } else {\n      let dependencies = part.dependencies;\n      let info = { index, binding, part, evaluator: constructor };\n      for (let j=0; j<dependencies.length; j++) {\n        let trigger = dependencies[j];\n        if (typeof trigger == 'string') {\n          trigger = parseArg(trigger);\n          trigger.wildcard = true;\n        }\n        constructor._addTemplatePropertyEffect(templateInfo, trigger.rootProperty, {\n          fn: runBindingEffect,\n          info, trigger\n        });\n      }\n    }\n  }\n}\n\n/**\n * Implements the \"binding\" (property/path binding) effect.\n *\n * Note that binding syntax is overridable via `_parseBindings` and\n * `_evaluateBinding`.  This method will call `_evaluateBinding` for any\n * non-literal parts returned from `_parseBindings`.  However,\n * there is no support for _path_ bindings via custom binding parts,\n * as this is specific to Polymer's path binding syntax.\n *\n * @param {!Polymer_PropertyEffects} inst The instance the effect will be run on\n * @param {string} path Name of property\n * @param {Object} props Bag of current property changes\n * @param {Object} oldProps Bag of previous values for changed properties\n * @param {?} info Effect metadata\n * @param {boolean} hasPaths True with `props` contains one or more paths\n * @param {Array} nodeList List of nodes associated with `nodeInfoList` template\n *   metadata\n * @return {void}\n * @private\n */\nfunction runBindingEffect(inst, path, props, oldProps, info, hasPaths, nodeList) {\n  let node = nodeList[info.index];\n  let binding = info.binding;\n  let part = info.part;\n  // Subpath notification: transform path and set to client\n  // e.g.: foo=\"{{obj.sub}}\", path: 'obj.sub.prop', set 'foo.prop'=obj.sub.prop\n  if (hasPaths && part.source && (path.length > part.source.length) &&\n      (binding.kind == 'property') && !binding.isCompound &&\n      node.__isPropertyEffectsClient &&\n      node.__dataHasAccessor && node.__dataHasAccessor[binding.target]) {\n    let value = props[path];\n    path = translate(part.source, binding.target, path);\n    if (node._setPendingPropertyOrPath(path, value, false, true)) {\n      inst._enqueueClient(node);\n    }\n  } else {\n    let value = info.evaluator._evaluateBinding(inst, part, path, props, oldProps, hasPaths);\n    // Propagate value to child\n    // Abort if value is a no-op result\n    if (value !== NOOP) {\n      applyBindingValue(inst, node, binding, part, value);\n    }\n  }\n}\n\n/**\n * Sets the value for an \"binding\" (binding) effect to a node,\n * either as a property or attribute.\n *\n * @param {!Polymer_PropertyEffects} inst The instance owning the binding effect\n * @param {Node} node Target node for binding\n * @param {!Binding} binding Binding metadata\n * @param {!BindingPart} part Binding part metadata\n * @param {*} value Value to set\n * @return {void}\n * @private\n */\nfunction applyBindingValue(inst, node, binding, part, value) {\n  value = computeBindingValue(node, value, binding, part);\n  if (sanitizeDOMValue) {\n    value = sanitizeDOMValue(value, binding.target, binding.kind, node);\n  }\n  if (binding.kind == 'attribute') {\n    // Attribute binding\n    inst._valueToNodeAttribute(/** @type {Element} */(node), value, binding.target);\n  } else {\n    // Property binding\n    let prop = binding.target;\n    if (node.__isPropertyEffectsClient &&\n        node.__dataHasAccessor && node.__dataHasAccessor[prop]) {\n      if (!node[TYPES.READ_ONLY] || !node[TYPES.READ_ONLY][prop]) {\n        if (node._setPendingProperty(prop, value)) {\n          inst._enqueueClient(node);\n        }\n      }\n    } else {\n      // In legacy no-batching mode, bindings applied before dataReady are\n      // equivalent to the \"apply config\" phase, which only set managed props\n      inst._setUnmanagedPropertyToNode(node, prop, value);\n    }\n  }\n}\n\n/**\n * Transforms an \"binding\" effect value based on compound & negation\n * effect metadata, as well as handling for special-case properties\n *\n * @param {Node} node Node the value will be set to\n * @param {*} value Value to set\n * @param {!Binding} binding Binding metadata\n * @param {!BindingPart} part Binding part metadata\n * @return {*} Transformed value to set\n * @private\n */\nfunction computeBindingValue(node, value, binding, part) {\n  if (binding.isCompound) {\n    let storage = node.__dataCompoundStorage[binding.target];\n    storage[part.compoundIndex] = value;\n    value = storage.join('');\n  }\n  if (binding.kind !== 'attribute') {\n    // Some browsers serialize `undefined` to `\"undefined\"`\n    if (binding.target === 'textContent' ||\n        (binding.target === 'value' &&\n          (node.localName === 'input' || node.localName === 'textarea'))) {\n      value = value == undefined ? '' : value;\n    }\n  }\n  return value;\n}\n\n/**\n * Returns true if a binding's metadata meets all the requirements to allow\n * 2-way binding, and therefore a `<property>-changed` event listener should be\n * added:\n * - used curly braces\n * - is a property (not attribute) binding\n * - is not a textContent binding\n * - is not compound\n *\n * @param {!Binding} binding Binding metadata\n * @return {boolean} True if 2-way listener should be added\n * @private\n */\nfunction shouldAddListener(binding) {\n  return Boolean(binding.target) &&\n         binding.kind != 'attribute' &&\n         binding.kind != 'text' &&\n         !binding.isCompound &&\n         binding.parts[0].mode === '{';\n}\n\n/**\n * Setup compound binding storage structures, notify listeners, and dataHost\n * references onto the bound nodeList.\n *\n * @param {!Polymer_PropertyEffects} inst Instance that bas been previously\n *     bound\n * @param {TemplateInfo} templateInfo Template metadata\n * @return {void}\n * @private\n */\nfunction setupBindings(inst, templateInfo) {\n  // Setup compound storage, dataHost, and notify listeners\n  let {nodeList, nodeInfoList} = templateInfo;\n  if (nodeInfoList.length) {\n    for (let i=0; i < nodeInfoList.length; i++) {\n      let info = nodeInfoList[i];\n      let node = nodeList[i];\n      let bindings = info.bindings;\n      if (bindings) {\n        for (let i=0; i<bindings.length; i++) {\n          let binding = bindings[i];\n          setupCompoundStorage(node, binding);\n          addNotifyListener(node, inst, binding);\n        }\n      }\n      // This ensures all bound elements have a host set, regardless\n      // of whether they upgrade synchronous to creation\n      node.__dataHost = inst;\n    }\n  }\n}\n\n/**\n * Initializes `__dataCompoundStorage` local storage on a bound node with\n * initial literal data for compound bindings, and sets the joined\n * literal parts to the bound property.\n *\n * When changes to compound parts occur, they are first set into the compound\n * storage array for that property, and then the array is joined to result in\n * the final value set to the property/attribute.\n *\n * @param {Node} node Bound node to initialize\n * @param {Binding} binding Binding metadata\n * @return {void}\n * @private\n */\nfunction setupCompoundStorage(node, binding) {\n  if (binding.isCompound) {\n    // Create compound storage map\n    let storage = node.__dataCompoundStorage ||\n      (node.__dataCompoundStorage = {});\n    let parts = binding.parts;\n    // Copy literals from parts into storage for this binding\n    let literals = new Array(parts.length);\n    for (let j=0; j<parts.length; j++) {\n      literals[j] = parts[j].literal;\n    }\n    let target = binding.target;\n    storage[target] = literals;\n    // Configure properties with their literal parts\n    if (binding.literal && binding.kind == 'property') {\n      // Note, className needs style scoping so this needs wrapping.\n      // We may also want to consider doing this for `textContent` and\n      // `innerHTML`.\n      if (target === 'className') {\n        node = wrap(node);\n      }\n      node[target] = binding.literal;\n    }\n  }\n}\n\n/**\n * Adds a 2-way binding notification event listener to the node specified\n *\n * @param {Object} node Child element to add listener to\n * @param {!Polymer_PropertyEffects} inst Host element instance to handle\n *     notification event\n * @param {Binding} binding Binding metadata\n * @return {void}\n * @private\n */\nfunction addNotifyListener(node, inst, binding) {\n  if (binding.listenerEvent) {\n    let part = binding.parts[0];\n    node.addEventListener(binding.listenerEvent, function(e) {\n      handleNotification(e, inst, binding.target, part.source, part.negate);\n    });\n  }\n}\n\n// -- for method-based effects (complexObserver & computed) --------------\n\n/**\n * Adds property effects for each argument in the method signature (and\n * optionally, for the method name if `dynamic` is true) that calls the\n * provided effect function.\n *\n * @param {Element | Object} model Prototype or instance\n * @param {!MethodSignature} sig Method signature metadata\n * @param {string} type Type of property effect to add\n * @param {Function} effectFn Function to run when arguments change\n * @param {*=} methodInfo Effect-specific information to be included in\n *   method effect metadata\n * @param {boolean|Object=} dynamicFn Boolean or object map indicating whether\n *   method names should be included as a dependency to the effect. Note,\n *   defaults to true if the signature is static (sig.static is true).\n * @return {!Object} Effect metadata for this method effect\n * @private\n */\nfunction createMethodEffect(model, sig, type, effectFn, methodInfo, dynamicFn) {\n  dynamicFn = sig.static || (dynamicFn &&\n    (typeof dynamicFn !== 'object' || dynamicFn[sig.methodName]));\n  let info = {\n    methodName: sig.methodName,\n    args: sig.args,\n    methodInfo,\n    dynamicFn\n  };\n  for (let i=0, arg; (i<sig.args.length) && (arg=sig.args[i]); i++) {\n    if (!arg.literal) {\n      model._addPropertyEffect(arg.rootProperty, type, {\n        fn: effectFn, info: info, trigger: arg\n      });\n    }\n  }\n  if (dynamicFn) {\n    model._addPropertyEffect(sig.methodName, type, {\n      fn: effectFn, info: info\n    });\n  }\n  return info;\n}\n\n/**\n * Calls a method with arguments marshaled from properties on the instance\n * based on the method signature contained in the effect metadata.\n *\n * Multi-property observers, computed properties, and inline computing\n * functions call this function to invoke the method, then use the return\n * value accordingly.\n *\n * @param {!Polymer_PropertyEffects} inst The instance the effect will be run on\n * @param {string} property Name of property\n * @param {Object} props Bag of current property changes\n * @param {Object} oldProps Bag of previous values for changed properties\n * @param {?} info Effect metadata\n * @return {*} Returns the return value from the method invocation\n * @private\n */\nfunction runMethodEffect(inst, property, props, oldProps, info) {\n  // Instances can optionally have a _methodHost which allows redirecting where\n  // to find methods. Currently used by `templatize`.\n  let context = inst._methodHost || inst;\n  let fn = context[info.methodName];\n  if (fn) {\n    let args = inst._marshalArgs(info.args, property, props);\n    return args === NOOP ? NOOP : fn.apply(context, args);\n  } else if (!info.dynamicFn) {\n    console.warn('method `' + info.methodName + '` not defined');\n  }\n}\n\nconst emptyArray = [];\n\n// Regular expressions used for binding\nconst IDENT  = '(?:' + '[a-zA-Z_$][\\\\w.:$\\\\-*]*' + ')';\nconst NUMBER = '(?:' + '[-+]?[0-9]*\\\\.?[0-9]+(?:[eE][-+]?[0-9]+)?' + ')';\nconst SQUOTE_STRING = '(?:' + '\\'(?:[^\\'\\\\\\\\]|\\\\\\\\.)*\\'' + ')';\nconst DQUOTE_STRING = '(?:' + '\"(?:[^\"\\\\\\\\]|\\\\\\\\.)*\"' + ')';\nconst STRING = '(?:' + SQUOTE_STRING + '|' + DQUOTE_STRING + ')';\nconst ARGUMENT = '(?:(' + IDENT + '|' + NUMBER + '|' +  STRING + ')\\\\s*' + ')';\nconst ARGUMENTS = '(?:' + ARGUMENT + '(?:,\\\\s*' + ARGUMENT + ')*' + ')';\nconst ARGUMENT_LIST = '(?:' + '\\\\(\\\\s*' +\n                              '(?:' + ARGUMENTS + '?' + ')' +\n                            '\\\\)\\\\s*' + ')';\nconst BINDING = '(' + IDENT + '\\\\s*' + ARGUMENT_LIST + '?' + ')'; // Group 3\nconst OPEN_BRACKET = '(\\\\[\\\\[|{{)' + '\\\\s*';\nconst CLOSE_BRACKET = '(?:]]|}})';\nconst NEGATE = '(?:(!)\\\\s*)?'; // Group 2\nconst EXPRESSION = OPEN_BRACKET + NEGATE + BINDING + CLOSE_BRACKET;\nconst bindingRegex = new RegExp(EXPRESSION, \"g\");\n\n/**\n * Create a string from binding parts of all the literal parts\n *\n * @param {!Array<BindingPart>} parts All parts to stringify\n * @return {string} String made from the literal parts\n */\nfunction literalFromParts(parts) {\n  let s = '';\n  for (let i=0; i<parts.length; i++) {\n    let literal = parts[i].literal;\n    s += literal || '';\n  }\n  return s;\n}\n\n/**\n * Parses an expression string for a method signature, and returns a metadata\n * describing the method in terms of `methodName`, `static` (whether all the\n * arguments are literals), and an array of `args`\n *\n * @param {string} expression The expression to parse\n * @return {?MethodSignature} The method metadata object if a method expression was\n *   found, otherwise `undefined`\n * @private\n */\nfunction parseMethod(expression) {\n  // tries to match valid javascript property names\n  let m = expression.match(/([^\\s]+?)\\(([\\s\\S]*)\\)/);\n  if (m) {\n    let methodName = m[1];\n    let sig = { methodName, static: true, args: emptyArray };\n    if (m[2].trim()) {\n      // replace escaped commas with comma entity, split on un-escaped commas\n      let args = m[2].replace(/\\\\,/g, '&comma;').split(',');\n      return parseArgs(args, sig);\n    } else {\n      return sig;\n    }\n  }\n  return null;\n}\n\n/**\n * Parses an array of arguments and sets the `args` property of the supplied\n * signature metadata object. Sets the `static` property to false if any\n * argument is a non-literal.\n *\n * @param {!Array<string>} argList Array of argument names\n * @param {!MethodSignature} sig Method signature metadata object\n * @return {!MethodSignature} The updated signature metadata object\n * @private\n */\nfunction parseArgs(argList, sig) {\n  sig.args = argList.map(function(rawArg) {\n    let arg = parseArg(rawArg);\n    if (!arg.literal) {\n      sig.static = false;\n    }\n    return arg;\n  }, this);\n  return sig;\n}\n\n/**\n * Parses an individual argument, and returns an argument metadata object\n * with the following fields:\n *\n *   {\n *     value: 'prop',        // property/path or literal value\n *     literal: false,       // whether argument is a literal\n *     structured: false,    // whether the property is a path\n *     rootProperty: 'prop', // the root property of the path\n *     wildcard: false       // whether the argument was a wildcard '.*' path\n *   }\n *\n * @param {string} rawArg The string value of the argument\n * @return {!MethodArg} Argument metadata object\n * @private\n */\nfunction parseArg(rawArg) {\n  // clean up whitespace\n  let arg = rawArg.trim()\n    // replace comma entity with comma\n    .replace(/&comma;/g, ',')\n    // repair extra escape sequences; note only commas strictly need\n    // escaping, but we allow any other char to be escaped since its\n    // likely users will do this\n    .replace(/\\\\(.)/g, '$1')\n    ;\n  // basic argument descriptor\n  let a = {\n    name: arg,\n    value: '',\n    literal: false\n  };\n  // detect literal value (must be String or Number)\n  let fc = arg[0];\n  if (fc === '-') {\n    fc = arg[1];\n  }\n  if (fc >= '0' && fc <= '9') {\n    fc = '#';\n  }\n  switch(fc) {\n    case \"'\":\n    case '\"':\n      a.value = arg.slice(1, -1);\n      a.literal = true;\n      break;\n    case '#':\n      a.value = Number(arg);\n      a.literal = true;\n      break;\n  }\n  // if not literal, look for structured path\n  if (!a.literal) {\n    a.rootProperty = root(arg);\n    // detect structured path (has dots)\n    a.structured = isPath(arg);\n    if (a.structured) {\n      a.wildcard = (arg.slice(-2) == '.*');\n      if (a.wildcard) {\n        a.name = arg.slice(0, -2);\n      }\n    }\n  }\n  return a;\n}\n\nfunction getArgValue(data, props, path) {\n  let value = get(data, path);\n  // when data is not stored e.g. `splices`, get the value from changedProps\n  // TODO(kschaaf): Note, this can cause a rare issue where the wildcard\n  // info.value could pull a stale value out of changedProps during a reentrant\n  // change that sets the value back to undefined.\n  // https://github.com/Polymer/polymer/issues/5479\n  if (value === undefined) {\n    value = props[path];\n  }\n  return value;\n}\n\n// data api\n\n/**\n * Sends array splice notifications (`.splices` and `.length`)\n *\n * Note: this implementation only accepts normalized paths\n *\n * @param {!Polymer_PropertyEffects} inst Instance to send notifications to\n * @param {Array} array The array the mutations occurred on\n * @param {string} path The path to the array that was mutated\n * @param {Array} splices Array of splice records\n * @return {void}\n * @private\n */\nfunction notifySplices(inst, array, path, splices) {\n  const splicesData = { indexSplices: splices };\n  // Legacy behavior stored splices in `__data__` so it was *not* ephemeral.\n  // To match this behavior, we store splices directly on the array.\n  if (legacyUndefined && !inst._overrideLegacyUndefined) {\n    array.splices = splicesData;\n  }\n  inst.notifyPath(path + '.splices', splicesData);\n  inst.notifyPath(path + '.length', array.length);\n  // Clear splice data only when it's stored on the array.\n  if (legacyUndefined && !inst._overrideLegacyUndefined) {\n    splicesData.indexSplices = [];\n  }\n}\n\n/**\n * Creates a splice record and sends an array splice notification for\n * the described mutation\n *\n * Note: this implementation only accepts normalized paths\n *\n * @param {!Polymer_PropertyEffects} inst Instance to send notifications to\n * @param {Array} array The array the mutations occurred on\n * @param {string} path The path to the array that was mutated\n * @param {number} index Index at which the array mutation occurred\n * @param {number} addedCount Number of added items\n * @param {Array} removed Array of removed items\n * @return {void}\n * @private\n */\nfunction notifySplice(inst, array, path, index, addedCount, removed) {\n  notifySplices(inst, array, path, [{\n    index: index,\n    addedCount: addedCount,\n    removed: removed,\n    object: array,\n    type: 'splice'\n  }]);\n}\n\n/**\n * Returns an upper-cased version of the string.\n *\n * @param {string} name String to uppercase\n * @return {string} Uppercased string\n * @private\n */\nfunction upper(name) {\n  return name[0].toUpperCase() + name.substring(1);\n}\n\n/**\n * Element class mixin that provides meta-programming for Polymer's template\n * binding and data observation (collectively, \"property effects\") system.\n *\n * This mixin uses provides the following key static methods for adding\n * property effects to an element class:\n * - `addPropertyEffect`\n * - `createPropertyObserver`\n * - `createMethodObserver`\n * - `createNotifyingProperty`\n * - `createReadOnlyProperty`\n * - `createReflectedProperty`\n * - `createComputedProperty`\n * - `bindTemplate`\n *\n * Each method creates one or more property accessors, along with metadata\n * used by this mixin's implementation of `_propertiesChanged` to perform\n * the property effects.\n *\n * Underscored versions of the above methods also exist on the element\n * prototype for adding property effects on instances at runtime.\n *\n * Note that this mixin overrides several `PropertyAccessors` methods, in\n * many cases to maintain guarantees provided by the Polymer 1.x features;\n * notably it changes property accessors to be synchronous by default\n * whereas the default when using `PropertyAccessors` standalone is to be\n * async by default.\n *\n * @mixinFunction\n * @polymer\n * @appliesMixin TemplateStamp\n * @appliesMixin PropertyAccessors\n * @summary Element class mixin that provides meta-programming for Polymer's\n * template binding and data observation system.\n */\nexport const PropertyEffects = dedupingMixin(superClass => {\n\n  /**\n   * @constructor\n   * @implements {Polymer_PropertyAccessors}\n   * @implements {Polymer_TemplateStamp}\n   * @unrestricted\n   * @private\n   */\n  const propertyEffectsBase = TemplateStamp(PropertyAccessors(superClass));\n\n  /**\n   * @polymer\n   * @mixinClass\n   * @implements {Polymer_PropertyEffects}\n   * @extends {propertyEffectsBase}\n   * @unrestricted\n   */\n  class PropertyEffects extends propertyEffectsBase {\n\n    constructor() {\n      super();\n      /** @type {boolean} */\n      // Used to identify users of this mixin, ala instanceof\n      this.__isPropertyEffectsClient = true;\n      /** @type {boolean} */\n      this.__dataClientsReady;\n      /** @type {Array} */\n      this.__dataPendingClients;\n      /** @type {Object} */\n      this.__dataToNotify;\n      /** @type {Object} */\n      this.__dataLinkedPaths;\n      /** @type {boolean} */\n      this.__dataHasPaths;\n      /** @type {Object} */\n      this.__dataCompoundStorage;\n      /** @type {Polymer_PropertyEffects} */\n      this.__dataHost;\n      /** @type {!Object} */\n      this.__dataTemp;\n      /** @type {boolean} */\n      this.__dataClientsInitialized;\n      /** @type {!Object} */\n      this.__data;\n      /** @type {!Object|null} */\n      this.__dataPending;\n      /** @type {!Object} */\n      this.__dataOld;\n      /** @type {Object} */\n      this.__computeEffects;\n      /** @type {Object} */\n      this.__computeInfo;\n      /** @type {Object} */\n      this.__reflectEffects;\n      /** @type {Object} */\n      this.__notifyEffects;\n      /** @type {Object} */\n      this.__propagateEffects;\n      /** @type {Object} */\n      this.__observeEffects;\n      /** @type {Object} */\n      this.__readOnly;\n      /** @type {!TemplateInfo} */\n      this.__templateInfo;\n      /** @type {boolean} */\n      this._overrideLegacyUndefined;\n    }\n\n    get PROPERTY_EFFECT_TYPES() {\n      return TYPES;\n    }\n\n    /**\n     * @override\n     * @return {void}\n     */\n    _initializeProperties() {\n      super._initializeProperties();\n      this._registerHost();\n      this.__dataClientsReady = false;\n      this.__dataPendingClients = null;\n      this.__dataToNotify = null;\n      this.__dataLinkedPaths = null;\n      this.__dataHasPaths = false;\n      // May be set on instance prior to upgrade\n      this.__dataCompoundStorage = this.__dataCompoundStorage || null;\n      this.__dataHost = this.__dataHost || null;\n      this.__dataTemp = {};\n      this.__dataClientsInitialized = false;\n    }\n\n    _registerHost() {\n      if (hostStack.length) {\n        let host = hostStack[hostStack.length-1];\n        host._enqueueClient(this);\n        // This ensures even non-bound elements have a host set, as\n        // long as they upgrade synchronously\n        this.__dataHost = host;\n      }\n    }\n\n    /**\n     * Overrides `PropertyAccessors` implementation to provide a\n     * more efficient implementation of initializing properties from\n     * the prototype on the instance.\n     *\n     * @override\n     * @param {Object} props Properties to initialize on the prototype\n     * @return {void}\n     */\n    _initializeProtoProperties(props) {\n      this.__data = Object.create(props);\n      this.__dataPending = Object.create(props);\n      this.__dataOld = {};\n    }\n\n    /**\n     * Overrides `PropertyAccessors` implementation to avoid setting\n     * `_setProperty`'s `shouldNotify: true`.\n     *\n     * @override\n     * @param {Object} props Properties to initialize on the instance\n     * @return {void}\n     */\n    _initializeInstanceProperties(props) {\n      let readOnly = this[TYPES.READ_ONLY];\n      for (let prop in props) {\n        if (!readOnly || !readOnly[prop]) {\n          this.__dataPending = this.__dataPending || {};\n          this.__dataOld = this.__dataOld || {};\n          this.__data[prop] = this.__dataPending[prop] = props[prop];\n        }\n      }\n    }\n\n    // Prototype setup ----------------------------------------\n\n    /**\n     * Equivalent to static `addPropertyEffect` API but can be called on\n     * an instance to add effects at runtime.  See that method for\n     * full API docs.\n     *\n     * @override\n     * @param {string} property Property that should trigger the effect\n     * @param {string} type Effect type, from this.PROPERTY_EFFECT_TYPES\n     * @param {Object=} effect Effect metadata object\n     * @return {void}\n     * @protected\n     */\n    _addPropertyEffect(property, type, effect) {\n      this._createPropertyAccessor(property, type == TYPES.READ_ONLY);\n      // effects are accumulated into arrays per property based on type\n      let effects = ensureOwnEffectMap(this, type, true)[property];\n      if (!effects) {\n        effects = this[type][property] = [];\n      }\n      effects.push(effect);\n    }\n\n    /**\n     * Removes the given property effect.\n     *\n     * @override\n     * @param {string} property Property the effect was associated with\n     * @param {string} type Effect type, from this.PROPERTY_EFFECT_TYPES\n     * @param {Object=} effect Effect metadata object to remove\n     * @return {void}\n     */\n    _removePropertyEffect(property, type, effect) {\n      let effects = ensureOwnEffectMap(this, type, true)[property];\n      let idx = effects.indexOf(effect);\n      if (idx >= 0) {\n        effects.splice(idx, 1);\n      }\n    }\n\n    /**\n     * Returns whether the current prototype/instance has a property effect\n     * of a certain type.\n     *\n     * @override\n     * @param {string} property Property name\n     * @param {string=} type Effect type, from this.PROPERTY_EFFECT_TYPES\n     * @return {boolean} True if the prototype/instance has an effect of this\n     *     type\n     * @protected\n     */\n    _hasPropertyEffect(property, type) {\n      let effects = this[type];\n      return Boolean(effects && effects[property]);\n    }\n\n    /**\n     * Returns whether the current prototype/instance has a \"read only\"\n     * accessor for the given property.\n     *\n     * @override\n     * @param {string} property Property name\n     * @return {boolean} True if the prototype/instance has an effect of this\n     *     type\n     * @protected\n     */\n    _hasReadOnlyEffect(property) {\n      return this._hasPropertyEffect(property, TYPES.READ_ONLY);\n    }\n\n    /**\n     * Returns whether the current prototype/instance has a \"notify\"\n     * property effect for the given property.\n     *\n     * @override\n     * @param {string} property Property name\n     * @return {boolean} True if the prototype/instance has an effect of this\n     *     type\n     * @protected\n     */\n    _hasNotifyEffect(property) {\n      return this._hasPropertyEffect(property, TYPES.NOTIFY);\n    }\n\n    /**\n     * Returns whether the current prototype/instance has a \"reflect to\n     * attribute\" property effect for the given property.\n     *\n     * @override\n     * @param {string} property Property name\n     * @return {boolean} True if the prototype/instance has an effect of this\n     *     type\n     * @protected\n     */\n    _hasReflectEffect(property) {\n      return this._hasPropertyEffect(property, TYPES.REFLECT);\n    }\n\n    /**\n     * Returns whether the current prototype/instance has a \"computed\"\n     * property effect for the given property.\n     *\n     * @override\n     * @param {string} property Property name\n     * @return {boolean} True if the prototype/instance has an effect of this\n     *     type\n     * @protected\n     */\n    _hasComputedEffect(property) {\n      return this._hasPropertyEffect(property, TYPES.COMPUTE);\n    }\n\n    // Runtime ----------------------------------------\n\n    /**\n     * Sets a pending property or path.  If the root property of the path in\n     * question had no accessor, the path is set, otherwise it is enqueued\n     * via `_setPendingProperty`.\n     *\n     * This function isolates relatively expensive functionality necessary\n     * for the public API (`set`, `setProperties`, `notifyPath`, and property\n     * change listeners via {{...}} bindings), such that it is only done\n     * when paths enter the system, and not at every propagation step.  It\n     * also sets a `__dataHasPaths` flag on the instance which is used to\n     * fast-path slower path-matching code in the property effects host paths.\n     *\n     * `path` can be a path string or array of path parts as accepted by the\n     * public API.\n     *\n     * @override\n     * @param {string | !Array<number|string>} path Path to set\n     * @param {*} value Value to set\n     * @param {boolean=} shouldNotify Set to true if this change should\n     *  cause a property notification event dispatch\n     * @param {boolean=} isPathNotification If the path being set is a path\n     *   notification of an already changed value, as opposed to a request\n     *   to set and notify the change.  In the latter `false` case, a dirty\n     *   check is performed and then the value is set to the path before\n     *   enqueuing the pending property change.\n     * @return {boolean} Returns true if the property/path was enqueued in\n     *   the pending changes bag.\n     * @protected\n     */\n    _setPendingPropertyOrPath(path, value, shouldNotify, isPathNotification) {\n      if (isPathNotification ||\n          root(Array.isArray(path) ? path[0] : path) !== path) {\n        // Dirty check changes being set to a path against the actual object,\n        // since this is the entry point for paths into the system; from here\n        // the only dirty checks are against the `__dataTemp` cache to prevent\n        // duplicate work in the same turn only. Note, if this was a notification\n        // of a change already set to a path (isPathNotification: true),\n        // we always let the change through and skip the `set` since it was\n        // already dirty checked at the point of entry and the underlying\n        // object has already been updated\n        if (!isPathNotification) {\n          let old = get(this, path);\n          path = /** @type {string} */ (set(this, path, value));\n          // Use property-accessor's simpler dirty check\n          if (!path || !super._shouldPropertyChange(path, value, old)) {\n            return false;\n          }\n        }\n        this.__dataHasPaths = true;\n        if (this._setPendingProperty(/**@type{string}*/(path), value, shouldNotify)) {\n          computeLinkedPaths(this, /**@type{string}*/ (path), value);\n          return true;\n        }\n      } else {\n        if (this.__dataHasAccessor && this.__dataHasAccessor[path]) {\n          return this._setPendingProperty(/**@type{string}*/(path), value, shouldNotify);\n        } else {\n          this[path] = value;\n        }\n      }\n      return false;\n    }\n\n    /**\n     * Applies a value to a non-Polymer element/node's property.\n     *\n     * The implementation makes a best-effort at binding interop:\n     * Some native element properties have side-effects when\n     * re-setting the same value (e.g. setting `<input>.value` resets the\n     * cursor position), so we do a dirty-check before setting the value.\n     * However, for better interop with non-Polymer custom elements that\n     * accept objects, we explicitly re-set object changes coming from the\n     * Polymer world (which may include deep object changes without the\n     * top reference changing), erring on the side of providing more\n     * information.\n     *\n     * Users may override this method to provide alternate approaches.\n     *\n     * @override\n     * @param {!Node} node The node to set a property on\n     * @param {string} prop The property to set\n     * @param {*} value The value to set\n     * @return {void}\n     * @protected\n     */\n    _setUnmanagedPropertyToNode(node, prop, value) {\n      // It is a judgment call that resetting primitives is\n      // \"bad\" and resettings objects is also \"good\"; alternatively we could\n      // implement a whitelist of tag & property values that should never\n      // be reset (e.g. <input>.value && <select>.value)\n      if (value !== node[prop] || typeof value == 'object') {\n        // Note, className needs style scoping so this needs wrapping.\n        if (prop === 'className') {\n          node = /** @type {!Node} */(wrap(node));\n        }\n        node[prop] = value;\n      }\n    }\n\n    /**\n     * Overrides the `PropertiesChanged` implementation to introduce special\n     * dirty check logic depending on the property & value being set:\n     *\n     * 1. Any value set to a path (e.g. 'obj.prop': 42 or 'obj.prop': {...})\n     *    Stored in `__dataTemp`, dirty checked against `__dataTemp`\n     * 2. Object set to simple property (e.g. 'prop': {...})\n     *    Stored in `__dataTemp` and `__data`, dirty checked against\n     *    `__dataTemp` by default implementation of `_shouldPropertyChange`\n     * 3. Primitive value set to simple property (e.g. 'prop': 42)\n     *    Stored in `__data`, dirty checked against `__data`\n     *\n     * The dirty-check is important to prevent cycles due to two-way\n     * notification, but paths and objects are only dirty checked against any\n     * previous value set during this turn via a \"temporary cache\" that is\n     * cleared when the last `_propertiesChanged` exits. This is so:\n     * a. any cached array paths (e.g. 'array.3.prop') may be invalidated\n     *    due to array mutations like shift/unshift/splice; this is fine\n     *    since path changes are dirty-checked at user entry points like `set`\n     * b. dirty-checking for objects only lasts one turn to allow the user\n     *    to mutate the object in-place and re-set it with the same identity\n     *    and have all sub-properties re-propagated in a subsequent turn.\n     *\n     * The temp cache is not necessarily sufficient to prevent invalid array\n     * paths, since a splice can happen during the same turn (with pathological\n     * user code); we could introduce a \"fixup\" for temporarily cached array\n     * paths if needed: https://github.com/Polymer/polymer/issues/4227\n     *\n     * @override\n     * @param {string} property Name of the property\n     * @param {*} value Value to set\n     * @param {boolean=} shouldNotify True if property should fire notification\n     *   event (applies only for `notify: true` properties)\n     * @return {boolean} Returns true if the property changed\n     */\n    _setPendingProperty(property, value, shouldNotify) {\n      let propIsPath = this.__dataHasPaths && isPath(property);\n      let prevProps = propIsPath ? this.__dataTemp : this.__data;\n      if (this._shouldPropertyChange(property, value, prevProps[property])) {\n        if (!this.__dataPending) {\n          this.__dataPending = {};\n          this.__dataOld = {};\n        }\n        // Ensure old is captured from the last turn\n        if (!(property in this.__dataOld)) {\n          this.__dataOld[property] = this.__data[property];\n        }\n        // Paths are stored in temporary cache (cleared at end of turn),\n        // which is used for dirty-checking, all others stored in __data\n        if (propIsPath) {\n          this.__dataTemp[property] = value;\n        } else {\n          this.__data[property] = value;\n        }\n        // All changes go into pending property bag, passed to _propertiesChanged\n        this.__dataPending[property] = value;\n        // Track properties that should notify separately\n        if (propIsPath || (this[TYPES.NOTIFY] && this[TYPES.NOTIFY][property])) {\n          this.__dataToNotify = this.__dataToNotify || {};\n          this.__dataToNotify[property] = shouldNotify;\n        }\n        return true;\n      }\n      return false;\n    }\n\n    /**\n     * Overrides base implementation to ensure all accessors set `shouldNotify`\n     * to true, for per-property notification tracking.\n     *\n     * @override\n     * @param {string} property Name of the property\n     * @param {*} value Value to set\n     * @return {void}\n     */\n    _setProperty(property, value) {\n      if (this._setPendingProperty(property, value, true)) {\n        this._invalidateProperties();\n      }\n    }\n\n    /**\n     * Overrides `PropertyAccessor`'s default async queuing of\n     * `_propertiesChanged`: if `__dataReady` is false (has not yet been\n     * manually flushed), the function no-ops; otherwise flushes\n     * `_propertiesChanged` synchronously.\n     *\n     * @override\n     * @return {void}\n     */\n    _invalidateProperties() {\n      if (this.__dataReady) {\n        this._flushProperties();\n      }\n    }\n\n    /**\n     * Enqueues the given client on a list of pending clients, whose\n     * pending property changes can later be flushed via a call to\n     * `_flushClients`.\n     *\n     * @override\n     * @param {Object} client PropertyEffects client to enqueue\n     * @return {void}\n     * @protected\n     */\n    _enqueueClient(client) {\n      this.__dataPendingClients = this.__dataPendingClients || [];\n      if (client !== this) {\n        this.__dataPendingClients.push(client);\n      }\n    }\n\n    /**\n     * Flushes any clients previously enqueued via `_enqueueClient`, causing\n     * their `_flushProperties` method to run.\n     *\n     * @override\n     * @return {void}\n     * @protected\n     */\n    _flushClients() {\n      if (!this.__dataClientsReady) {\n        this.__dataClientsReady = true;\n        this._readyClients();\n        // Override point where accessors are turned on; importantly,\n        // this is after clients have fully readied, providing a guarantee\n        // that any property effects occur only after all clients are ready.\n        this.__dataReady = true;\n      } else {\n        this.__enableOrFlushClients();\n      }\n    }\n\n    // NOTE: We ensure clients either enable or flush as appropriate. This\n    // handles two corner cases:\n    // (1) clients flush properly when connected/enabled before the host\n    // enables; e.g.\n    //   (a) Templatize stamps with no properties and does not flush and\n    //   (b) the instance is inserted into dom and\n    //   (c) then the instance flushes.\n    // (2) clients enable properly when not connected/enabled when the host\n    // flushes; e.g.\n    //   (a) a template is runtime stamped and not yet connected/enabled\n    //   (b) a host sets a property, causing stamped dom to flush\n    //   (c) the stamped dom enables.\n    __enableOrFlushClients() {\n      let clients = this.__dataPendingClients;\n      if (clients) {\n        this.__dataPendingClients = null;\n        for (let i=0; i < clients.length; i++) {\n          let client = clients[i];\n          if (!client.__dataEnabled) {\n            client._enableProperties();\n          } else if (client.__dataPending) {\n            client._flushProperties();\n          }\n        }\n      }\n    }\n\n    /**\n     * Perform any initial setup on client dom. Called before the first\n     * `_flushProperties` call on client dom and before any element\n     * observers are called.\n     *\n     * @override\n     * @return {void}\n     * @protected\n     */\n    _readyClients() {\n      this.__enableOrFlushClients();\n    }\n\n    /**\n     * Sets a bag of property changes to this instance, and\n     * synchronously processes all effects of the properties as a batch.\n     *\n     * Property names must be simple properties, not paths.  Batched\n     * path propagation is not supported.\n     *\n     * @override\n     * @param {Object} props Bag of one or more key-value pairs whose key is\n     *   a property and value is the new value to set for that property.\n     * @param {boolean=} setReadOnly When true, any private values set in\n     *   `props` will be set. By default, `setProperties` will not set\n     *   `readOnly: true` root properties.\n     * @return {void}\n     * @public\n     */\n    setProperties(props, setReadOnly) {\n      for (let path in props) {\n        if (setReadOnly || !this[TYPES.READ_ONLY] || !this[TYPES.READ_ONLY][path]) {\n          //TODO(kschaaf): explicitly disallow paths in setProperty?\n          // wildcard observers currently only pass the first changed path\n          // in the `info` object, and you could do some odd things batching\n          // paths, e.g. {'foo.bar': {...}, 'foo': null}\n          this._setPendingPropertyOrPath(path, props[path], true);\n        }\n      }\n      this._invalidateProperties();\n    }\n\n    /**\n     * Overrides `PropertyAccessors` so that property accessor\n     * side effects are not enabled until after client dom is fully ready.\n     * Also calls `_flushClients` callback to ensure client dom is enabled\n     * that was not enabled as a result of flushing properties.\n     *\n     * @override\n     * @return {void}\n     */\n    ready() {\n      // It is important that `super.ready()` is not called here as it\n      // immediately turns on accessors. Instead, we wait until `readyClients`\n      // to enable accessors to provide a guarantee that clients are ready\n      // before processing any accessors side effects.\n      this._flushProperties();\n      // If no data was pending, `_flushProperties` will not `flushClients`\n      // so ensure this is done.\n      if (!this.__dataClientsReady) {\n        this._flushClients();\n      }\n      // Before ready, client notifications do not trigger _flushProperties.\n      // Therefore a flush is necessary here if data has been set.\n      if (this.__dataPending) {\n        this._flushProperties();\n      }\n    }\n\n    /**\n     * Implements `PropertyAccessors`'s properties changed callback.\n     *\n     * Runs each class of effects for the batch of changed properties in\n     * a specific order (compute, propagate, reflect, observe, notify).\n     *\n     * @override\n     * @param {!Object} currentProps Bag of all current accessor values\n     * @param {?Object} changedProps Bag of properties changed since the last\n     *   call to `_propertiesChanged`\n     * @param {?Object} oldProps Bag of previous values for each property\n     *   in `changedProps`\n     * @return {void}\n     */\n    _propertiesChanged(currentProps, changedProps, oldProps) {\n      // ----------------------------\n      // let c = Object.getOwnPropertyNames(changedProps || {});\n      // window.debug && console.group(this.localName + '#' + this.id + ': ' + c);\n      // if (window.debug) { debugger; }\n      // ----------------------------\n      let hasPaths = this.__dataHasPaths;\n      this.__dataHasPaths = false;\n      let notifyProps;\n      // Compute properties\n      runComputedEffects(this, changedProps, oldProps, hasPaths);\n      // Clear notify properties prior to possible reentry (propagate, observe),\n      // but after computing effects have a chance to add to them\n      notifyProps = this.__dataToNotify;\n      this.__dataToNotify = null;\n      // Propagate properties to clients\n      this._propagatePropertyChanges(changedProps, oldProps, hasPaths);\n      // Flush clients\n      this._flushClients();\n      // Reflect properties\n      runEffects(this, this[TYPES.REFLECT], changedProps, oldProps, hasPaths);\n      // Observe properties\n      runEffects(this, this[TYPES.OBSERVE], changedProps, oldProps, hasPaths);\n      // Notify properties to host\n      if (notifyProps) {\n        runNotifyEffects(this, notifyProps, changedProps, oldProps, hasPaths);\n      }\n      // Clear temporary cache at end of turn\n      if (this.__dataCounter == 1) {\n        this.__dataTemp = {};\n      }\n      // ----------------------------\n      // window.debug && console.groupEnd(this.localName + '#' + this.id + ': ' + c);\n      // ----------------------------\n    }\n\n    /**\n     * Called to propagate any property changes to stamped template nodes\n     * managed by this element.\n     *\n     * @override\n     * @param {Object} changedProps Bag of changed properties\n     * @param {Object} oldProps Bag of previous values for changed properties\n     * @param {boolean} hasPaths True with `props` contains one or more paths\n     * @return {void}\n     * @protected\n     */\n    _propagatePropertyChanges(changedProps, oldProps, hasPaths) {\n      if (this[TYPES.PROPAGATE]) {\n        runEffects(this, this[TYPES.PROPAGATE], changedProps, oldProps, hasPaths);\n      }\n      if (this.__templateInfo) {\n        this._runEffectsForTemplate(this.__templateInfo, changedProps, oldProps, hasPaths);\n      }\n    }\n\n    _runEffectsForTemplate(templateInfo, changedProps, oldProps, hasPaths) {\n      const baseRunEffects = (changedProps, hasPaths) => {\n        runEffects(this, templateInfo.propertyEffects, changedProps, oldProps,\n          hasPaths, templateInfo.nodeList);\n        for (let info=templateInfo.firstChild; info; info=info.nextSibling) {\n          this._runEffectsForTemplate(info, changedProps, oldProps, hasPaths);\n        }\n      };\n      if (templateInfo.runEffects) {\n        templateInfo.runEffects(baseRunEffects, changedProps, hasPaths);\n      } else {\n        baseRunEffects(changedProps, hasPaths);\n      }\n    }\n\n    /**\n     * Aliases one data path as another, such that path notifications from one\n     * are routed to the other.\n     *\n     * @override\n     * @param {string | !Array<string|number>} to Target path to link.\n     * @param {string | !Array<string|number>} from Source path to link.\n     * @return {void}\n     * @public\n     */\n    linkPaths(to, from) {\n      to = normalize(to);\n      from = normalize(from);\n      this.__dataLinkedPaths = this.__dataLinkedPaths || {};\n      this.__dataLinkedPaths[to] = from;\n    }\n\n    /**\n     * Removes a data path alias previously established with `_linkPaths`.\n     *\n     * Note, the path to unlink should be the target (`to`) used when\n     * linking the paths.\n     *\n     * @override\n     * @param {string | !Array<string|number>} path Target path to unlink.\n     * @return {void}\n     * @public\n     */\n    unlinkPaths(path) {\n      path = normalize(path);\n      if (this.__dataLinkedPaths) {\n        delete this.__dataLinkedPaths[path];\n      }\n    }\n\n    /**\n     * Notify that an array has changed.\n     *\n     * Example:\n     *\n     *     this.items = [ {name: 'Jim'}, {name: 'Todd'}, {name: 'Bill'} ];\n     *     ...\n     *     this.items.splice(1, 1, {name: 'Sam'});\n     *     this.items.push({name: 'Bob'});\n     *     this.notifySplices('items', [\n     *       { index: 1, removed: [{name: 'Todd'}], addedCount: 1,\n     *         object: this.items, type: 'splice' },\n     *       { index: 3, removed: [], addedCount: 1,\n     *         object: this.items, type: 'splice'}\n     *     ]);\n     *\n     * @param {string} path Path that should be notified.\n     * @param {Array} splices Array of splice records indicating ordered\n     *   changes that occurred to the array. Each record should have the\n     *   following fields:\n     *    * index: index at which the change occurred\n     *    * removed: array of items that were removed from this index\n     *    * addedCount: number of new items added at this index\n     *    * object: a reference to the array in question\n     *    * type: the string literal 'splice'\n     *\n     *   Note that splice records _must_ be normalized such that they are\n     *   reported in index order (raw results from `Object.observe` are not\n     *   ordered and must be normalized/merged before notifying).\n     *\n     * @override\n     * @return {void}\n     * @public\n     */\n    notifySplices(path, splices) {\n      let info = {path: ''};\n      let array = /** @type {Array} */(get(this, path, info));\n      notifySplices(this, array, info.path, splices);\n    }\n\n    /**\n     * Convenience method for reading a value from a path.\n     *\n     * Note, if any part in the path is undefined, this method returns\n     * `undefined` (this method does not throw when dereferencing undefined\n     * paths).\n     *\n     * @override\n     * @param {(string|!Array<(string|number)>)} path Path to the value\n     *   to read.  The path may be specified as a string (e.g. `foo.bar.baz`)\n     *   or an array of path parts (e.g. `['foo.bar', 'baz']`).  Note that\n     *   bracketed expressions are not supported; string-based path parts\n     *   *must* be separated by dots.  Note that when dereferencing array\n     *   indices, the index may be used as a dotted part directly\n     *   (e.g. `users.12.name` or `['users', 12, 'name']`).\n     * @param {Object=} root Root object from which the path is evaluated.\n     * @return {*} Value at the path, or `undefined` if any part of the path\n     *   is undefined.\n     * @public\n     */\n    get(path, root) {\n      return get(root || this, path);\n    }\n\n    /**\n     * Convenience method for setting a value to a path and notifying any\n     * elements bound to the same path.\n     *\n     * Note, if any part in the path except for the last is undefined,\n     * this method does nothing (this method does not throw when\n     * dereferencing undefined paths).\n     *\n     * @override\n     * @param {(string|!Array<(string|number)>)} path Path to the value\n     *   to write.  The path may be specified as a string (e.g. `'foo.bar.baz'`)\n     *   or an array of path parts (e.g. `['foo.bar', 'baz']`).  Note that\n     *   bracketed expressions are not supported; string-based path parts\n     *   *must* be separated by dots.  Note that when dereferencing array\n     *   indices, the index may be used as a dotted part directly\n     *   (e.g. `'users.12.name'` or `['users', 12, 'name']`).\n     * @param {*} value Value to set at the specified path.\n     * @param {Object=} root Root object from which the path is evaluated.\n     *   When specified, no notification will occur.\n     * @return {void}\n     * @public\n     */\n    set(path, value, root) {\n      if (root) {\n        set(root, path, value);\n      } else {\n        if (!this[TYPES.READ_ONLY] || !this[TYPES.READ_ONLY][/** @type {string} */(path)]) {\n          if (this._setPendingPropertyOrPath(path, value, true)) {\n            this._invalidateProperties();\n          }\n        }\n      }\n    }\n\n    /**\n     * Adds items onto the end of the array at the path specified.\n     *\n     * The arguments after `path` and return value match that of\n     * `Array.prototype.push`.\n     *\n     * This method notifies other paths to the same array that a\n     * splice occurred to the array.\n     *\n     * @override\n     * @param {string | !Array<string|number>} path Path to array.\n     * @param {...*} items Items to push onto array\n     * @return {number} New length of the array.\n     * @public\n     */\n    push(path, ...items) {\n      let info = {path: ''};\n      let array = /** @type {Array}*/(get(this, path, info));\n      let len = array.length;\n      let ret = array.push(...items);\n      if (items.length) {\n        notifySplice(this, array, info.path, len, items.length, []);\n      }\n      return ret;\n    }\n\n    /**\n     * Removes an item from the end of array at the path specified.\n     *\n     * The arguments after `path` and return value match that of\n     * `Array.prototype.pop`.\n     *\n     * This method notifies other paths to the same array that a\n     * splice occurred to the array.\n     *\n     * @override\n     * @param {string | !Array<string|number>} path Path to array.\n     * @return {*} Item that was removed.\n     * @public\n     */\n    pop(path) {\n      let info = {path: ''};\n      let array = /** @type {Array} */(get(this, path, info));\n      let hadLength = Boolean(array.length);\n      let ret = array.pop();\n      if (hadLength) {\n        notifySplice(this, array, info.path, array.length, 0, [ret]);\n      }\n      return ret;\n    }\n\n    /**\n     * Starting from the start index specified, removes 0 or more items\n     * from the array and inserts 0 or more new items in their place.\n     *\n     * The arguments after `path` and return value match that of\n     * `Array.prototype.splice`.\n     *\n     * This method notifies other paths to the same array that a\n     * splice occurred to the array.\n     *\n     * @override\n     * @param {string | !Array<string|number>} path Path to array.\n     * @param {number} start Index from which to start removing/inserting.\n     * @param {number=} deleteCount Number of items to remove.\n     * @param {...*} items Items to insert into array.\n     * @return {!Array} Array of removed items.\n     * @public\n     */\n    splice(path, start, deleteCount, ...items) {\n      let info = {path : ''};\n      let array = /** @type {Array} */(get(this, path, info));\n      // Normalize fancy native splice handling of crazy start values\n      if (start < 0) {\n        start = array.length - Math.floor(-start);\n      } else if (start) {\n        start = Math.floor(start);\n      }\n      // array.splice does different things based on the number of arguments\n      // you pass in. Therefore, array.splice(0) and array.splice(0, undefined)\n      // do different things. In the former, the whole array is cleared. In the\n      // latter, no items are removed.\n      // This means that we need to detect whether 1. one of the arguments\n      // is actually passed in and then 2. determine how many arguments\n      // we should pass on to the native array.splice\n      //\n      let ret;\n      // Omit any additional arguments if they were not passed in\n      if (arguments.length === 2) {\n        ret = array.splice(start);\n      // Either start was undefined and the others were defined, but in this\n      // case we can safely pass on all arguments\n      //\n      // Note: this includes the case where none of the arguments were passed in,\n      // e.g. this.splice('array'). However, if both start and deleteCount\n      // are undefined, array.splice will not modify the array (as expected)\n      } else {\n        ret = array.splice(start, deleteCount, ...items);\n      }\n      // At the end, check whether any items were passed in (e.g. insertions)\n      // or if the return array contains items (e.g. deletions).\n      // Only notify if items were added or deleted.\n      if (items.length || ret.length) {\n        notifySplice(this, array, info.path, start, items.length, ret);\n      }\n      return ret;\n    }\n\n    /**\n     * Removes an item from the beginning of array at the path specified.\n     *\n     * The arguments after `path` and return value match that of\n     * `Array.prototype.pop`.\n     *\n     * This method notifies other paths to the same array that a\n     * splice occurred to the array.\n     *\n     * @override\n     * @param {string | !Array<string|number>} path Path to array.\n     * @return {*} Item that was removed.\n     * @public\n     */\n    shift(path) {\n      let info = {path: ''};\n      let array = /** @type {Array} */(get(this, path, info));\n      let hadLength = Boolean(array.length);\n      let ret = array.shift();\n      if (hadLength) {\n        notifySplice(this, array, info.path, 0, 0, [ret]);\n      }\n      return ret;\n    }\n\n    /**\n     * Adds items onto the beginning of the array at the path specified.\n     *\n     * The arguments after `path` and return value match that of\n     * `Array.prototype.push`.\n     *\n     * This method notifies other paths to the same array that a\n     * splice occurred to the array.\n     *\n     * @override\n     * @param {string | !Array<string|number>} path Path to array.\n     * @param {...*} items Items to insert info array\n     * @return {number} New length of the array.\n     * @public\n     */\n    unshift(path, ...items) {\n      let info = {path: ''};\n      let array = /** @type {Array} */(get(this, path, info));\n      let ret = array.unshift(...items);\n      if (items.length) {\n        notifySplice(this, array, info.path, 0, items.length, []);\n      }\n      return ret;\n    }\n\n    /**\n     * Notify that a path has changed.\n     *\n     * Example:\n     *\n     *     this.item.user.name = 'Bob';\n     *     this.notifyPath('item.user.name');\n     *\n     * @override\n     * @param {string} path Path that should be notified.\n     * @param {*=} value Value at the path (optional).\n     * @return {void}\n     * @public\n     */\n    notifyPath(path, value) {\n      /** @type {string} */\n      let propPath;\n      if (arguments.length == 1) {\n        // Get value if not supplied\n        let info = {path: ''};\n        value = get(this, path, info);\n        propPath = info.path;\n      } else if (Array.isArray(path)) {\n        // Normalize path if needed\n        propPath = normalize(path);\n      } else {\n        propPath = /** @type{string} */(path);\n      }\n      if (this._setPendingPropertyOrPath(propPath, value, true, true)) {\n        this._invalidateProperties();\n      }\n    }\n\n    /**\n     * Equivalent to static `createReadOnlyProperty` API but can be called on\n     * an instance to add effects at runtime.  See that method for\n     * full API docs.\n     *\n     * @override\n     * @param {string} property Property name\n     * @param {boolean=} protectedSetter Creates a custom protected setter\n     *   when `true`.\n     * @return {void}\n     * @protected\n     */\n    _createReadOnlyProperty(property, protectedSetter) {\n      this._addPropertyEffect(property, TYPES.READ_ONLY);\n      if (protectedSetter) {\n        this['_set' + upper(property)] = /** @this {PropertyEffects} */function(value) {\n          this._setProperty(property, value);\n        };\n      }\n    }\n\n    /**\n     * Equivalent to static `createPropertyObserver` API but can be called on\n     * an instance to add effects at runtime.  See that method for\n     * full API docs.\n     *\n     * @override\n     * @param {string} property Property name\n     * @param {string|function(*,*)} method Function or name of observer method\n     *     to call\n     * @param {boolean=} dynamicFn Whether the method name should be included as\n     *   a dependency to the effect.\n     * @return {void}\n     * @protected\n     */\n    _createPropertyObserver(property, method, dynamicFn) {\n      let info = { property, method, dynamicFn: Boolean(dynamicFn) };\n      this._addPropertyEffect(property, TYPES.OBSERVE, {\n        fn: runObserverEffect, info, trigger: {name: property}\n      });\n      if (dynamicFn) {\n        this._addPropertyEffect(/** @type {string} */(method), TYPES.OBSERVE, {\n          fn: runObserverEffect, info, trigger: {name: method}\n        });\n      }\n    }\n\n    /**\n     * Equivalent to static `createMethodObserver` API but can be called on\n     * an instance to add effects at runtime.  See that method for\n     * full API docs.\n     *\n     * @override\n     * @param {string} expression Method expression\n     * @param {boolean|Object=} dynamicFn Boolean or object map indicating\n     *   whether method names should be included as a dependency to the effect.\n     * @return {void}\n     * @protected\n     */\n    _createMethodObserver(expression, dynamicFn) {\n      let sig = parseMethod(expression);\n      if (!sig) {\n        throw new Error(\"Malformed observer expression '\" + expression + \"'\");\n      }\n      createMethodEffect(this, sig, TYPES.OBSERVE, runMethodEffect, null, dynamicFn);\n    }\n\n    /**\n     * Equivalent to static `createNotifyingProperty` API but can be called on\n     * an instance to add effects at runtime.  See that method for\n     * full API docs.\n     *\n     * @override\n     * @param {string} property Property name\n     * @return {void}\n     * @protected\n     */\n    _createNotifyingProperty(property) {\n      this._addPropertyEffect(property, TYPES.NOTIFY, {\n        fn: runNotifyEffect,\n        info: {\n          eventName: camelToDashCase(property) + '-changed',\n          property: property\n        }\n      });\n    }\n\n    /**\n     * Equivalent to static `createReflectedProperty` API but can be called on\n     * an instance to add effects at runtime.  See that method for\n     * full API docs.\n     *\n     * @override\n     * @param {string} property Property name\n     * @return {void}\n     * @protected\n     * @suppress {missingProperties} go/missingfnprops\n     */\n    _createReflectedProperty(property) {\n      let attr = this.constructor.attributeNameForProperty(property);\n      if (attr[0] === '-') {\n        console.warn('Property ' + property + ' cannot be reflected to attribute ' +\n          attr + ' because \"-\" is not a valid starting attribute name. Use a lowercase first letter for the property instead.');\n      } else {\n        this._addPropertyEffect(property, TYPES.REFLECT, {\n          fn: runReflectEffect,\n          info: {\n            attrName: attr\n          }\n        });\n      }\n    }\n\n    /**\n     * Equivalent to static `createComputedProperty` API but can be called on\n     * an instance to add effects at runtime.  See that method for\n     * full API docs.\n     *\n     * @override\n     * @param {string} property Name of computed property to set\n     * @param {string} expression Method expression\n     * @param {boolean|Object=} dynamicFn Boolean or object map indicating\n     *   whether method names should be included as a dependency to the effect.\n     * @return {void}\n     * @protected\n     */\n    _createComputedProperty(property, expression, dynamicFn) {\n      let sig = parseMethod(expression);\n      if (!sig) {\n        throw new Error(\"Malformed computed expression '\" + expression + \"'\");\n      }\n      const info = createMethodEffect(this, sig, TYPES.COMPUTE, runComputedEffect, property, dynamicFn);\n      // Effects are normally stored as map of dependency->effect, but for\n      // ordered computation, we also need tree of computedProp->dependencies\n      ensureOwnEffectMap(this, COMPUTE_INFO)[property] = info;\n    }\n\n    /**\n     * Gather the argument values for a method specified in the provided array\n     * of argument metadata.\n     *\n     * The `path` and `value` arguments are used to fill in wildcard descriptor\n     * when the method is being called as a result of a path notification.\n     *\n     * @param {!Array<!MethodArg>} args Array of argument metadata\n     * @param {string} path Property/path name that triggered the method effect\n     * @param {Object} props Bag of current property changes\n     * @return {!Array<*>} Array of argument values\n     * @private\n     */\n    _marshalArgs(args, path, props) {\n      const data = this.__data;\n      const values = [];\n      for (let i=0, l=args.length; i<l; i++) {\n        let {name, structured, wildcard, value, literal} = args[i];\n        if (!literal) {\n          if (wildcard) {\n            const matches = isDescendant(name, path);\n            const pathValue = getArgValue(data, props, matches ? path : name);\n            value = {\n              path: matches ? path : name,\n              value: pathValue,\n              base: matches ? get(data, name) : pathValue\n            };\n          } else {\n            value = structured ? getArgValue(data, props, name) : data[name];\n          }\n        }\n        // When the `legacyUndefined` flag is enabled, pass a no-op value\n        // so that the observer, computed property, or compound binding is aborted.\n        if (legacyUndefined && !this._overrideLegacyUndefined && value === undefined && args.length > 1) {\n          return NOOP;\n        }\n        values[i] = value;\n      }\n      return values;\n    }\n\n    // -- static class methods ------------\n\n    /**\n     * Ensures an accessor exists for the specified property, and adds\n     * to a list of \"property effects\" that will run when the accessor for\n     * the specified property is set.  Effects are grouped by \"type\", which\n     * roughly corresponds to a phase in effect processing.  The effect\n     * metadata should be in the following form:\n     *\n     *     {\n     *       fn: effectFunction, // Reference to function to call to perform effect\n     *       info: { ... }       // Effect metadata passed to function\n     *       trigger: {          // Optional triggering metadata; if not provided\n     *         name: string      // the property is treated as a wildcard\n     *         structured: boolean\n     *         wildcard: boolean\n     *       }\n     *     }\n     *\n     * Effects are called from `_propertiesChanged` in the following order by\n     * type:\n     *\n     * 1. COMPUTE\n     * 2. PROPAGATE\n     * 3. REFLECT\n     * 4. OBSERVE\n     * 5. NOTIFY\n     *\n     * Effect functions are called with the following signature:\n     *\n     *     effectFunction(inst, path, props, oldProps, info, hasPaths)\n     *\n     * @param {string} property Property that should trigger the effect\n     * @param {string} type Effect type, from this.PROPERTY_EFFECT_TYPES\n     * @param {Object=} effect Effect metadata object\n     * @return {void}\n     * @protected\n     * @nocollapse\n     */\n    static addPropertyEffect(property, type, effect) {\n      this.prototype._addPropertyEffect(property, type, effect);\n    }\n\n    /**\n     * Creates a single-property observer for the given property.\n     *\n     * @param {string} property Property name\n     * @param {string|function(*,*)} method Function or name of observer method to call\n     * @param {boolean=} dynamicFn Whether the method name should be included as\n     *   a dependency to the effect.\n     * @return {void}\n     * @protected\n     * @nocollapse\n     */\n    static createPropertyObserver(property, method, dynamicFn) {\n      this.prototype._createPropertyObserver(property, method, dynamicFn);\n    }\n\n    /**\n     * Creates a multi-property \"method observer\" based on the provided\n     * expression, which should be a string in the form of a normal JavaScript\n     * function signature: `'methodName(arg1, [..., argn])'`.  Each argument\n     * should correspond to a property or path in the context of this\n     * prototype (or instance), or may be a literal string or number.\n     *\n     * @param {string} expression Method expression\n     * @param {boolean|Object=} dynamicFn Boolean or object map indicating\n     * @return {void}\n     *   whether method names should be included as a dependency to the effect.\n     * @protected\n     * @nocollapse\n     */\n    static createMethodObserver(expression, dynamicFn) {\n      this.prototype._createMethodObserver(expression, dynamicFn);\n    }\n\n    /**\n     * Causes the setter for the given property to dispatch `<property>-changed`\n     * events to notify of changes to the property.\n     *\n     * @param {string} property Property name\n     * @return {void}\n     * @protected\n     * @nocollapse\n     */\n    static createNotifyingProperty(property) {\n      this.prototype._createNotifyingProperty(property);\n    }\n\n    /**\n     * Creates a read-only accessor for the given property.\n     *\n     * To set the property, use the protected `_setProperty` API.\n     * To create a custom protected setter (e.g. `_setMyProp()` for\n     * property `myProp`), pass `true` for `protectedSetter`.\n     *\n     * Note, if the property will have other property effects, this method\n     * should be called first, before adding other effects.\n     *\n     * @param {string} property Property name\n     * @param {boolean=} protectedSetter Creates a custom protected setter\n     *   when `true`.\n     * @return {void}\n     * @protected\n     * @nocollapse\n     */\n    static createReadOnlyProperty(property, protectedSetter) {\n      this.prototype._createReadOnlyProperty(property, protectedSetter);\n    }\n\n    /**\n     * Causes the setter for the given property to reflect the property value\n     * to a (dash-cased) attribute of the same name.\n     *\n     * @param {string} property Property name\n     * @return {void}\n     * @protected\n     * @nocollapse\n     */\n    static createReflectedProperty(property) {\n      this.prototype._createReflectedProperty(property);\n    }\n\n    /**\n     * Creates a computed property whose value is set to the result of the\n     * method described by the given `expression` each time one or more\n     * arguments to the method changes.  The expression should be a string\n     * in the form of a normal JavaScript function signature:\n     * `'methodName(arg1, [..., argn])'`\n     *\n     * @param {string} property Name of computed property to set\n     * @param {string} expression Method expression\n     * @param {boolean|Object=} dynamicFn Boolean or object map indicating whether\n     *   method names should be included as a dependency to the effect.\n     * @return {void}\n     * @protected\n     * @nocollapse\n     */\n    static createComputedProperty(property, expression, dynamicFn) {\n      this.prototype._createComputedProperty(property, expression, dynamicFn);\n    }\n\n    /**\n     * Parses the provided template to ensure binding effects are created\n     * for them, and then ensures property accessors are created for any\n     * dependent properties in the template.  Binding effects for bound\n     * templates are stored in a linked list on the instance so that\n     * templates can be efficiently stamped and unstamped.\n     *\n     * @param {!HTMLTemplateElement} template Template containing binding\n     *   bindings\n     * @return {!TemplateInfo} Template metadata object\n     * @protected\n     * @nocollapse\n     */\n    static bindTemplate(template) {\n      return this.prototype._bindTemplate(template);\n    }\n\n    // -- binding ----------------------------------------------\n\n    /*\n     * Overview of binding flow:\n     *\n     * During finalization (`instanceBinding==false`, `wasPreBound==false`):\n     *  `_bindTemplate(t, false)` called directly during finalization - parses\n     *  the template (for the first time), and then assigns that _prototypical_\n     *  template info to `__preboundTemplateInfo` _on the prototype_; note in\n     *  this case `wasPreBound` is false; this is the first time we're binding\n     *  it, thus we create accessors.\n     *\n     * During first stamping (`instanceBinding==true`, `wasPreBound==true`):\n     *   `_stampTemplate` calls `_bindTemplate(t, true)`: the `templateInfo`\n     *   returned matches the prebound one, and so this is `wasPreBound == true`\n     *   state; thus we _skip_ creating accessors, but _do_ create an instance\n     *   of the template info to serve as the start of our linked list (needs to\n     *   be an instance, not the prototypical one, so that we can add `nodeList`\n     *   to it to contain the `nodeInfo`-ordered list of instance nodes for\n     *   bindings, and so we can chain runtime-stamped template infos off of\n     *   it). At this point, the call to `_stampTemplate` calls\n     *   `applyTemplateInfo` for each nested `<template>` found during parsing\n     *   to hand prototypical `_templateInfo` to them; we also pass the _parent_\n     *   `templateInfo` to the `<template>` so that we have the instance-time\n     *   parent to link the `templateInfo` under in the case it was\n     *   runtime-stamped.\n     *\n     * During subsequent runtime stamping (`instanceBinding==true`,\n     *   `wasPreBound==false`): `_stampTemplate` calls `_bindTemplate(t, true)`\n     *   - here `templateInfo` is guaranteed to _not_ match the prebound one,\n     *   because it was either a different template altogether, or even if it\n     *   was the same template, the step above created a instance of the info;\n     *   in this case `wasPreBound == false`, so we _do_ create accessors, _and_\n     *   link a instance into the linked list.\n     */\n\n    /**\n     * Equivalent to static `bindTemplate` API but can be called on an instance\n     * to add effects at runtime.  See that method for full API docs.\n     *\n     * This method may be called on the prototype (for prototypical template\n     * binding, to avoid creating accessors every instance) once per prototype,\n     * and will be called with `runtimeBinding: true` by `_stampTemplate` to\n     * create and link an instance of the template metadata associated with a\n     * particular stamping.\n     *\n     * @override\n     * @param {!HTMLTemplateElement} template Template containing binding\n     * bindings\n     * @param {boolean=} instanceBinding When false (default), performs\n     * \"prototypical\" binding of the template and overwrites any previously\n     * bound template for the class. When true (as passed from\n     * `_stampTemplate`), the template info is instanced and linked into the\n     * list of bound templates.\n     * @return {!TemplateInfo} Template metadata object; for `runtimeBinding`,\n     * this is an instance of the prototypical template info\n     * @protected\n     * @suppress {missingProperties} go/missingfnprops\n     */\n    _bindTemplate(template, instanceBinding) {\n      let templateInfo = this.constructor._parseTemplate(template);\n      let wasPreBound = this.__preBoundTemplateInfo == templateInfo;\n      // Optimization: since this is called twice for proto-bound templates,\n      // don't attempt to recreate accessors if this template was pre-bound\n      if (!wasPreBound) {\n        for (let prop in templateInfo.propertyEffects) {\n          this._createPropertyAccessor(prop);\n        }\n      }\n      if (instanceBinding) {\n        // For instance-time binding, create instance of template metadata\n        // and link into tree of templates if necessary\n        templateInfo = /** @type {!TemplateInfo} */(Object.create(templateInfo));\n        templateInfo.wasPreBound = wasPreBound;\n        if (!this.__templateInfo) {\n          // Set the info to the root of the tree\n          this.__templateInfo = templateInfo;\n        } else {\n          // Append this template info onto the end of its parent template's\n          // list, which will determine the tree structure via which property\n          // effects are run; if this template was not nested in another\n          // template, use the root template (the first stamped one) as the\n          // parent. Note, `parent` is the `templateInfo` instance for this\n          // template's parent (containing) template, which was set up in\n          // `applyTemplateInfo`.  While a given template's `parent` is set\n          // apriori, it is only added to the parent's child list at the point\n          // that it is being bound, since a template may or may not ever be\n          // stamped, and may be stamped more than once (in which case instances\n          // of the template info will be in the tree under its parent more than\n          // once).\n          const parent = template._parentTemplateInfo || this.__templateInfo;\n          const previous = parent.lastChild;\n          templateInfo.parent = parent;\n          parent.lastChild = templateInfo;\n          templateInfo.previousSibling = previous;\n          if (previous) {\n            previous.nextSibling = templateInfo;\n          } else {\n            parent.firstChild = templateInfo;\n          }\n        }\n      } else {\n        this.__preBoundTemplateInfo = templateInfo;\n      }\n      return templateInfo;\n    }\n\n    /**\n     * Adds a property effect to the given template metadata, which is run\n     * at the \"propagate\" stage of `_propertiesChanged` when the template\n     * has been bound to the element via `_bindTemplate`.\n     *\n     * The `effect` object should match the format in `_addPropertyEffect`.\n     *\n     * @param {Object} templateInfo Template metadata to add effect to\n     * @param {string} prop Property that should trigger the effect\n     * @param {Object=} effect Effect metadata object\n     * @return {void}\n     * @protected\n     * @nocollapse\n     */\n    static _addTemplatePropertyEffect(templateInfo, prop, effect) {\n      let hostProps = templateInfo.hostProps = templateInfo.hostProps || {};\n      hostProps[prop] = true;\n      let effects = templateInfo.propertyEffects = templateInfo.propertyEffects || {};\n      let propEffects = effects[prop] = effects[prop] || [];\n      propEffects.push(effect);\n    }\n\n    /**\n     * Stamps the provided template and performs instance-time setup for\n     * Polymer template features, including data bindings, declarative event\n     * listeners, and the `this.$` map of `id`'s to nodes.  A document fragment\n     * is returned containing the stamped DOM, ready for insertion into the\n     * DOM.\n     *\n     * This method may be called more than once; however note that due to\n     * `shadycss` polyfill limitations, only styles from templates prepared\n     * using `ShadyCSS.prepareTemplate` will be correctly polyfilled (scoped\n     * to the shadow root and support CSS custom properties), and note that\n     * `ShadyCSS.prepareTemplate` may only be called once per element. As such,\n     * any styles required by in runtime-stamped templates must be included\n     * in the main element template.\n     *\n     * @param {!HTMLTemplateElement} template Template to stamp\n     * @param {TemplateInfo=} templateInfo Optional bound template info associated\n     *   with the template to be stamped; if omitted the template will be\n     *   automatically bound.\n     * @return {!StampedTemplate} Cloned template content\n     * @override\n     * @protected\n     */\n    _stampTemplate(template, templateInfo) {\n      templateInfo =  templateInfo || /** @type {!TemplateInfo} */(this._bindTemplate(template, true));\n      // Ensures that created dom is `_enqueueClient`'d to this element so\n      // that it can be flushed on next call to `_flushProperties`\n      hostStack.push(this);\n      let dom = super._stampTemplate(template, templateInfo);\n      hostStack.pop();\n      // Add template-instance-specific data to instanced templateInfo\n      templateInfo.nodeList = dom.nodeList;\n      // Capture child nodes to allow unstamping of non-prototypical templates\n      if (!templateInfo.wasPreBound) {\n        let nodes = templateInfo.childNodes = [];\n        for (let n=dom.firstChild; n; n=n.nextSibling) {\n          nodes.push(n);\n        }\n      }\n      dom.templateInfo = templateInfo;\n      // Setup compound storage, 2-way listeners, and dataHost for bindings\n      setupBindings(this, templateInfo);\n      // Flush properties into template nodes; the check on `__dataClientsReady`\n      // ensures we don't needlessly run effects for an element's initial\n      // prototypical template stamping since they will happen as a part of the\n      // first call to `_propertiesChanged`. This flag is set to true\n      // after running the initial propagate effects, and immediately before\n      // flushing clients. Since downstream clients could cause stamping on\n      // this host (e.g. a fastDomIf `dom-if` being forced to render\n      // synchronously), this flag ensures effects for runtime-stamped templates\n      // are run at this point during the initial element boot-up.\n      if (this.__dataClientsReady) {\n        this._runEffectsForTemplate(templateInfo, this.__data, null, false);\n        this._flushClients();\n      }\n      return dom;\n    }\n\n    /**\n     * Removes and unbinds the nodes previously contained in the provided\n     * DocumentFragment returned from `_stampTemplate`.\n     *\n     * @override\n     * @param {!StampedTemplate} dom DocumentFragment previously returned\n     *   from `_stampTemplate` associated with the nodes to be removed\n     * @return {void}\n     * @protected\n     */\n    _removeBoundDom(dom) {\n      // Unlink template info; Note that while the child is unlinked from its\n      // parent list, a template's `parent` reference is never removed, since\n      // this is is determined by the tree structure and applied at\n      // `applyTemplateInfo` time.\n      const templateInfo = dom.templateInfo;\n      const {previousSibling, nextSibling, parent} = templateInfo;\n      if (previousSibling) {\n        previousSibling.nextSibling = nextSibling;\n      } else if (parent) {\n        parent.firstChild = nextSibling;\n      }\n      if (nextSibling) {\n        nextSibling.previousSibling = previousSibling;\n      } else if (parent) {\n        parent.lastChild = previousSibling;\n      }\n      templateInfo.nextSibling = templateInfo.previousSibling = null;\n      // Remove stamped nodes\n      let nodes = templateInfo.childNodes;\n      for (let i=0; i<nodes.length; i++) {\n        let node = nodes[i];\n        wrap(wrap(node).parentNode).removeChild(node);\n      }\n    }\n\n    /**\n     * Overrides default `TemplateStamp` implementation to add support for\n     * parsing bindings from `TextNode`'s' `textContent`.  A `bindings`\n     * array is added to `nodeInfo` and populated with binding metadata\n     * with information capturing the binding target, and a `parts` array\n     * with one or more metadata objects capturing the source(s) of the\n     * binding.\n     *\n     * @param {Node} node Node to parse\n     * @param {TemplateInfo} templateInfo Template metadata for current template\n     * @param {NodeInfo} nodeInfo Node metadata for current template node\n     * @return {boolean} `true` if the visited node added node-specific\n     *   metadata to `nodeInfo`\n     * @protected\n     * @suppress {missingProperties} Interfaces in closure do not inherit statics, but classes do\n     * @nocollapse\n     */\n    static _parseTemplateNode(node, templateInfo, nodeInfo) {\n      // TODO(https://github.com/google/closure-compiler/issues/3240):\n      //     Change back to just super.methodCall()\n      let noted = propertyEffectsBase._parseTemplateNode.call(\n        this, node, templateInfo, nodeInfo);\n      if (node.nodeType === Node.TEXT_NODE) {\n        let parts = this._parseBindings(node.textContent, templateInfo);\n        if (parts) {\n          // Initialize the textContent with any literal parts\n          // NOTE: default to a space here so the textNode remains; some browsers\n          // (IE) omit an empty textNode following cloneNode/importNode.\n          node.textContent = literalFromParts(parts) || ' ';\n          addBinding(this, templateInfo, nodeInfo, 'text', 'textContent', parts);\n          noted = true;\n        }\n      }\n      return noted;\n    }\n\n    /**\n     * Overrides default `TemplateStamp` implementation to add support for\n     * parsing bindings from attributes.  A `bindings`\n     * array is added to `nodeInfo` and populated with binding metadata\n     * with information capturing the binding target, and a `parts` array\n     * with one or more metadata objects capturing the source(s) of the\n     * binding.\n     *\n     * @param {Element} node Node to parse\n     * @param {TemplateInfo} templateInfo Template metadata for current template\n     * @param {NodeInfo} nodeInfo Node metadata for current template node\n     * @param {string} name Attribute name\n     * @param {string} value Attribute value\n     * @return {boolean} `true` if the visited node added node-specific\n     *   metadata to `nodeInfo`\n     * @protected\n     * @suppress {missingProperties} Interfaces in closure do not inherit statics, but classes do\n     * @nocollapse\n     */\n    static _parseTemplateNodeAttribute(node, templateInfo, nodeInfo, name, value) {\n      let parts = this._parseBindings(value, templateInfo);\n      if (parts) {\n        // Attribute or property\n        let origName = name;\n        let kind = 'property';\n        // The only way we see a capital letter here is if the attr has\n        // a capital letter in it per spec. In this case, to make sure\n        // this binding works, we go ahead and make the binding to the attribute.\n        if (capitalAttributeRegex.test(name)) {\n          kind = 'attribute';\n        } else if (name[name.length-1] == '$') {\n          name = name.slice(0, -1);\n          kind = 'attribute';\n        }\n        // Initialize attribute bindings with any literal parts\n        let literal = literalFromParts(parts);\n        if (literal && kind == 'attribute') {\n          // Ensure a ShadyCSS template scoped style is not removed\n          // when a class$ binding's initial literal value is set.\n          if (name == 'class' && node.hasAttribute('class')) {\n            literal += ' ' + node.getAttribute(name);\n          }\n          node.setAttribute(name, literal);\n        }\n        // support disable-upgrade\n        if (kind == 'attribute' && origName == 'disable-upgrade$') {\n          node.setAttribute(name, '');\n        }\n        // Clear attribute before removing, since IE won't allow removing\n        // `value` attribute if it previously had a value (can't\n        // unconditionally set '' before removing since attributes with `$`\n        // can't be set using setAttribute)\n        if (node.localName === 'input' && origName === 'value') {\n          node.setAttribute(origName, '');\n        }\n        // Remove annotation\n        node.removeAttribute(origName);\n        // Case hackery: attributes are lower-case, but bind targets\n        // (properties) are case sensitive. Gambit is to map dash-case to\n        // camel-case: `foo-bar` becomes `fooBar`.\n        // Attribute bindings are excepted.\n        if (kind === 'property') {\n          name = dashToCamelCase(name);\n        }\n        addBinding(this, templateInfo, nodeInfo, kind, name, parts, literal);\n        return true;\n      } else {\n        // TODO(https://github.com/google/closure-compiler/issues/3240):\n        //     Change back to just super.methodCall()\n        return propertyEffectsBase._parseTemplateNodeAttribute.call(\n          this, node, templateInfo, nodeInfo, name, value);\n      }\n    }\n\n    /**\n     * Overrides default `TemplateStamp` implementation to add support for\n     * binding the properties that a nested template depends on to the template\n     * as `_host_<property>`.\n     *\n     * @param {Node} node Node to parse\n     * @param {TemplateInfo} templateInfo Template metadata for current template\n     * @param {NodeInfo} nodeInfo Node metadata for current template node\n     * @return {boolean} `true` if the visited node added node-specific\n     *   metadata to `nodeInfo`\n     * @protected\n     * @suppress {missingProperties} Interfaces in closure do not inherit statics, but classes do\n     * @nocollapse\n     */\n    static _parseTemplateNestedTemplate(node, templateInfo, nodeInfo) {\n      // TODO(https://github.com/google/closure-compiler/issues/3240):\n      //     Change back to just super.methodCall()\n      let noted = propertyEffectsBase._parseTemplateNestedTemplate.call(\n        this, node, templateInfo, nodeInfo);\n      const parent = node.parentNode;\n      const nestedTemplateInfo = nodeInfo.templateInfo;\n      const isDomIf = parent.localName === 'dom-if';\n      const isDomRepeat = parent.localName === 'dom-repeat';\n      // Remove nested template and redirect its host bindings & templateInfo\n      // onto the parent (dom-if/repeat element)'s nodeInfo\n      if (removeNestedTemplates && (isDomIf || isDomRepeat)) {\n        parent.removeChild(node);\n        // Use the parent's nodeInfo (for the dom-if/repeat) to record the\n        // templateInfo, and use that for any host property bindings below\n        nodeInfo = nodeInfo.parentInfo;\n        nodeInfo.templateInfo = nestedTemplateInfo;\n        // Ensure the parent dom-if/repeat is noted since it now may have host\n        // bindings; it may not have been if it did not have its own bindings\n        nodeInfo.noted = true;\n        noted = false;\n      }\n      // Merge host props into outer template and add bindings\n      let hostProps = nestedTemplateInfo.hostProps;\n      if (fastDomIf && isDomIf) {\n        // `fastDomIf` mode uses runtime-template stamping to add accessors/\n        // effects to properties used in its template; as such we don't need to\n        // tax the host element with `_host_` bindings for the `dom-if`.\n        // However, in the event it is nested in a `dom-repeat`, it is still\n        // important that its host properties are added to the\n        // TemplateInstance's `hostProps` so that they are forwarded to the\n        // TemplateInstance.\n        if (hostProps) {\n          templateInfo.hostProps =\n            Object.assign(templateInfo.hostProps || {}, hostProps);\n          // Ensure the dom-if is noted so that it has a __dataHost, since\n          // `fastDomIf` uses the host for runtime template stamping; note this\n          // was already ensured above in the `removeNestedTemplates` case\n          if (!removeNestedTemplates) {\n            nodeInfo.parentInfo.noted = true;\n          }\n        }\n      } else {\n        let mode = '{';\n        for (let source in hostProps) {\n          let parts = [{ mode, source, dependencies: [source], hostProp: true }];\n          addBinding(this, templateInfo, nodeInfo, 'property', '_host_' + source, parts);\n        }\n      }\n      return noted;\n    }\n\n    /**\n     * Called to parse text in a template (either attribute values or\n     * textContent) into binding metadata.\n     *\n     * Any overrides of this method should return an array of binding part\n     * metadata  representing one or more bindings found in the provided text\n     * and any \"literal\" text in between.  Any non-literal parts will be passed\n     * to `_evaluateBinding` when any dependencies change.  The only required\n     * fields of each \"part\" in the returned array are as follows:\n     *\n     * - `dependencies` - Array containing trigger metadata for each property\n     *   that should trigger the binding to update\n     * - `literal` - String containing text if the part represents a literal;\n     *   in this case no `dependencies` are needed\n     *\n     * Additional metadata for use by `_evaluateBinding` may be provided in\n     * each part object as needed.\n     *\n     * The default implementation handles the following types of bindings\n     * (one or more may be intermixed with literal strings):\n     * - Property binding: `[[prop]]`\n     * - Path binding: `[[object.prop]]`\n     * - Negated property or path bindings: `[[!prop]]` or `[[!object.prop]]`\n     * - Two-way property or path bindings (supports negation):\n     *   `{{prop}}`, `{{object.prop}}`, `{{!prop}}` or `{{!object.prop}}`\n     * - Inline computed method (supports negation):\n     *   `[[compute(a, 'literal', b)]]`, `[[!compute(a, 'literal', b)]]`\n     *\n     * The default implementation uses a regular expression for best\n     * performance. However, the regular expression uses a white-list of\n     * allowed characters in a data-binding, which causes problems for\n     * data-bindings that do use characters not in this white-list.\n     *\n     * Instead of updating the white-list with all allowed characters,\n     * there is a StrictBindingParser (see lib/mixins/strict-binding-parser)\n     * that uses a state machine instead. This state machine is able to handle\n     * all characters. However, it is slightly less performant, therefore we\n     * extracted it into a separate optional mixin.\n     *\n     * @param {string} text Text to parse from attribute or textContent\n     * @param {Object} templateInfo Current template metadata\n     * @return {Array<!BindingPart>} Array of binding part metadata\n     * @protected\n     * @nocollapse\n     */\n    static _parseBindings(text, templateInfo) {\n      let parts = [];\n      let lastIndex = 0;\n      let m;\n      // Example: \"literal1{{prop}}literal2[[!compute(foo,bar)]]final\"\n      // Regex matches:\n      //        Iteration 1:  Iteration 2:\n      // m[1]: '{{'          '[['\n      // m[2]: ''            '!'\n      // m[3]: 'prop'        'compute(foo,bar)'\n      while ((m = bindingRegex.exec(text)) !== null) {\n        // Add literal part\n        if (m.index > lastIndex) {\n          parts.push({literal: text.slice(lastIndex, m.index)});\n        }\n        // Add binding part\n        let mode = m[1][0];\n        let negate = Boolean(m[2]);\n        let source = m[3].trim();\n        let customEvent = false, notifyEvent = '', colon = -1;\n        if (mode == '{' && (colon = source.indexOf('::')) > 0) {\n          notifyEvent = source.substring(colon + 2);\n          source = source.substring(0, colon);\n          customEvent = true;\n        }\n        let signature = parseMethod(source);\n        let dependencies = [];\n        if (signature) {\n          // Inline computed function\n          let {args, methodName} = signature;\n          for (let i=0; i<args.length; i++) {\n            let arg = args[i];\n            if (!arg.literal) {\n              dependencies.push(arg);\n            }\n          }\n          let dynamicFns = templateInfo.dynamicFns;\n          if (dynamicFns && dynamicFns[methodName] || signature.static) {\n            dependencies.push(methodName);\n            signature.dynamicFn = true;\n          }\n        } else {\n          // Property or path\n          dependencies.push(source);\n        }\n        parts.push({\n          source, mode, negate, customEvent, signature, dependencies,\n          event: notifyEvent\n        });\n        lastIndex = bindingRegex.lastIndex;\n      }\n      // Add a final literal part\n      if (lastIndex && lastIndex < text.length) {\n        let literal = text.substring(lastIndex);\n        if (literal) {\n          parts.push({\n            literal: literal\n          });\n        }\n      }\n      if (parts.length) {\n        return parts;\n      } else {\n        return null;\n      }\n    }\n\n    /**\n     * Called to evaluate a previously parsed binding part based on a set of\n     * one or more changed dependencies.\n     *\n     * @param {!Polymer_PropertyEffects} inst Element that should be used as\n     *     scope for binding dependencies\n     * @param {BindingPart} part Binding part metadata\n     * @param {string} path Property/path that triggered this effect\n     * @param {Object} props Bag of current property changes\n     * @param {Object} oldProps Bag of previous values for changed properties\n     * @param {boolean} hasPaths True with `props` contains one or more paths\n     * @return {*} Value the binding part evaluated to\n     * @protected\n     * @nocollapse\n     */\n    static _evaluateBinding(inst, part, path, props, oldProps, hasPaths) {\n      let value;\n      if (part.signature) {\n        value = runMethodEffect(inst, path, props, oldProps, part.signature);\n      } else if (path != part.source) {\n        value = get(inst, part.source);\n      } else {\n        if (hasPaths && isPath(path)) {\n          value = get(inst, path);\n        } else {\n          value = inst.__data[path];\n        }\n      }\n      if (part.negate) {\n        value = !value;\n      }\n      return value;\n    }\n\n  }\n\n  return PropertyEffects;\n});\n\n/**\n * Stack for enqueuing client dom created by a host element.\n *\n * By default elements are flushed via `_flushProperties` when\n * `connectedCallback` is called. Elements attach their client dom to\n * themselves at `ready` time which results from this first flush.\n * This provides an ordering guarantee that the client dom an element\n * creates is flushed before the element itself (i.e. client `ready`\n * fires before host `ready`).\n *\n * However, if `_flushProperties` is called *before* an element is connected,\n * as for example `Templatize` does, this ordering guarantee cannot be\n * satisfied because no elements are connected. (Note: Bound elements that\n * receive data do become enqueued clients and are properly ordered but\n * unbound elements are not.)\n *\n * To maintain the desired \"client before host\" ordering guarantee for this\n * case we rely on the \"host stack. Client nodes registers themselves with\n * the creating host element when created. This ensures that all client dom\n * is readied in the proper order, maintaining the desired guarantee.\n *\n * @private\n */\nconst hostStack = [];\n","/**\n@license\nCopyright (c) 2017 The Polymer Project Authors. All rights reserved.\nThis code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt\nThe complete set of authors may be found at http://polymer.github.io/AUTHORS.txt\nThe complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt\nCode distributed by Google as part of the polymer project is also\nsubject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt\n*/\n\n/**\n * Total number of Polymer element instances created.\n * @type {number}\n */\nexport let instanceCount = 0;\n\nexport function incrementInstanceCount() {\n  instanceCount++;\n}\n\n/**\n * Array of Polymer element classes that have been finalized.\n * @type {!Array<!PolymerElementConstructor>}\n */\nexport const registrations = [];\n\n/**\n * @param {!PolymerElementConstructor} prototype Element prototype to log\n * @private\n */\nfunction _regLog(prototype) {\n  console.log('[' + /** @type {?} */(prototype).is + ']: registered');\n}\n\n/**\n * Registers a class prototype for telemetry purposes.\n * @param {!PolymerElementConstructor} prototype Element prototype to register\n * @protected\n */\nexport function register(prototype) {\n  registrations.push(prototype);\n}\n\n/**\n * Logs all elements registered with an `is` to the console.\n * @public\n */\nexport function dumpRegistrations() {\n  registrations.forEach(_regLog);\n}","/**\n@license\nCopyright (c) 2017 The Polymer Project Authors. All rights reserved.\nThis code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt\nThe complete set of authors may be found at http://polymer.github.io/AUTHORS.txt\nThe complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt\nCode distributed by Google as part of the polymer project is also\nsubject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt\n*/\nimport '../utils/boot.js';\n\nimport { dedupingMixin } from '../utils/mixin.js';\nimport { register, incrementInstanceCount } from '../utils/telemetry.js';\nimport { PropertiesChanged } from './properties-changed.js';\n\n/**\n * Creates a copy of `props` with each property normalized such that\n * upgraded it is an object with at least a type property { type: Type}.\n *\n * @param {!Object} props Properties to normalize\n * @return {!Object} Copy of input `props` with normalized properties that\n * are in the form {type: Type}\n * @private\n */\nfunction normalizeProperties(props) {\n  const output = {};\n  for (let p in props) {\n    const o = props[p];\n    output[p] = (typeof o === 'function') ? {type: o} : o;\n  }\n  return output;\n}\n\n/**\n * Mixin that provides a minimal starting point to using the PropertiesChanged\n * mixin by providing a mechanism to declare properties in a static\n * getter (e.g. static get properties() { return { foo: String } }). Changes\n * are reported via the `_propertiesChanged` method.\n *\n * This mixin provides no specific support for rendering. Users are expected\n * to create a ShadowRoot and put content into it and update it in whatever\n * way makes sense. This can be done in reaction to properties changing by\n * implementing `_propertiesChanged`.\n *\n * @mixinFunction\n * @polymer\n * @appliesMixin PropertiesChanged\n * @summary Mixin that provides a minimal starting point for using\n * the PropertiesChanged mixin by providing a declarative `properties` object.\n * @template T\n * @param {function(new:T)} superClass Class to apply mixin to.\n * @return {function(new:T)} superClass with mixin applied.\n */\nexport const PropertiesMixin = dedupingMixin(superClass => {\n\n /**\n  * @constructor\n  * @implements {Polymer_PropertiesChanged}\n  * @private\n  */\n const base = PropertiesChanged(superClass);\n\n /**\n  * Returns the super class constructor for the given class, if it is an\n  * instance of the PropertiesMixin.\n  *\n  * @param {!PropertiesMixinConstructor} constructor PropertiesMixin constructor\n  * @return {?PropertiesMixinConstructor} Super class constructor\n  */\n function superPropertiesClass(constructor) {\n   const superCtor = Object.getPrototypeOf(constructor);\n\n   // Note, the `PropertiesMixin` class below only refers to the class\n   // generated by this call to the mixin; the instanceof test only works\n   // because the mixin is deduped and guaranteed only to apply once, hence\n   // all constructors in a proto chain will see the same `PropertiesMixin`\n   return (superCtor.prototype instanceof PropertiesMixin) ?\n     /** @type {!PropertiesMixinConstructor} */ (superCtor) : null;\n }\n\n /**\n  * Returns a memoized version of the `properties` object for the\n  * given class. Properties not in object format are converted to at\n  * least {type}.\n  *\n  * @param {PropertiesMixinConstructor} constructor PropertiesMixin constructor\n  * @return {Object} Memoized properties object\n  */\n function ownProperties(constructor) {\n   if (!constructor.hasOwnProperty(JSCompiler_renameProperty('__ownProperties', constructor))) {\n     let props = null;\n\n     if (constructor.hasOwnProperty(JSCompiler_renameProperty('properties', constructor))) {\n       const properties = constructor.properties;\n\n       if (properties) {\n        props = normalizeProperties(properties);\n       }\n     }\n\n     constructor.__ownProperties = props;\n   }\n   return constructor.__ownProperties;\n }\n\n /**\n  * @polymer\n  * @mixinClass\n  * @extends {base}\n  * @implements {Polymer_PropertiesMixin}\n  * @unrestricted\n  */\n class PropertiesMixin extends base {\n\n   /**\n    * Implements standard custom elements getter to observes the attributes\n    * listed in `properties`.\n    * @suppress {missingProperties} Interfaces in closure do not inherit statics, but classes do\n    * @nocollapse\n    */\n   static get observedAttributes() {\n     if (!this.hasOwnProperty(JSCompiler_renameProperty('__observedAttributes', this))) {\n       register(this.prototype);\n       const props = this._properties;\n       this.__observedAttributes = props ? Object.keys(props).map(p => this.prototype._addPropertyToAttributeMap(p)) : [];\n     }\n     return this.__observedAttributes;\n   }\n\n   /**\n    * Finalizes an element definition, including ensuring any super classes\n    * are also finalized. This includes ensuring property\n    * accessors exist on the element prototype. This method calls\n    * `_finalizeClass` to finalize each constructor in the prototype chain.\n    * @return {void}\n    * @nocollapse\n    */\n   static finalize() {\n     if (!this.hasOwnProperty(JSCompiler_renameProperty('__finalized', this))) {\n       const superCtor = superPropertiesClass(/** @type {!PropertiesMixinConstructor} */(this));\n       if (superCtor) {\n         superCtor.finalize();\n       }\n       this.__finalized = true;\n       this._finalizeClass();\n     }\n   }\n\n   /**\n    * Finalize an element class. This includes ensuring property\n    * accessors exist on the element prototype. This method is called by\n    * `finalize` and finalizes the class constructor.\n    *\n    * @protected\n    * @nocollapse\n    */\n   static _finalizeClass() {\n     const props = ownProperties(/** @type {!PropertiesMixinConstructor} */(this));\n     if (props) {\n       /** @type {?} */ (this).createProperties(props);\n     }\n   }\n\n   /**\n    * Returns a memoized version of all properties, including those inherited\n    * from super classes. Properties not in object format are converted to\n    * at least {type}.\n    *\n    * @return {Object} Object containing properties for this class\n    * @protected\n    * @nocollapse\n    */\n   static get _properties() {\n     if (!this.hasOwnProperty(\n       JSCompiler_renameProperty('__properties', this))) {\n       const superCtor = superPropertiesClass(/** @type {!PropertiesMixinConstructor} */(this));\n       this.__properties = Object.assign({},\n         superCtor && superCtor._properties,\n         ownProperties(/** @type {PropertiesMixinConstructor} */(this)));\n     }\n     return this.__properties;\n   }\n\n   /**\n    * Overrides `PropertiesChanged` method to return type specified in the\n    * static `properties` object for the given property.\n    * @param {string} name Name of property\n    * @return {*} Type to which to deserialize attribute\n    *\n    * @protected\n    * @nocollapse\n    */\n   static typeForProperty(name) {\n     const info = this._properties[name];\n     return info && info.type;\n   }\n\n   /**\n    * Overrides `PropertiesChanged` method and adds a call to\n    * `finalize` which lazily configures the element's property accessors.\n    * @override\n    * @return {void}\n    */\n   _initializeProperties() {\n     incrementInstanceCount();\n     this.constructor.finalize();\n     super._initializeProperties();\n   }\n\n   /**\n    * Called when the element is added to a document.\n    * Calls `_enableProperties` to turn on property system from\n    * `PropertiesChanged`.\n    * @suppress {missingProperties} Super may or may not implement the callback\n    * @return {void}\n    * @override\n    */\n   connectedCallback() {\n     if (super.connectedCallback) {\n       super.connectedCallback();\n     }\n     this._enableProperties();\n   }\n\n   /**\n    * Called when the element is removed from a document\n    * @suppress {missingProperties} Super may or may not implement the callback\n    * @return {void}\n    * @override\n    */\n   disconnectedCallback() {\n     if (super.disconnectedCallback) {\n       super.disconnectedCallback();\n     }\n   }\n\n }\n\n return PropertiesMixin;\n\n});\n","/**\n * @fileoverview\n * @suppress {checkPrototypalTypes}\n * @license Copyright (c) 2017 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at\n * http://polymer.github.io/LICENSE.txt The complete set of authors may be found\n * at http://polymer.github.io/AUTHORS.txt The complete set of contributors may\n * be found at http://polymer.github.io/CONTRIBUTORS.txt Code distributed by\n * Google as part of the polymer project is also subject to an additional IP\n * rights grant found at http://polymer.github.io/PATENTS.txt\n */\nimport '../utils/boot.js';\n\nimport { rootPath, strictTemplatePolicy, allowTemplateFromDomModule, legacyOptimizations, legacyWarnings, syncInitialRender, supportsAdoptingStyleSheets, useAdoptedStyleSheetsWithBuiltCSS } from '../utils/settings.js';\nimport { dedupingMixin } from '../utils/mixin.js';\nimport { stylesFromTemplate, stylesFromModuleImports } from '../utils/style-gather.js';\nimport { pathFromUrl, resolveCss, resolveUrl } from '../utils/resolve-url.js';\nimport { DomModule } from '../elements/dom-module.js';\nimport { PropertyEffects } from './property-effects.js';\nimport { PropertiesMixin } from './properties-mixin.js';\nimport { wrap } from '../utils/wrap.js';\n\n/**\n * Current Polymer version in Semver notation.\n * @type {string} Semver notation of the current version of Polymer.\n */\nexport const version = '3.5.1';\n\nexport const builtCSS = window.ShadyCSS && window.ShadyCSS['cssBuild'];\n\n/**\n * Element class mixin that provides the core API for Polymer's meta-programming\n * features including template stamping, data-binding, attribute deserialization,\n * and property change observation.\n *\n * Subclassers may provide the following static getters to return metadata\n * used to configure Polymer's features for the class:\n *\n * - `static get is()`: When the template is provided via a `dom-module`,\n *   users should return the `dom-module` id from a static `is` getter.  If\n *   no template is needed or the template is provided directly via the\n *   `template` getter, there is no need to define `is` for the element.\n *\n * - `static get template()`: Users may provide the template directly (as\n *   opposed to via `dom-module`) by implementing a static `template` getter.\n *   The getter must return an `HTMLTemplateElement`.\n *\n * - `static get properties()`: Should return an object describing\n *   property-related metadata used by Polymer features (key: property name\n *   value: object containing property metadata). Valid keys in per-property\n *   metadata include:\n *   - `type` (String|Number|Object|Array|...): Used by\n *     `attributeChangedCallback` to determine how string-based attributes\n *     are deserialized to JavaScript property values.\n *   - `notify` (boolean): Causes a change in the property to fire a\n *     non-bubbling event called `<property>-changed`. Elements that have\n *     enabled two-way binding to the property use this event to observe changes.\n *   - `readOnly` (boolean): Creates a getter for the property, but no setter.\n *     To set a read-only property, use the private setter method\n *     `_setProperty(property, value)`.\n *   - `observer` (string): Observer method name that will be called when\n *     the property changes. The arguments of the method are\n *     `(value, previousValue)`.\n *   - `computed` (string): String describing method and dependent properties\n *     for computing the value of this property (e.g. `'computeFoo(bar, zot)'`).\n *     Computed properties are read-only by default and can only be changed\n *     via the return value of the computing method.\n *\n * - `static get observers()`: Array of strings describing multi-property\n *   observer methods and their dependent properties (e.g.\n *   `'observeABC(a, b, c)'`).\n *\n * The base class provides default implementations for the following standard\n * custom element lifecycle callbacks; users may override these, but should\n * call the super method to ensure\n * - `constructor`: Run when the element is created or upgraded\n * - `connectedCallback`: Run each time the element is connected to the\n *   document\n * - `disconnectedCallback`: Run each time the element is disconnected from\n *   the document\n * - `attributeChangedCallback`: Run each time an attribute in\n *   `observedAttributes` is set or removed (note: this element's default\n *   `observedAttributes` implementation will automatically return an array\n *   of dash-cased attributes based on `properties`)\n *\n * @mixinFunction\n * @polymer\n * @appliesMixin PropertyEffects\n * @appliesMixin PropertiesMixin\n * @property rootPath {string} Set to the value of `rootPath`,\n *   which defaults to the main document path\n * @property importPath {string} Set to the value of the class's static\n *   `importPath` property, which defaults to the path of this element's\n *   `dom-module` (when `is` is used), but can be overridden for other\n *   import strategies.\n * @summary Element class mixin that provides the core API for Polymer's\n * meta-programming features.\n * @template T\n * @param {function(new:T)} superClass Class to apply mixin to.\n * @return {function(new:T)} superClass with mixin applied.\n */\nexport const ElementMixin = dedupingMixin(base => {\n  /**\n   * @constructor\n   * @implements {Polymer_PropertyEffects}\n   * @implements {Polymer_PropertiesMixin}\n   * @extends {HTMLElement}\n   * @private\n   */\n  const polymerElementBase = PropertiesMixin(PropertyEffects(base));\n\n  /**\n   * Returns a list of properties with default values.\n   * This list is created as an optimization since it is a subset of\n   * the list returned from `_properties`.\n   * This list is used in `_initializeProperties` to set property defaults.\n   *\n   * @param {PolymerElementConstructor} constructor Element class\n   * @return {PolymerElementProperties} Flattened properties for this class\n   *   that have default values\n   * @private\n   */\n  function propertyDefaults(constructor) {\n    if (!constructor.hasOwnProperty(\n      JSCompiler_renameProperty('__propertyDefaults', constructor))) {\n      constructor.__propertyDefaults = null;\n      let props = constructor._properties;\n      for (let p in props) {\n        let info = props[p];\n        if ('value' in info) {\n          constructor.__propertyDefaults = constructor.__propertyDefaults || {};\n          constructor.__propertyDefaults[p] = info;\n        }\n      }\n    }\n    return constructor.__propertyDefaults;\n  }\n\n  /**\n   * Returns a memoized version of the `observers` array.\n   * @param {PolymerElementConstructor} constructor Element class\n   * @return {Array} Array containing own observers for the given class\n   * @protected\n   */\n  function ownObservers(constructor) {\n    if (!constructor.hasOwnProperty(\n      JSCompiler_renameProperty('__ownObservers', constructor))) {\n      constructor.__ownObservers =\n          constructor.hasOwnProperty(\n              JSCompiler_renameProperty('observers', constructor)) ?\n          /** @type {PolymerElementConstructor} */ (constructor).observers :\n          null;\n    }\n    return constructor.__ownObservers;\n  }\n\n  /**\n   * Creates effects for a property.\n   *\n   * Note, once a property has been set to\n   * `readOnly`, `computed`, `reflectToAttribute`, or `notify`\n   * these values may not be changed. For example, a subclass cannot\n   * alter these settings. However, additional `observers` may be added\n   * by subclasses.\n   *\n   * The info object should contain property metadata as follows:\n   *\n   * * `type`: {function} type to which an attribute matching the property\n   * is deserialized. Note the property is camel-cased from a dash-cased\n   * attribute. For example, 'foo-bar' attribute is deserialized to a\n   * property named 'fooBar'.\n   *\n   * * `readOnly`: {boolean} creates a readOnly property and\n   * makes a private setter for the private of the form '_setFoo' for a\n   * property 'foo',\n   *\n   * * `computed`: {string} creates a computed property. A computed property\n   * is also automatically set to `readOnly: true`. The value is calculated\n   * by running a method and arguments parsed from the given string. For\n   * example 'compute(foo)' will compute a given property when the\n   * 'foo' property changes by executing the 'compute' method. This method\n   * must return the computed value.\n   *\n   * * `reflectToAttribute`: {boolean} If true, the property value is reflected\n   * to an attribute of the same name. Note, the attribute is dash-cased\n   * so a property named 'fooBar' is reflected as 'foo-bar'.\n   *\n   * * `notify`: {boolean} sends a non-bubbling notification event when\n   * the property changes. For example, a property named 'foo' sends an\n   * event named 'foo-changed' with `event.detail` set to the value of\n   * the property.\n   *\n   * * observer: {string} name of a method that runs when the property\n   * changes. The arguments of the method are (value, previousValue).\n   *\n   * Note: Users may want control over modifying property\n   * effects via subclassing. For example, a user might want to make a\n   * reflectToAttribute property not do so in a subclass. We've chosen to\n   * disable this because it leads to additional complication.\n   * For example, a readOnly effect generates a special setter. If a subclass\n   * disables the effect, the setter would fail unexpectedly.\n   * Based on feedback, we may want to try to make effects more malleable\n   * and/or provide an advanced api for manipulating them.\n   *\n   * @param {!PolymerElement} proto Element class prototype to add accessors\n   *   and effects to\n   * @param {string} name Name of the property.\n   * @param {Object} info Info object from which to create property effects.\n   * Supported keys:\n   * @param {Object} allProps Flattened map of all properties defined in this\n   *   element (including inherited properties)\n   * @return {void}\n   * @private\n   */\n  function createPropertyFromConfig(proto, name, info, allProps) {\n    // computed forces readOnly...\n    if (info.computed) {\n      info.readOnly = true;\n    }\n    // Note, since all computed properties are readOnly, this prevents\n    // adding additional computed property effects (which leads to a confusing\n    // setup where multiple triggers for setting a property)\n    // While we do have `hasComputedEffect` this is set on the property's\n    // dependencies rather than itself.\n    if (info.computed) {\n      if (proto._hasReadOnlyEffect(name)) {\n        console.warn(`Cannot redefine computed property '${name}'.`);\n      } else {\n        proto._createComputedProperty(name, info.computed, allProps);\n      }\n    }\n    if (info.readOnly && !proto._hasReadOnlyEffect(name)) {\n      proto._createReadOnlyProperty(name, !info.computed);\n    } else if (info.readOnly === false && proto._hasReadOnlyEffect(name)) {\n      console.warn(`Cannot make readOnly property '${name}' non-readOnly.`);\n    }\n    if (info.reflectToAttribute && !proto._hasReflectEffect(name)) {\n      proto._createReflectedProperty(name);\n    } else if (info.reflectToAttribute === false && proto._hasReflectEffect(name)) {\n      console.warn(`Cannot make reflected property '${name}' non-reflected.`);\n    }\n    if (info.notify && !proto._hasNotifyEffect(name)) {\n      proto._createNotifyingProperty(name);\n    } else if (info.notify === false && proto._hasNotifyEffect(name)) {\n      console.warn(`Cannot make notify property '${name}' non-notify.`);\n    }\n    // always add observer\n    if (info.observer) {\n      proto._createPropertyObserver(name, info.observer, allProps[info.observer]);\n    }\n    // always create the mapping from attribute back to property for deserialization.\n    proto._addPropertyToAttributeMap(name);\n  }\n\n  /**\n   * Process all style elements in the element template. Styles with the\n   * `include` attribute are processed such that any styles in\n   * the associated \"style modules\" are included in the element template.\n   * @param {PolymerElementConstructor} klass Element class\n   * @param {!HTMLTemplateElement} template Template to process\n   * @param {string} is Name of element\n   * @param {string} baseURI Base URI for element\n   * @private\n   */\n  function processElementStyles(klass, template, is, baseURI) {\n    if (!builtCSS) {\n      const templateStyles = template.content.querySelectorAll('style');\n      const stylesWithImports = stylesFromTemplate(template);\n      // insert styles from <link rel=\"import\" type=\"css\"> at the top of the template\n      const linkedStyles = stylesFromModuleImports(is);\n      const firstTemplateChild = template.content.firstElementChild;\n      for (let idx = 0; idx < linkedStyles.length; idx++) {\n        let s = linkedStyles[idx];\n        s.textContent = klass._processStyleText(s.textContent, baseURI);\n        template.content.insertBefore(s, firstTemplateChild);\n      }\n      // keep track of the last \"concrete\" style in the template we have encountered\n      let templateStyleIndex = 0;\n      // ensure all gathered styles are actually in this template.\n      for (let i = 0; i < stylesWithImports.length; i++) {\n        let s = stylesWithImports[i];\n        let templateStyle = templateStyles[templateStyleIndex];\n        // if the style is not in this template, it's been \"included\" and\n        // we put a clone of it in the template before the style that included it\n        if (templateStyle !== s) {\n          s = s.cloneNode(true);\n          templateStyle.parentNode.insertBefore(s, templateStyle);\n        } else {\n          templateStyleIndex++;\n        }\n        s.textContent = klass._processStyleText(s.textContent, baseURI);\n      }\n    }\n    if (window.ShadyCSS) {\n      window.ShadyCSS.prepareTemplate(template, is);\n    }\n    // Support for `adoptedStylesheets` relies on using native Shadow DOM\n    // and built CSS. Built CSS is required because runtime transformation of\n    // `@apply` is not supported. This is because ShadyCSS relies on being able\n    // to update a `style` element in the element template and this is\n    // removed when using `adoptedStyleSheets`.\n    // Note, it would be more efficient to allow style includes to become\n    // separate stylesheets; however, because of `@apply` these are\n    // potentially not shareable and sharing the ones that could be shared\n    // would require some coordination. To keep it simple, all the includes\n    // and styles are collapsed into a single shareable stylesheet.\n    if (useAdoptedStyleSheetsWithBuiltCSS && builtCSS &&\n        supportsAdoptingStyleSheets) {\n      // Remove styles in template and make a shareable stylesheet\n      const styles = template.content.querySelectorAll('style');\n      if (styles) {\n        let css = '';\n        Array.from(styles).forEach(s => {\n          css += s.textContent;\n          s.parentNode.removeChild(s);\n        });\n        klass._styleSheet = new CSSStyleSheet();\n        klass._styleSheet.replaceSync(css);\n      }\n    }\n  }\n\n  /**\n   * Look up template from dom-module for element\n   *\n   * @param {string} is Element name to look up\n   * @return {?HTMLTemplateElement|undefined} Template found in dom module, or\n   *   undefined if not found\n   * @protected\n   */\n  function getTemplateFromDomModule(is) {\n    let template = null;\n    // Under strictTemplatePolicy in 3.x+, dom-module lookup is only allowed\n    // when opted-in via allowTemplateFromDomModule\n    if (is && (!strictTemplatePolicy || allowTemplateFromDomModule)) {\n      template = /** @type {?HTMLTemplateElement} */ (\n          DomModule.import(is, 'template'));\n      // Under strictTemplatePolicy, require any element with an `is`\n      // specified to have a dom-module\n      if (strictTemplatePolicy && !template) {\n        throw new Error(`strictTemplatePolicy: expecting dom-module or null template for ${is}`);\n      }\n    }\n    return template;\n  }\n\n  /**\n   * @polymer\n   * @mixinClass\n   * @unrestricted\n   * @implements {Polymer_ElementMixin}\n   * @extends {polymerElementBase}\n   */\n  class PolymerElement extends polymerElementBase {\n\n    /**\n     * Current Polymer version in Semver notation.\n     * @type {string} Semver notation of the current version of Polymer.\n     * @nocollapse\n     */\n    static get polymerElementVersion() {\n      return version;\n    }\n\n    /**\n     * Override of PropertiesMixin _finalizeClass to create observers and\n     * find the template.\n     * @return {void}\n     * @protected\n     * @suppress {missingProperties} Interfaces in closure do not inherit statics, but classes do\n     * @nocollapse\n     */\n    static _finalizeClass() {\n      // TODO(https://github.com/google/closure-compiler/issues/3240):\n      //     Change back to just super.methodCall()\n      polymerElementBase._finalizeClass.call(this);\n      const observers = ownObservers(this);\n      if (observers) {\n        this.createObservers(observers, this._properties);\n      }\n      this._prepareTemplate();\n    }\n\n    /** @nocollapse */\n    static _prepareTemplate() {\n      // note: create \"working\" template that is finalized at instance time\n      let template = /** @type {PolymerElementConstructor} */ (this).template;\n      if (template) {\n        if (typeof template === 'string') {\n          console.error('template getter must return HTMLTemplateElement');\n          template = null;\n        } else if (!legacyOptimizations) {\n          template = template.cloneNode(true);\n        }\n      }\n\n      /** @override */\n      this.prototype._template = template;\n    }\n\n    /**\n     * Override of PropertiesChanged createProperties to create accessors\n     * and property effects for all of the properties.\n     * @param {!Object} props .\n     * @return {void}\n     * @protected\n     * @nocollapse\n     */\n    static createProperties(props) {\n      for (let p in props) {\n        createPropertyFromConfig(\n            /** @type {?} */ (this.prototype), p, props[p], props);\n      }\n    }\n\n    /**\n     * Creates observers for the given `observers` array.\n     * Leverages `PropertyEffects` to create observers.\n     * @param {Object} observers Array of observer descriptors for\n     *   this class\n     * @param {Object} dynamicFns Object containing keys for any properties\n     *   that are functions and should trigger the effect when the function\n     *   reference is changed\n     * @return {void}\n     * @protected\n     * @nocollapse\n     */\n    static createObservers(observers, dynamicFns) {\n      const proto = this.prototype;\n      for (let i=0; i < observers.length; i++) {\n        proto._createMethodObserver(observers[i], dynamicFns);\n      }\n    }\n\n    /**\n     * Returns the template that will be stamped into this element's shadow root.\n     *\n     * If a `static get is()` getter is defined, the default implementation will\n     * return the first `<template>` in a `dom-module` whose `id` matches this\n     * element's `is` (note that a `_template` property on the class prototype\n     * takes precedence over the `dom-module` template, to maintain legacy\n     * element semantics; a subclass will subsequently fall back to its super\n     * class template if neither a `prototype._template` or a `dom-module` for\n     * the class's `is` was found).\n     *\n     * Users may override this getter to return an arbitrary template\n     * (in which case the `is` getter is unnecessary). The template returned\n     * must be an `HTMLTemplateElement`.\n     *\n     * Note that when subclassing, if the super class overrode the default\n     * implementation and the subclass would like to provide an alternate\n     * template via a `dom-module`, it should override this getter and\n     * return `DomModule.import(this.is, 'template')`.\n     *\n     * If a subclass would like to modify the super class template, it should\n     * clone it rather than modify it in place.  If the getter does expensive\n     * work such as cloning/modifying a template, it should memoize the\n     * template for maximum performance:\n     *\n     *   let memoizedTemplate;\n     *   class MySubClass extends MySuperClass {\n     *     static get template() {\n     *       if (!memoizedTemplate) {\n     *         memoizedTemplate = super.template.cloneNode(true);\n     *         let subContent = document.createElement('div');\n     *         subContent.textContent = 'This came from MySubClass';\n     *         memoizedTemplate.content.appendChild(subContent);\n     *       }\n     *       return memoizedTemplate;\n     *     }\n     *   }\n     *\n     * @return {!HTMLTemplateElement|string} Template to be stamped\n     * @nocollapse\n     */\n    static get template() {\n      // Explanation of template-related properties:\n      // - constructor.template (this getter): the template for the class.\n      //     This can come from the prototype (for legacy elements), from a\n      //     dom-module, or from the super class's template (or can be overridden\n      //     altogether by the user)\n      // - constructor._template: memoized version of constructor.template\n      // - prototype._template: working template for the element, which will be\n      //     parsed and modified in place. It is a cloned version of\n      //     constructor.template, saved in _finalizeClass(). Note that before\n      //     this getter is called, for legacy elements this could be from a\n      //     _template field on the info object passed to Polymer(), a behavior,\n      //     or set in registered(); once the static getter runs, a clone of it\n      //     will overwrite it on the prototype as the working template.\n      if (!this.hasOwnProperty(JSCompiler_renameProperty('_template', this))) {\n        let protoTemplate = this.prototype.hasOwnProperty(\n          JSCompiler_renameProperty('_template', this.prototype)) ?\n          this.prototype._template : undefined;\n        // Accept a function for the legacy Polymer({_template:...}) field for\n        // lazy parsing\n        if (typeof protoTemplate === 'function') {\n          protoTemplate = protoTemplate();\n        }\n        this._template =\n          // If user has put template on prototype (e.g. in legacy via registered\n          // callback or info object), prefer that first. Note that `null` is\n          // used as a sentinel to indicate \"no template\" and can be used to\n          // override a super template, whereas `undefined` is used as a\n          // sentinel to mean \"fall-back to default template lookup\" via\n          // dom-module and/or super.template.\n          protoTemplate !== undefined ? protoTemplate :\n          // Look in dom-module associated with this element's is\n          ((this.hasOwnProperty(JSCompiler_renameProperty('is', this)) &&\n          (getTemplateFromDomModule(/** @type {PolymerElementConstructor}*/ (this).is))) ||\n          // Next look for superclass template (call the super impl this\n          // way so that `this` points to the superclass)\n          Object.getPrototypeOf(/** @type {PolymerElementConstructor}*/ (this).prototype).constructor.template);\n      }\n      return this._template;\n    }\n\n    /**\n     * Set the template.\n     *\n     * @param {!HTMLTemplateElement|string} value Template to set.\n     * @nocollapse\n     */\n    static set template(value) {\n      this._template = value;\n    }\n\n    /**\n     * Path matching the url from which the element was imported.\n     *\n     * This path is used to resolve url's in template style cssText.\n     * The `importPath` property is also set on element instances and can be\n     * used to create bindings relative to the import path.\n     *\n     * For elements defined in ES modules, users should implement\n     * `static get importMeta() { return import.meta; }`, and the default\n     * implementation of `importPath` will  return `import.meta.url`'s path.\n     * For elements defined in HTML imports, this getter will return the path\n     * to the document containing a `dom-module` element matching this\n     * element's static `is` property.\n     *\n     * Note, this path should contain a trailing `/`.\n     *\n     * @return {string} The import path for this element class\n     * @suppress {missingProperties}\n     * @nocollapse\n     */\n    static get importPath() {\n      if (!this.hasOwnProperty(JSCompiler_renameProperty('_importPath', this))) {\n        const meta = this.importMeta;\n        if (meta) {\n          this._importPath = pathFromUrl(meta.url);\n        } else {\n          const module = DomModule.import(/** @type {PolymerElementConstructor} */ (this).is);\n          this._importPath = (module && module.assetpath) ||\n            Object.getPrototypeOf(/** @type {PolymerElementConstructor}*/ (this).prototype).constructor.importPath;\n        }\n      }\n      return this._importPath;\n    }\n\n    constructor() {\n      super();\n      /** @type {HTMLTemplateElement} */\n      this._template;\n      /** @type {string} */\n      this._importPath;\n      /** @type {string} */\n      this.rootPath;\n      /** @type {string} */\n      this.importPath;\n      /** @type {StampedTemplate | HTMLElement | ShadowRoot} */\n      this.root;\n      /** @type {!Object<string, !Element>} */\n      this.$;\n    }\n\n    /**\n     * Overrides the default `PropertyAccessors` to ensure class\n     * metaprogramming related to property accessors and effects has\n     * completed (calls `finalize`).\n     *\n     * It also initializes any property defaults provided via `value` in\n     * `properties` metadata.\n     *\n     * @return {void}\n     * @override\n     * @suppress {invalidCasts,missingProperties} go/missingfnprops\n     */\n    _initializeProperties() {\n      this.constructor.finalize();\n      // note: finalize template when we have access to `localName` to\n      // avoid dependence on `is` for polyfilling styling.\n      this.constructor._finalizeTemplate(/** @type {!HTMLElement} */(this).localName);\n      super._initializeProperties();\n      // set path defaults\n      this.rootPath = rootPath;\n      this.importPath = this.constructor.importPath;\n      // apply property defaults...\n      let p$ = propertyDefaults(this.constructor);\n      if (!p$) {\n        return;\n      }\n      for (let p in p$) {\n        let info = p$[p];\n        if (this._canApplyPropertyDefault(p)) {\n          let value = typeof info.value == 'function' ?\n            info.value.call(this) :\n            info.value;\n          // Set via `_setProperty` if there is an accessor, to enable\n          // initializing readOnly property defaults\n          if (this._hasAccessor(p)) {\n            this._setPendingProperty(p, value, true);\n          } else {\n            this[p] = value;\n          }\n        }\n      }\n    }\n\n    /**\n     * Determines if a property dfeault can be applied. For example, this\n     * prevents a default from being applied when a property that has no\n     * accessor is overridden by its host before upgrade (e.g. via a binding).\n     * @override\n     * @param {string} property Name of the property\n     * @return {boolean} Returns true if the property default can be applied.\n     */\n    _canApplyPropertyDefault(property) {\n      return !this.hasOwnProperty(property);\n    }\n\n    /**\n     * Gather style text for a style element in the template.\n     *\n     * @param {string} cssText Text containing styling to process\n     * @param {string} baseURI Base URI to rebase CSS paths against\n     * @return {string} The processed CSS text\n     * @protected\n     * @nocollapse\n     */\n    static _processStyleText(cssText, baseURI) {\n      return resolveCss(cssText, baseURI);\n    }\n\n    /**\n    * Configures an element `proto` to function with a given `template`.\n    * The element name `is` and extends `ext` must be specified for ShadyCSS\n    * style scoping.\n    *\n    * @param {string} is Tag name (or type extension name) for this element\n    * @return {void}\n    * @protected\n    * @nocollapse\n    */\n    static _finalizeTemplate(is) {\n      /** @const {HTMLTemplateElement} */\n      const template = this.prototype._template;\n      if (template && !template.__polymerFinalized) {\n        template.__polymerFinalized = true;\n        const importPath = this.importPath;\n        const baseURI = importPath ? resolveUrl(importPath) : '';\n        // e.g. support `include=\"module-name\"`, and ShadyCSS\n        processElementStyles(this, template, is, baseURI);\n        this.prototype._bindTemplate(template);\n      }\n    }\n\n    /**\n     * Provides a default implementation of the standard Custom Elements\n     * `connectedCallback`.\n     *\n     * The default implementation enables the property effects system and\n     * flushes any pending properties, and updates shimmed CSS properties\n     * when using the ShadyCSS scoping/custom properties polyfill.\n     *\n     * @override\n     * @suppress {missingProperties, invalidCasts} Super may or may not\n     *     implement the callback\n     * @return {void}\n     */\n    connectedCallback() {\n      if (window.ShadyCSS && this._template) {\n        window.ShadyCSS.styleElement(/** @type {!HTMLElement} */(this));\n      }\n      super.connectedCallback();\n    }\n\n    /**\n     * Stamps the element template.\n     *\n     * @return {void}\n     * @override\n     */\n    ready() {\n      if (this._template) {\n        this.root = this._stampTemplate(this._template);\n        this.$ = this.root.$;\n      }\n      super.ready();\n    }\n\n    /**\n     * Implements `PropertyEffects`'s `_readyClients` call. Attaches\n     * element dom by calling `_attachDom` with the dom stamped from the\n     * element's template via `_stampTemplate`. Note that this allows\n     * client dom to be attached to the element prior to any observers\n     * running.\n     *\n     * @return {void}\n     * @override\n     */\n    _readyClients() {\n      if (this._template) {\n        this.root = this._attachDom(/** @type {StampedTemplate} */(this.root));\n      }\n      // The super._readyClients here sets the clients initialized flag.\n      // We must wait to do this until after client dom is created/attached\n      // so that this flag can be checked to prevent notifications fired\n      // during this process from being handled before clients are ready.\n      super._readyClients();\n    }\n\n\n    /**\n     * Attaches an element's stamped dom to itself. By default,\n     * this method creates a `shadowRoot` and adds the dom to it.\n     * However, this method may be overridden to allow an element\n     * to put its dom in another location.\n     *\n     * @override\n     * @throws {Error}\n     * @suppress {missingReturn}\n     * @param {StampedTemplate} dom to attach to the element.\n     * @return {ShadowRoot} node to which the dom has been attached.\n     */\n    _attachDom(dom) {\n      const n = wrap(this);\n      if (n.attachShadow) {\n        if (dom) {\n          if (!n.shadowRoot) {\n            n.attachShadow({mode: 'open', shadyUpgradeFragment: dom});\n            n.shadowRoot.appendChild(dom);\n            // When `adoptedStyleSheets` is supported a stylesheet is made\n            // available on the element constructor.\n            if (this.constructor._styleSheet) {\n              n.shadowRoot.adoptedStyleSheets = [this.constructor._styleSheet];\n            }\n          }\n          if (syncInitialRender && window.ShadyDOM) {\n            window.ShadyDOM.flushInitial(n.shadowRoot);\n          }\n          return n.shadowRoot;\n        }\n        return null;\n      } else {\n        throw new Error('ShadowDOM not available. ' +\n          // TODO(sorvell): move to compile-time conditional when supported\n        'PolymerElement can create dom as children instead of in ' +\n        'ShadowDOM by setting `this.root = this;\\` before \\`ready\\`.');\n      }\n    }\n\n    /**\n     * When using the ShadyCSS scoping and custom property shim, causes all\n     * shimmed styles in this element (and its subtree) to be updated\n     * based on current custom property values.\n     *\n     * The optional parameter overrides inline custom property styles with an\n     * object of properties where the keys are CSS properties, and the values\n     * are strings.\n     *\n     * Example: `this.updateStyles({'--color': 'blue'})`\n     *\n     * These properties are retained unless a value of `null` is set.\n     *\n     * Note: This function does not support updating CSS mixins.\n     * You can not dynamically change the value of an `@apply`.\n     *\n     * @override\n     * @param {Object=} properties Bag of custom property key/values to\n     *   apply to this element.\n     * @return {void}\n     * @suppress {invalidCasts}\n     */\n    updateStyles(properties) {\n      if (window.ShadyCSS) {\n        window.ShadyCSS.styleSubtree(/** @type {!HTMLElement} */(this), properties);\n      }\n    }\n\n    /**\n     * Rewrites a given URL relative to a base URL. The base URL defaults to\n     * the original location of the document containing the `dom-module` for\n     * this element. This method will return the same URL before and after\n     * bundling.\n     *\n     * Note that this function performs no resolution for URLs that start\n     * with `/` (absolute URLs) or `#` (hash identifiers).  For general purpose\n     * URL resolution, use `window.URL`.\n     *\n     * @override\n     * @param {string} url URL to resolve.\n     * @param {string=} base Optional base URL to resolve against, defaults\n     * to the element's `importPath`\n     * @return {string} Rewritten URL relative to base\n     */\n    resolveUrl(url, base) {\n      if (!base && this.importPath) {\n        base = resolveUrl(this.importPath);\n      }\n      return resolveUrl(url, base);\n    }\n\n    /**\n     * Overrides `PropertyEffects` to add map of dynamic functions on\n     * template info, for consumption by `PropertyEffects` template binding\n     * code. This map determines which method templates should have accessors\n     * created for them.\n     *\n     * @param {!HTMLTemplateElement} template Template\n     * @param {!TemplateInfo} templateInfo Template metadata for current template\n     * @param {!NodeInfo} nodeInfo Node metadata for current template.\n     * @return {boolean} .\n     * @suppress {missingProperties} Interfaces in closure do not inherit statics, but classes do\n     * @nocollapse\n     */\n    static _parseTemplateContent(template, templateInfo, nodeInfo) {\n      templateInfo.dynamicFns = templateInfo.dynamicFns || this._properties;\n      // TODO(https://github.com/google/closure-compiler/issues/3240):\n      //     Change back to just super.methodCall()\n      return polymerElementBase._parseTemplateContent.call(\n        this, template, templateInfo, nodeInfo);\n    }\n\n    /**\n     * Overrides `PropertyEffects` to warn on use of undeclared properties in\n     * template.\n     *\n     * @param {Object} templateInfo Template metadata to add effect to\n     * @param {string} prop Property that should trigger the effect\n     * @param {Object=} effect Effect metadata object\n     * @return {void}\n     * @protected\n     * @suppress {missingProperties} Interfaces in closure do not inherit statics, but classes do\n     * @nocollapse\n     */\n    static _addTemplatePropertyEffect(templateInfo, prop, effect) {\n      // Warn if properties are used in template without being declared.\n      // Properties must be listed in `properties` to be included in\n      // `observedAttributes` since CE V1 reads that at registration time, and\n      // since we want to keep template parsing lazy, we can't automatically\n      // add undeclared properties used in templates to `observedAttributes`.\n      // The warning is only enabled in `legacyOptimizations` mode, since\n      // we don't want to spam existing users who might have adopted the\n      // shorthand when attribute deserialization is not important.\n      if (legacyWarnings && !(prop in this._properties) &&\n          // Methods used in templates with no dependencies (or only literal\n          // dependencies) become accessors with template effects; ignore these\n          !(effect.info.part.signature && effect.info.part.signature.static) &&\n          // Warnings for bindings added to nested templates are handled by\n          // templatizer so ignore both the host-to-template bindings\n          // (`hostProp`) and TemplateInstance-to-child bindings\n          // (`nestedTemplate`)\n          !effect.info.part.hostProp && !templateInfo.nestedTemplate) {\n        console.warn(`Property '${prop}' used in template but not declared in 'properties'; ` +\n          `attribute will not be observed.`);\n      }\n      // TODO(https://github.com/google/closure-compiler/issues/3240):\n      //     Change back to just super.methodCall()\n      return polymerElementBase._addTemplatePropertyEffect.call(\n        this, templateInfo, prop, effect);\n    }\n\n  }\n\n  return PolymerElement;\n});\n\n/**\n * When using the ShadyCSS scoping and custom property shim, causes all\n * shimmed `styles` (via `custom-style`) in the document (and its subtree)\n * to be updated based on current custom property values.\n *\n * The optional parameter overrides inline custom property styles with an\n * object of properties where the keys are CSS properties, and the values\n * are strings.\n *\n * Example: `updateStyles({'--color': 'blue'})`\n *\n * These properties are retained unless a value of `null` is set.\n *\n * @param {Object=} props Bag of custom property key/values to\n *   apply to the document.\n * @return {void}\n */\nexport const updateStyles = function(props) {\n  if (window.ShadyCSS) {\n    window.ShadyCSS.styleDocument(props);\n  }\n};\n","/**\n@license\nCopyright (c) 2017 The Polymer Project Authors. All rights reserved.\nThis code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt\nThe complete set of authors may be found at http://polymer.github.io/AUTHORS.txt\nThe complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt\nCode distributed by Google as part of the polymer project is also\nsubject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt\n*/\nimport './boot.js';\n\nimport './mixin.js';\nimport './async.js';\n\n/**\n * @summary Collapse multiple callbacks into one invocation after a timer.\n */\nexport class Debouncer {\n  constructor() {\n    this._asyncModule = null;\n    this._callback = null;\n    this._timer = null;\n  }\n  /**\n   * Sets the scheduler; that is, a module with the Async interface,\n   * a callback and optional arguments to be passed to the run function\n   * from the async module.\n   *\n   * @param {!AsyncInterface} asyncModule Object with Async interface.\n   * @param {function()} callback Callback to run.\n   * @return {void}\n   */\n  setConfig(asyncModule, callback) {\n    this._asyncModule = asyncModule;\n    this._callback = callback;\n    this._timer = this._asyncModule.run(() => {\n      this._timer = null;\n      debouncerQueue.delete(this);\n      this._callback();\n    });\n  }\n  /**\n   * Cancels an active debouncer and returns a reference to itself.\n   *\n   * @return {void}\n   */\n  cancel() {\n    if (this.isActive()) {\n      this._cancelAsync();\n      // Canceling a debouncer removes its spot from the flush queue,\n      // so if a debouncer is manually canceled and re-debounced, it\n      // will reset its flush order (this is a very minor difference from 1.x)\n      // Re-debouncing via the `debounce` API retains the 1.x FIFO flush order\n      debouncerQueue.delete(this);\n    }\n  }\n  /**\n   * Cancels a debouncer's async callback.\n   *\n   * @return {void}\n   */\n  _cancelAsync() {\n    if (this.isActive()) {\n      this._asyncModule.cancel(/** @type {number} */(this._timer));\n      this._timer = null;\n    }\n  }\n  /**\n   * Flushes an active debouncer and returns a reference to itself.\n   *\n   * @return {void}\n   */\n  flush() {\n    if (this.isActive()) {\n      this.cancel();\n      this._callback();\n    }\n  }\n  /**\n   * Returns true if the debouncer is active.\n   *\n   * @return {boolean} True if active.\n   */\n  isActive() {\n    return this._timer != null;\n  }\n  /**\n   * Creates a debouncer if no debouncer is passed as a parameter\n   * or it cancels an active debouncer otherwise. The following\n   * example shows how a debouncer can be called multiple times within a\n   * microtask and \"debounced\" such that the provided callback function is\n   * called once. Add this method to a custom element:\n   *\n   * ```js\n   * import {microTask} from '@polymer/polymer/lib/utils/async.js';\n   * import {Debouncer} from '@polymer/polymer/lib/utils/debounce.js';\n   * // ...\n   *\n   * _debounceWork() {\n   *   this._debounceJob = Debouncer.debounce(this._debounceJob,\n   *       microTask, () => this._doWork());\n   * }\n   * ```\n   *\n   * If the `_debounceWork` method is called multiple times within the same\n   * microtask, the `_doWork` function will be called only once at the next\n   * microtask checkpoint.\n   *\n   * Note: In testing it is often convenient to avoid asynchrony. To accomplish\n   * this with a debouncer, you can use `enqueueDebouncer` and\n   * `flush`. For example, extend the above example by adding\n   * `enqueueDebouncer(this._debounceJob)` at the end of the\n   * `_debounceWork` method. Then in a test, call `flush` to ensure\n   * the debouncer has completed.\n   *\n   * @param {Debouncer?} debouncer Debouncer object.\n   * @param {!AsyncInterface} asyncModule Object with Async interface\n   * @param {function()} callback Callback to run.\n   * @return {!Debouncer} Returns a debouncer object.\n   */\n  static debounce(debouncer, asyncModule, callback) {\n    if (debouncer instanceof Debouncer) {\n      // Cancel the async callback, but leave in debouncerQueue if it was\n      // enqueued, to maintain 1.x flush order\n      debouncer._cancelAsync();\n    } else {\n      debouncer = new Debouncer();\n    }\n    debouncer.setConfig(asyncModule, callback);\n    return debouncer;\n  }\n}\n\nlet debouncerQueue = new Set();\n\n/**\n * Adds a `Debouncer` to a list of globally flushable tasks.\n *\n * @param {!Debouncer} debouncer Debouncer to enqueue\n * @return {void}\n */\nexport const enqueueDebouncer = function(debouncer) {\n  debouncerQueue.add(debouncer);\n};\n\n/**\n * Flushes any enqueued debouncers\n *\n * @return {boolean} Returns whether any debouncers were flushed\n */\nexport const flushDebouncers = function() {\n  const didFlush = Boolean(debouncerQueue.size);\n  // If new debouncers are added while flushing, Set.forEach will ensure\n  // newly added ones are also flushed\n  debouncerQueue.forEach(debouncer => {\n    try {\n      debouncer.flush();\n    } catch(e) {\n      setTimeout(() => {\n        throw e;\n      });\n    }\n  });\n  return didFlush;\n};","/**\n@license\nCopyright (c) 2017 The Polymer Project Authors. All rights reserved.\nThis code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt\nThe complete set of authors may be found at http://polymer.github.io/AUTHORS.txt\nThe complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt\nCode distributed by Google as part of the polymer project is also\nsubject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt\n*/\n\n/**\n * @fileoverview\n *\n * Module for adding listeners to a node for the following normalized\n * cross-platform \"gesture\" events:\n * - `down` - mouse or touch went down\n * - `up` - mouse or touch went up\n * - `tap` - mouse click or finger tap\n * - `track` - mouse drag or touch move\n *\n * @summary Module for adding cross-platform gesture event listeners.\n */\n\nimport './boot.js';\n\nimport { timeOut, microTask } from './async.js';\nimport { Debouncer } from './debounce.js';\nimport { passiveTouchGestures, cancelSyntheticClickEvents } from './settings.js';\nimport { wrap } from './wrap.js';\n\n// detect native touch action support\nlet HAS_NATIVE_TA = typeof document.head.style.touchAction === 'string';\nlet GESTURE_KEY = '__polymerGestures';\nlet HANDLED_OBJ = '__polymerGesturesHandled';\nlet TOUCH_ACTION = '__polymerGesturesTouchAction';\n// radius for tap and track\nlet TAP_DISTANCE = 25;\nlet TRACK_DISTANCE = 5;\n// number of last N track positions to keep\nlet TRACK_LENGTH = 2;\n\n// Disabling \"mouse\" handlers for 2500ms is enough\nlet MOUSE_TIMEOUT = 2500;\nlet MOUSE_EVENTS = ['mousedown', 'mousemove', 'mouseup', 'click'];\n// an array of bitmask values for mapping MouseEvent.which to MouseEvent.buttons\nlet MOUSE_WHICH_TO_BUTTONS = [0, 1, 4, 2];\nlet MOUSE_HAS_BUTTONS = (function() {\n  try {\n    return new MouseEvent('test', {buttons: 1}).buttons === 1;\n  } catch (e) {\n    return false;\n  }\n})();\n\n/**\n * @param {string} name Possible mouse event name\n * @return {boolean} true if mouse event, false if not\n */\nfunction isMouseEvent(name) {\n  return MOUSE_EVENTS.indexOf(name) > -1;\n}\n\n/* eslint no-empty: [\"error\", { \"allowEmptyCatch\": true }] */\n// check for passive event listeners\nlet supportsPassive = false;\n(function() {\n  try {\n    let opts = Object.defineProperty({}, 'passive', {get() {supportsPassive = true;}});\n    window.addEventListener('test', null, opts);\n    window.removeEventListener('test', null, opts);\n  } catch(e) {}\n})();\n\n/**\n * Generate settings for event listeners, dependant on `passiveTouchGestures`\n *\n * @param {string} eventName Event name to determine if `{passive}` option is\n *   needed\n * @return {{passive: boolean} | undefined} Options to use for addEventListener\n *   and removeEventListener\n */\nfunction PASSIVE_TOUCH(eventName) {\n  if (isMouseEvent(eventName) || eventName === 'touchend') {\n    return;\n  }\n  if (HAS_NATIVE_TA && supportsPassive && passiveTouchGestures) {\n    return {passive: true};\n  } else {\n    return;\n  }\n}\n\n// Check for touch-only devices\nlet IS_TOUCH_ONLY = navigator.userAgent.match(/iP(?:[oa]d|hone)|Android/);\n\n// keep track of any labels hit by the mouseCanceller\n/** @type {!Array<!HTMLLabelElement>} */\nconst clickedLabels = [];\n\n/** @type {!Object<boolean>} */\nconst labellable = {\n  'button': true,\n  'input': true,\n  'keygen': true,\n  'meter': true,\n  'output': true,\n  'textarea': true,\n  'progress': true,\n  'select': true\n};\n\n// Defined at https://html.spec.whatwg.org/multipage/form-control-infrastructure.html#enabling-and-disabling-form-controls:-the-disabled-attribute\n/** @type {!Object<boolean>} */\nconst canBeDisabled = {\n  'button': true,\n  'command': true,\n  'fieldset': true,\n  'input': true,\n  'keygen': true,\n  'optgroup': true,\n  'option': true,\n  'select': true,\n  'textarea': true\n};\n\n/**\n * @param {HTMLElement} el Element to check labelling status\n * @return {boolean} element can have labels\n */\nfunction canBeLabelled(el) {\n  return labellable[el.localName] || false;\n}\n\n/**\n * @param {HTMLElement} el Element that may be labelled.\n * @return {!Array<!HTMLLabelElement>} Relevant label for `el`\n */\nfunction matchingLabels(el) {\n  let labels = Array.prototype.slice.call(/** @type {HTMLInputElement} */(el).labels || []);\n  // IE doesn't have `labels` and Safari doesn't populate `labels`\n  // if element is in a shadowroot.\n  // In this instance, finding the non-ancestor labels is enough,\n  // as the mouseCancellor code will handle ancstor labels\n  if (!labels.length) {\n    labels = [];\n    try {\n      let root = el.getRootNode();\n      // if there is an id on `el`, check for all labels with a matching `for` attribute\n      if (el.id) {\n        let matching = root.querySelectorAll(`label[for = '${el.id}']`);\n        for (let i = 0; i < matching.length; i++) {\n          labels.push(/** @type {!HTMLLabelElement} */(matching[i]));\n        }\n      }\n    } catch (e) {\n      // Either:\n      // 1. el.getRootNode() failed.\n      // 2. el.id cannot be used in `querySelectorAll`\n      // In both cases, do nothing.\n    }\n  }\n  return labels;\n}\n\n// touch will make synthetic mouse events\n// `preventDefault` on touchend will cancel them,\n// but this breaks `<input>` focus and link clicks\n// disable mouse handlers for MOUSE_TIMEOUT ms after\n// a touchend to ignore synthetic mouse events\nlet mouseCanceller = function(mouseEvent) {\n  // Check for sourceCapabilities, used to distinguish synthetic events\n  // if mouseEvent did not come from a device that fires touch events,\n  // it was made by a real mouse and should be counted\n  // http://wicg.github.io/InputDeviceCapabilities/#dom-inputdevicecapabilities-firestouchevents\n  let sc = mouseEvent.sourceCapabilities;\n  if (sc && !sc.firesTouchEvents) {\n    return;\n  }\n  // skip synthetic mouse events\n  mouseEvent[HANDLED_OBJ] = {skip: true};\n  // disable \"ghost clicks\"\n  if (mouseEvent.type === 'click') {\n    let clickFromLabel = false;\n    let path = getComposedPath(mouseEvent);\n    for (let i = 0; i < path.length; i++) {\n      if (path[i].nodeType === Node.ELEMENT_NODE) {\n        if (path[i].localName === 'label') {\n          clickedLabels.push(/** @type {!HTMLLabelElement} */ (path[i]));\n        } else if (canBeLabelled(/** @type {!HTMLElement} */ (path[i]))) {\n          let ownerLabels =\n              matchingLabels(/** @type {!HTMLElement} */ (path[i]));\n          // check if one of the clicked labels is labelling this element\n          for (let j = 0; j < ownerLabels.length; j++) {\n            clickFromLabel = clickFromLabel || clickedLabels.indexOf(ownerLabels[j]) > -1;\n          }\n        }\n      }\n      if (path[i] === POINTERSTATE.mouse.target) {\n        return;\n      }\n    }\n    // if one of the clicked labels was labelling the target element,\n    // this is not a ghost click\n    if (clickFromLabel) {\n      return;\n    }\n    mouseEvent.preventDefault();\n    mouseEvent.stopPropagation();\n  }\n};\n\n/**\n * @param {boolean=} setup True to add, false to remove.\n * @return {void}\n */\nfunction setupTeardownMouseCanceller(setup) {\n  let events = IS_TOUCH_ONLY ? ['click'] : MOUSE_EVENTS;\n  for (let i = 0, en; i < events.length; i++) {\n    en = events[i];\n    if (setup) {\n      // reset clickLabels array\n      clickedLabels.length = 0;\n      document.addEventListener(en, mouseCanceller, true);\n    } else {\n      document.removeEventListener(en, mouseCanceller, true);\n    }\n  }\n}\n\nfunction ignoreMouse(e) {\n  if (!cancelSyntheticClickEvents) {\n    return;\n  }\n  if (!POINTERSTATE.mouse.mouseIgnoreJob) {\n    setupTeardownMouseCanceller(true);\n  }\n  let unset = function() {\n    setupTeardownMouseCanceller();\n    POINTERSTATE.mouse.target = null;\n    POINTERSTATE.mouse.mouseIgnoreJob = null;\n  };\n  POINTERSTATE.mouse.target = getComposedPath(e)[0];\n  POINTERSTATE.mouse.mouseIgnoreJob = Debouncer.debounce(\n        POINTERSTATE.mouse.mouseIgnoreJob\n      , timeOut.after(MOUSE_TIMEOUT)\n      , unset);\n}\n\n/**\n * @param {MouseEvent} ev event to test for left mouse button down\n * @return {boolean} has left mouse button down\n */\nfunction hasLeftMouseButton(ev) {\n  let type = ev.type;\n  // exit early if the event is not a mouse event\n  if (!isMouseEvent(type)) {\n    return false;\n  }\n  // ev.button is not reliable for mousemove (0 is overloaded as both left button and no buttons)\n  // instead we use ev.buttons (bitmask of buttons) or fall back to ev.which (deprecated, 0 for no buttons, 1 for left button)\n  if (type === 'mousemove') {\n    // allow undefined for testing events\n    let buttons = ev.buttons === undefined ? 1 : ev.buttons;\n    if ((ev instanceof window.MouseEvent) && !MOUSE_HAS_BUTTONS) {\n      buttons = MOUSE_WHICH_TO_BUTTONS[ev.which] || 0;\n    }\n    // buttons is a bitmask, check that the left button bit is set (1)\n    return Boolean(buttons & 1);\n  } else {\n    // allow undefined for testing events\n    let button = ev.button === undefined ? 0 : ev.button;\n    // ev.button is 0 in mousedown/mouseup/click for left button activation\n    return button === 0;\n  }\n}\n\nfunction isSyntheticClick(ev) {\n  if (ev.type === 'click') {\n    // ev.detail is 0 for HTMLElement.click in most browsers\n    if (ev.detail === 0) {\n      return true;\n    }\n    // in the worst case, check that the x/y position of the click is within\n    // the bounding box of the target of the event\n    // Thanks IE 10 >:(\n    let t = _findOriginalTarget(ev);\n    // make sure the target of the event is an element so we can use getBoundingClientRect,\n    // if not, just assume it is a synthetic click\n    if (!t.nodeType || /** @type {Element} */(t).nodeType !== Node.ELEMENT_NODE) {\n      return true;\n    }\n    let bcr = /** @type {Element} */(t).getBoundingClientRect();\n    // use page x/y to account for scrolling\n    let x = ev.pageX, y = ev.pageY;\n    // ev is a synthetic click if the position is outside the bounding box of the target\n    return !((x >= bcr.left && x <= bcr.right) && (y >= bcr.top && y <= bcr.bottom));\n  }\n  return false;\n}\n\nlet POINTERSTATE = {\n  mouse: {\n    target: null,\n    mouseIgnoreJob: null\n  },\n  touch: {\n    x: 0,\n    y: 0,\n    id: -1,\n    scrollDecided: false\n  }\n};\n\nfunction firstTouchAction(ev) {\n  let ta = 'auto';\n  let path = getComposedPath(ev);\n  for (let i = 0, n; i < path.length; i++) {\n    n = path[i];\n    if (n[TOUCH_ACTION]) {\n      ta = n[TOUCH_ACTION];\n      break;\n    }\n  }\n  return ta;\n}\n\nfunction trackDocument(stateObj, movefn, upfn) {\n  stateObj.movefn = movefn;\n  stateObj.upfn = upfn;\n  document.addEventListener('mousemove', movefn);\n  document.addEventListener('mouseup', upfn);\n}\n\nfunction untrackDocument(stateObj) {\n  document.removeEventListener('mousemove', stateObj.movefn);\n  document.removeEventListener('mouseup', stateObj.upfn);\n  stateObj.movefn = null;\n  stateObj.upfn = null;\n}\n\nif (cancelSyntheticClickEvents) {\n  // use a document-wide touchend listener to start the ghost-click prevention mechanism\n  // Use passive event listeners, if supported, to not affect scrolling performance\n  document.addEventListener('touchend', ignoreMouse, supportsPassive ? {passive: true} : false);\n}\n\n/**\n * Returns the composedPath for the given event.\n * @param {Event} event to process\n * @return {!Array<!EventTarget>} Path of the event\n */\nconst getComposedPath = window.ShadyDOM && window.ShadyDOM.noPatch ?\n  window.ShadyDOM.composedPath :\n  (event) => event.composedPath && event.composedPath() || [];\n\n/** @type {!Object<string, !GestureRecognizer>} */\nexport const gestures = {};\n\n/** @type {!Array<!GestureRecognizer>} */\nexport const recognizers = [];\n\n/**\n * Finds the element rendered on the screen at the provided coordinates.\n *\n * Similar to `document.elementFromPoint`, but pierces through\n * shadow roots.\n *\n * @param {number} x Horizontal pixel coordinate\n * @param {number} y Vertical pixel coordinate\n * @return {Element} Returns the deepest shadowRoot inclusive element\n * found at the screen position given.\n */\nexport function deepTargetFind(x, y) {\n  let node = document.elementFromPoint(x, y);\n  let next = node;\n  // this code path is only taken when native ShadowDOM is used\n  // if there is a shadowroot, it may have a node at x/y\n  // if there is not a shadowroot, exit the loop\n  while (next && next.shadowRoot && !window.ShadyDOM) {\n    // if there is a node at x/y in the shadowroot, look deeper\n    let oldNext = next;\n    next = next.shadowRoot.elementFromPoint(x, y);\n    // on Safari, elementFromPoint may return the shadowRoot host\n    if (oldNext === next) {\n      break;\n    }\n    if (next) {\n      node = next;\n    }\n  }\n  return node;\n}\n\n/**\n * a cheaper check than ev.composedPath()[0];\n *\n * @private\n * @param {Event|Touch} ev Event.\n * @return {EventTarget} Returns the event target.\n */\nfunction _findOriginalTarget(ev) {\n  const path = getComposedPath(/** @type {?Event} */ (ev));\n  // It shouldn't be, but sometimes path is empty (window on Safari).\n  return path.length > 0 ? path[0] : ev.target;\n}\n\n/**\n * @private\n * @param {Event} ev Event.\n * @return {void}\n */\nfunction _handleNative(ev) {\n  let handled;\n  let type = ev.type;\n  let node = ev.currentTarget;\n  let gobj = node[GESTURE_KEY];\n  if (!gobj) {\n    return;\n  }\n  let gs = gobj[type];\n  if (!gs) {\n    return;\n  }\n  if (!ev[HANDLED_OBJ]) {\n    ev[HANDLED_OBJ] = {};\n    if (type.slice(0, 5) === 'touch') {\n      ev = /** @type {TouchEvent} */(ev); // eslint-disable-line no-self-assign\n      let t = ev.changedTouches[0];\n      if (type === 'touchstart') {\n        // only handle the first finger\n        if (ev.touches.length === 1) {\n          POINTERSTATE.touch.id = t.identifier;\n        }\n      }\n      if (POINTERSTATE.touch.id !== t.identifier) {\n        return;\n      }\n      if (!HAS_NATIVE_TA) {\n        if (type === 'touchstart' || type === 'touchmove') {\n          _handleTouchAction(ev);\n        }\n      }\n    }\n  }\n  handled = ev[HANDLED_OBJ];\n  // used to ignore synthetic mouse events\n  if (handled.skip) {\n    return;\n  }\n  // reset recognizer state\n  for (let i = 0, r; i < recognizers.length; i++) {\n    r = recognizers[i];\n    if (gs[r.name] && !handled[r.name]) {\n      if (r.flow && r.flow.start.indexOf(ev.type) > -1 && r.reset) {\n        r.reset();\n      }\n    }\n  }\n  // enforce gesture recognizer order\n  for (let i = 0, r; i < recognizers.length; i++) {\n    r = recognizers[i];\n    if (gs[r.name] && !handled[r.name]) {\n      handled[r.name] = true;\n      r[type](ev);\n    }\n  }\n}\n\n/**\n * @private\n * @param {TouchEvent} ev Event.\n * @return {void}\n */\nfunction _handleTouchAction(ev) {\n  let t = ev.changedTouches[0];\n  let type = ev.type;\n  if (type === 'touchstart') {\n    POINTERSTATE.touch.x = t.clientX;\n    POINTERSTATE.touch.y = t.clientY;\n    POINTERSTATE.touch.scrollDecided = false;\n  } else if (type === 'touchmove') {\n    if (POINTERSTATE.touch.scrollDecided) {\n      return;\n    }\n    POINTERSTATE.touch.scrollDecided = true;\n    let ta = firstTouchAction(ev);\n    let shouldPrevent = false;\n    let dx = Math.abs(POINTERSTATE.touch.x - t.clientX);\n    let dy = Math.abs(POINTERSTATE.touch.y - t.clientY);\n    if (!ev.cancelable) {\n      // scrolling is happening\n    } else if (ta === 'none') {\n      shouldPrevent = true;\n    } else if (ta === 'pan-x') {\n      shouldPrevent = dy > dx;\n    } else if (ta === 'pan-y') {\n      shouldPrevent = dx > dy;\n    }\n    if (shouldPrevent) {\n      ev.preventDefault();\n    } else {\n      prevent('track');\n    }\n  }\n}\n\n/**\n * Adds an event listener to a node for the given gesture type.\n *\n * @param {!EventTarget} node Node to add listener on\n * @param {string} evType Gesture type: `down`, `up`, `track`, or `tap`\n * @param {!function(!Event):void} handler Event listener function to call\n * @return {boolean} Returns true if a gesture event listener was added.\n */\nexport function addListener(node, evType, handler) {\n  if (gestures[evType]) {\n    _add(node, evType, handler);\n    return true;\n  }\n  return false;\n}\n\n/**\n * Removes an event listener from a node for the given gesture type.\n *\n * @param {!EventTarget} node Node to remove listener from\n * @param {string} evType Gesture type: `down`, `up`, `track`, or `tap`\n * @param {!function(!Event):void} handler Event listener function previously passed to\n *  `addListener`.\n * @return {boolean} Returns true if a gesture event listener was removed.\n */\nexport function removeListener(node, evType, handler) {\n  if (gestures[evType]) {\n    _remove(node, evType, handler);\n    return true;\n  }\n  return false;\n}\n\n/**\n * automate the event listeners for the native events\n *\n * @private\n * @param {!EventTarget} node Node on which to add the event.\n * @param {string} evType Event type to add.\n * @param {function(!Event)} handler Event handler function.\n * @return {void}\n */\nfunction _add(node, evType, handler) {\n  let recognizer = gestures[evType];\n  let deps = recognizer.deps;\n  let name = recognizer.name;\n  let gobj = node[GESTURE_KEY];\n  if (!gobj) {\n    node[GESTURE_KEY] = gobj = {};\n  }\n  for (let i = 0, dep, gd; i < deps.length; i++) {\n    dep = deps[i];\n    // don't add mouse handlers on iOS because they cause gray selection overlays\n    if (IS_TOUCH_ONLY && isMouseEvent(dep) && dep !== 'click') {\n      continue;\n    }\n    gd = gobj[dep];\n    if (!gd) {\n      gobj[dep] = gd = {_count: 0};\n    }\n    if (gd._count === 0) {\n      node.addEventListener(dep, _handleNative, PASSIVE_TOUCH(dep));\n    }\n    gd[name] = (gd[name] || 0) + 1;\n    gd._count = (gd._count || 0) + 1;\n  }\n  node.addEventListener(evType, handler);\n  if (recognizer.touchAction) {\n    setTouchAction(node, recognizer.touchAction);\n  }\n}\n\n/**\n * automate event listener removal for native events\n *\n * @private\n * @param {!EventTarget} node Node on which to remove the event.\n * @param {string} evType Event type to remove.\n * @param {function(!Event): void} handler Event handler function.\n * @return {void}\n */\nfunction _remove(node, evType, handler) {\n  let recognizer = gestures[evType];\n  let deps = recognizer.deps;\n  let name = recognizer.name;\n  let gobj = node[GESTURE_KEY];\n  if (gobj) {\n    for (let i = 0, dep, gd; i < deps.length; i++) {\n      dep = deps[i];\n      gd = gobj[dep];\n      if (gd && gd[name]) {\n        gd[name] = (gd[name] || 1) - 1;\n        gd._count = (gd._count || 1) - 1;\n        if (gd._count === 0) {\n          node.removeEventListener(dep, _handleNative, PASSIVE_TOUCH(dep));\n        }\n      }\n    }\n  }\n  node.removeEventListener(evType, handler);\n}\n\n/**\n * Registers a new gesture event recognizer for adding new custom\n * gesture event types.\n *\n * @param {!GestureRecognizer} recog Gesture recognizer descriptor\n * @return {void}\n */\nexport function register(recog) {\n  recognizers.push(recog);\n  for (let i = 0; i < recog.emits.length; i++) {\n    gestures[recog.emits[i]] = recog;\n  }\n}\n\n/**\n * @private\n * @param {string} evName Event name.\n * @return {Object} Returns the gesture for the given event name.\n */\nfunction _findRecognizerByEvent(evName) {\n  for (let i = 0, r; i < recognizers.length; i++) {\n    r = recognizers[i];\n    for (let j = 0, n; j < r.emits.length; j++) {\n      n = r.emits[j];\n      if (n === evName) {\n        return r;\n      }\n    }\n  }\n  return null;\n}\n\n/**\n * Sets scrolling direction on node.\n *\n * This value is checked on first move, thus it should be called prior to\n * adding event listeners.\n *\n * @param {!EventTarget} node Node to set touch action setting on\n * @param {string} value Touch action value\n * @return {void}\n */\nexport function setTouchAction(node, value) {\n  if (HAS_NATIVE_TA && node instanceof HTMLElement) {\n    // NOTE: add touchAction async so that events can be added in\n    // custom element constructors. Otherwise we run afoul of custom\n    // elements restriction against settings attributes (style) in the\n    // constructor.\n    microTask.run(() => {\n      node.style.touchAction = value;\n    });\n  }\n  node[TOUCH_ACTION] = value;\n}\n\n/**\n * Dispatches an event on the `target` element of `type` with the given\n * `detail`.\n * @private\n * @param {!EventTarget} target The element on which to fire an event.\n * @param {string} type The type of event to fire.\n * @param {!Object=} detail The detail object to populate on the event.\n * @return {void}\n */\nfunction _fire(target, type, detail) {\n  let ev = new Event(type, { bubbles: true, cancelable: true, composed: true });\n  ev.detail = detail;\n  wrap(/** @type {!Node} */(target)).dispatchEvent(ev);\n  // forward `preventDefault` in a clean way\n  if (ev.defaultPrevented) {\n    let preventer = detail.preventer || detail.sourceEvent;\n    if (preventer && preventer.preventDefault) {\n      preventer.preventDefault();\n    }\n  }\n}\n\n/**\n * Prevents the dispatch and default action of the given event name.\n *\n * @param {string} evName Event name.\n * @return {void}\n */\nexport function prevent(evName) {\n  let recognizer = _findRecognizerByEvent(evName);\n  if (recognizer.info) {\n    recognizer.info.prevent = true;\n  }\n}\n\n/**\n * Reset the 2500ms timeout on processing mouse input after detecting touch input.\n *\n * Touch inputs create synthesized mouse inputs anywhere from 0 to 2000ms after the touch.\n * This method should only be called during testing with simulated touch inputs.\n * Calling this method in production may cause duplicate taps or other Gestures.\n *\n * @return {void}\n */\nexport function resetMouseCanceller() {\n  if (POINTERSTATE.mouse.mouseIgnoreJob) {\n    POINTERSTATE.mouse.mouseIgnoreJob.flush();\n  }\n}\n\n/* eslint-disable valid-jsdoc */\n\nregister({\n  name: 'downup',\n  deps: ['mousedown', 'touchstart', 'touchend'],\n  flow: {\n    start: ['mousedown', 'touchstart'],\n    end: ['mouseup', 'touchend']\n  },\n  emits: ['down', 'up'],\n\n  info: {\n    movefn: null,\n    upfn: null\n  },\n\n  /**\n   * @this {GestureRecognizer}\n   * @return {void}\n   */\n  reset: function() {\n    untrackDocument(this.info);\n  },\n\n  /**\n   * @this {GestureRecognizer}\n   * @param {MouseEvent} e\n   * @return {void}\n   */\n  mousedown: function(e) {\n    if (!hasLeftMouseButton(e)) {\n      return;\n    }\n    let t = _findOriginalTarget(e);\n    let self = this;\n    let movefn = function movefn(e) {\n      if (!hasLeftMouseButton(e)) {\n        downupFire('up', t, e);\n        untrackDocument(self.info);\n      }\n    };\n    let upfn = function upfn(e) {\n      if (hasLeftMouseButton(e)) {\n        downupFire('up', t, e);\n      }\n      untrackDocument(self.info);\n    };\n    trackDocument(this.info, movefn, upfn);\n    downupFire('down', t, e);\n  },\n  /**\n   * @this {GestureRecognizer}\n   * @param {TouchEvent} e\n   * @return {void}\n   */\n  touchstart: function(e) {\n    downupFire('down', _findOriginalTarget(e), e.changedTouches[0], e);\n  },\n  /**\n   * @this {GestureRecognizer}\n   * @param {TouchEvent} e\n   * @return {void}\n   */\n  touchend: function(e) {\n    downupFire('up', _findOriginalTarget(e), e.changedTouches[0], e);\n  }\n});\n\n/**\n * @param {string} type\n * @param {EventTarget} target\n * @param {Event|Touch} event\n * @param {Event=} preventer\n * @return {void}\n */\nfunction downupFire(type, target, event, preventer) {\n  if (!target) {\n    return;\n  }\n  _fire(target, type, {\n    x: event.clientX,\n    y: event.clientY,\n    sourceEvent: event,\n    preventer: preventer,\n    prevent: function(e) {\n      return prevent(e);\n    }\n  });\n}\n\nregister({\n  name: 'track',\n  touchAction: 'none',\n  deps: ['mousedown', 'touchstart', 'touchmove', 'touchend'],\n  flow: {\n    start: ['mousedown', 'touchstart'],\n    end: ['mouseup', 'touchend']\n  },\n  emits: ['track'],\n\n  info: {\n    x: 0,\n    y: 0,\n    state: 'start',\n    started: false,\n    moves: [],\n    /** @this {GestureInfo} */\n    addMove: function(move) {\n      if (this.moves.length > TRACK_LENGTH) {\n        this.moves.shift();\n      }\n      this.moves.push(move);\n    },\n    movefn: null,\n    upfn: null,\n    prevent: false\n  },\n\n  /**\n   * @this {GestureRecognizer}\n   * @return {void}\n   */\n  reset: function() {\n    this.info.state = 'start';\n    this.info.started = false;\n    this.info.moves = [];\n    this.info.x = 0;\n    this.info.y = 0;\n    this.info.prevent = false;\n    untrackDocument(this.info);\n  },\n\n  /**\n   * @this {GestureRecognizer}\n   * @param {MouseEvent} e\n   * @return {void}\n   */\n  mousedown: function(e) {\n    if (!hasLeftMouseButton(e)) {\n      return;\n    }\n    let t = _findOriginalTarget(e);\n    let self = this;\n    let movefn = function movefn(e) {\n      let x = e.clientX, y = e.clientY;\n      if (trackHasMovedEnough(self.info, x, y)) {\n        // first move is 'start', subsequent moves are 'move', mouseup is 'end'\n        self.info.state = self.info.started ? (e.type === 'mouseup' ? 'end' : 'track') : 'start';\n        if (self.info.state === 'start') {\n          // if and only if tracking, always prevent tap\n          prevent('tap');\n        }\n        self.info.addMove({x: x, y: y});\n        if (!hasLeftMouseButton(e)) {\n          // always fire \"end\"\n          self.info.state = 'end';\n          untrackDocument(self.info);\n        }\n        if (t) {\n          trackFire(self.info, t, e);\n        }\n        self.info.started = true;\n      }\n    };\n    let upfn = function upfn(e) {\n      if (self.info.started) {\n        movefn(e);\n      }\n\n      // remove the temporary listeners\n      untrackDocument(self.info);\n    };\n    // add temporary document listeners as mouse retargets\n    trackDocument(this.info, movefn, upfn);\n    this.info.x = e.clientX;\n    this.info.y = e.clientY;\n  },\n  /**\n   * @this {GestureRecognizer}\n   * @param {TouchEvent} e\n   * @return {void}\n   */\n  touchstart: function(e) {\n    let ct = e.changedTouches[0];\n    this.info.x = ct.clientX;\n    this.info.y = ct.clientY;\n  },\n  /**\n   * @this {GestureRecognizer}\n   * @param {TouchEvent} e\n   * @return {void}\n   */\n  touchmove: function(e) {\n    let t = _findOriginalTarget(e);\n    let ct = e.changedTouches[0];\n    let x = ct.clientX, y = ct.clientY;\n    if (trackHasMovedEnough(this.info, x, y)) {\n      if (this.info.state === 'start') {\n        // if and only if tracking, always prevent tap\n        prevent('tap');\n      }\n      this.info.addMove({x: x, y: y});\n      trackFire(this.info, t, ct);\n      this.info.state = 'track';\n      this.info.started = true;\n    }\n  },\n  /**\n   * @this {GestureRecognizer}\n   * @param {TouchEvent} e\n   * @return {void}\n   */\n  touchend: function(e) {\n    let t = _findOriginalTarget(e);\n    let ct = e.changedTouches[0];\n    // only trackend if track was started and not aborted\n    if (this.info.started) {\n      // reset started state on up\n      this.info.state = 'end';\n      this.info.addMove({x: ct.clientX, y: ct.clientY});\n      trackFire(this.info, t, ct);\n    }\n  }\n});\n\n/**\n * @param {!GestureInfo} info\n * @param {number} x\n * @param {number} y\n * @return {boolean}\n */\nfunction trackHasMovedEnough(info, x, y) {\n  if (info.prevent) {\n    return false;\n  }\n  if (info.started) {\n    return true;\n  }\n  let dx = Math.abs(info.x - x);\n  let dy = Math.abs(info.y - y);\n  return (dx >= TRACK_DISTANCE || dy >= TRACK_DISTANCE);\n}\n\n/**\n * @param {!GestureInfo} info\n * @param {?EventTarget} target\n * @param {Touch} touch\n * @return {void}\n */\nfunction trackFire(info, target, touch) {\n  if (!target) {\n    return;\n  }\n  let secondlast = info.moves[info.moves.length - 2];\n  let lastmove = info.moves[info.moves.length - 1];\n  let dx = lastmove.x - info.x;\n  let dy = lastmove.y - info.y;\n  let ddx, ddy = 0;\n  if (secondlast) {\n    ddx = lastmove.x - secondlast.x;\n    ddy = lastmove.y - secondlast.y;\n  }\n  _fire(target, 'track', {\n    state: info.state,\n    x: touch.clientX,\n    y: touch.clientY,\n    dx: dx,\n    dy: dy,\n    ddx: ddx,\n    ddy: ddy,\n    sourceEvent: touch,\n    hover: function() {\n      return deepTargetFind(touch.clientX, touch.clientY);\n    }\n  });\n}\n\nregister({\n  name: 'tap',\n  deps: ['mousedown', 'click', 'touchstart', 'touchend'],\n  flow: {\n    start: ['mousedown', 'touchstart'],\n    end: ['click', 'touchend']\n  },\n  emits: ['tap'],\n  info: {\n    x: NaN,\n    y: NaN,\n    prevent: false\n  },\n  /**\n   * @this {GestureRecognizer}\n   * @return {void}\n   */\n  reset: function() {\n    this.info.x = NaN;\n    this.info.y = NaN;\n    this.info.prevent = false;\n  },\n  /**\n   * @this {GestureRecognizer}\n   * @param {MouseEvent} e\n   * @return {void}\n   */\n  mousedown: function(e) {\n    if (hasLeftMouseButton(e)) {\n      this.info.x = e.clientX;\n      this.info.y = e.clientY;\n    }\n  },\n  /**\n   * @this {GestureRecognizer}\n   * @param {MouseEvent} e\n   * @return {void}\n   */\n  click: function(e) {\n    if (hasLeftMouseButton(e)) {\n      trackForward(this.info, e);\n    }\n  },\n  /**\n   * @this {GestureRecognizer}\n   * @param {TouchEvent} e\n   * @return {void}\n   */\n  touchstart: function(e) {\n    const touch = e.changedTouches[0];\n    this.info.x = touch.clientX;\n    this.info.y = touch.clientY;\n  },\n  /**\n   * @this {GestureRecognizer}\n   * @param {TouchEvent} e\n   * @return {void}\n   */\n  touchend: function(e) {\n    trackForward(this.info, e.changedTouches[0], e);\n  }\n});\n\n/**\n * @param {!GestureInfo} info\n * @param {Event | Touch} e\n * @param {Event=} preventer\n * @return {void}\n */\nfunction trackForward(info, e, preventer) {\n  let dx = Math.abs(e.clientX - info.x);\n  let dy = Math.abs(e.clientY - info.y);\n  // find original target from `preventer` for TouchEvents, or `e` for MouseEvents\n  let t = _findOriginalTarget((preventer || e));\n  if (!t || (canBeDisabled[/** @type {!HTMLElement} */(t).localName] && t.hasAttribute('disabled'))) {\n    return;\n  }\n  // dx,dy can be NaN if `click` has been simulated and there was no `down` for `start`\n  if (isNaN(dx) || isNaN(dy) || (dx <= TAP_DISTANCE && dy <= TAP_DISTANCE) || isSyntheticClick(e)) {\n    // prevent taps from being generated if an event has canceled them\n    if (!info.prevent) {\n      _fire(t, 'tap', {\n        x: e.clientX,\n        y: e.clientY,\n        sourceEvent: e,\n        preventer: preventer\n      });\n    }\n  }\n}\n\n/* eslint-enable valid-jsdoc */\n\n/** @deprecated */\nexport const findOriginalTarget = _findOriginalTarget;\n\n/** @deprecated */\nexport const add = addListener;\n\n/** @deprecated */\nexport const remove = removeListener;\n","/**\n@license\nCopyright (c) 2017 The Polymer Project Authors. All rights reserved.\nThis code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt\nThe complete set of authors may be found at http://polymer.github.io/AUTHORS.txt\nThe complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt\nCode distributed by Google as part of the polymer project is also\nsubject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt\n*/\nimport '../utils/boot.js';\n\nimport { dedupingMixin } from '../utils/mixin.js';\nimport { addListener, removeListener } from '../utils/gestures.js';\n\n/**\n * Element class mixin that provides API for adding Polymer's cross-platform\n * gesture events to nodes.\n *\n * The API is designed to be compatible with override points implemented\n * in `TemplateStamp` such that declarative event listeners in\n * templates will support gesture events when this mixin is applied along with\n * `TemplateStamp`.\n *\n * @mixinFunction\n * @polymer\n * @summary Element class mixin that provides API for adding Polymer's\n *   cross-platform gesture events to nodes\n * @template T\n * @param {function(new:T)} superClass Class to apply mixin to.\n * @return {function(new:T)} superClass with mixin applied.\n */\nexport const GestureEventListeners = dedupingMixin((superClass) => {\n  /**\n   * @polymer\n   * @mixinClass\n   * @implements {Polymer_GestureEventListeners}\n   */\n  class GestureEventListeners extends superClass {\n    /**\n     * Add the event listener to the node if it is a gestures event.\n     *\n     * @param {!EventTarget} node Node to add event listener to\n     * @param {string} eventName Name of event\n     * @param {function(!Event):void} handler Listener function to add\n     * @return {void}\n     * @override\n     */\n    _addEventListenerToNode(node, eventName, handler) {\n      if (!addListener(node, eventName, handler)) {\n        super._addEventListenerToNode(node, eventName, handler);\n      }\n    }\n\n    /**\n     * Remove the event listener to the node if it is a gestures event.\n     *\n     * @param {!EventTarget} node Node to remove event listener from\n     * @param {string} eventName Name of event\n     * @param {function(!Event):void} handler Listener function to remove\n     * @return {void}\n     * @override\n     */\n    _removeEventListenerFromNode(node, eventName, handler) {\n      if (!removeListener(node, eventName, handler)) {\n        super._removeEventListenerFromNode(node, eventName, handler);\n      }\n    }\n  }\n\n  return GestureEventListeners;\n});\n","/**\n * @fileoverview\n * @suppress {checkPrototypalTypes}\n * @license Copyright (c) 2017 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at\n * http://polymer.github.io/LICENSE.txt The complete set of authors may be found\n * at http://polymer.github.io/AUTHORS.txt The complete set of contributors may\n * be found at http://polymer.github.io/CONTRIBUTORS.txt Code distributed by\n * Google as part of the polymer project is also subject to an additional IP\n * rights grant found at http://polymer.github.io/PATENTS.txt\n */\nimport { PropertyAccessors } from './property-accessors.js';\n\nimport { dedupingMixin } from '../utils/mixin.js';\n\nconst HOST_DIR = /:host\\(:dir\\((ltr|rtl)\\)\\)/g;\nconst HOST_DIR_REPLACMENT = ':host([dir=\"$1\"])';\n\nconst EL_DIR = /([\\s\\w-#\\.\\[\\]\\*]*):dir\\((ltr|rtl)\\)/g;\nconst EL_DIR_REPLACMENT = ':host([dir=\"$2\"]) $1';\n\nconst DIR_CHECK = /:dir\\((?:ltr|rtl)\\)/;\n\nconst SHIM_SHADOW = Boolean(window['ShadyDOM'] && window['ShadyDOM']['inUse']);\n\n/**\n * @type {!Array<!Polymer_DirMixin>}\n */\nconst DIR_INSTANCES = [];\n\n/** @type {?MutationObserver} */\nlet observer = null;\n\nlet documentDir = '';\n\nfunction getRTL() {\n  documentDir = document.documentElement.getAttribute('dir');\n}\n\n/**\n * @param {!Polymer_DirMixin} instance Instance to set RTL status on\n */\nfunction setRTL(instance) {\n  if (!instance.__autoDirOptOut) {\n    const el = /** @type {!HTMLElement} */(instance);\n    el.setAttribute('dir', documentDir);\n  }\n}\n\nfunction updateDirection() {\n  getRTL();\n  documentDir = document.documentElement.getAttribute('dir');\n  for (let i = 0; i < DIR_INSTANCES.length; i++) {\n    setRTL(DIR_INSTANCES[i]);\n  }\n}\n\nfunction takeRecords() {\n  if (observer && observer.takeRecords().length) {\n    updateDirection();\n  }\n}\n\n/**\n * Element class mixin that allows elements to use the `:dir` CSS Selector to\n * have text direction specific styling.\n *\n * With this mixin, any stylesheet provided in the template will transform\n * `:dir` into `:host([dir])` and sync direction with the page via the\n * element's `dir` attribute.\n *\n * Elements can opt out of the global page text direction by setting the `dir`\n * attribute directly in `ready()` or in HTML.\n *\n * Caveats:\n * - Applications must set `<html dir=\"ltr\">` or `<html dir=\"rtl\">` to sync\n *   direction\n * - Automatic left-to-right or right-to-left styling is sync'd with the\n *   `<html>` element only.\n * - Changing `dir` at runtime is supported.\n * - Opting out of the global direction styling is permanent\n *\n * @mixinFunction\n * @polymer\n * @appliesMixin PropertyAccessors\n * @template T\n * @param {function(new:T)} superClass Class to apply mixin to.\n * @return {function(new:T)} superClass with mixin applied.\n */\nexport const DirMixin = dedupingMixin((base) => {\n\n  if (!SHIM_SHADOW) {\n    if (!observer) {\n      getRTL();\n      observer = new MutationObserver(updateDirection);\n      observer.observe(document.documentElement, {attributes: true, attributeFilter: ['dir']});\n    }\n  }\n\n  /**\n   * @constructor\n   * @implements {Polymer_PropertyAccessors}\n   * @private\n   */\n  const elementBase = PropertyAccessors(base);\n\n  /**\n   * @polymer\n   * @mixinClass\n   * @implements {Polymer_DirMixin}\n   */\n  class Dir extends elementBase {\n\n    /**\n     * @param {string} cssText .\n     * @param {string} baseURI .\n     * @return {string} .\n     * @suppress {missingProperties} Interfaces in closure do not inherit statics, but classes do\n     * @nocollapse\n     */\n    static _processStyleText(cssText, baseURI) {\n      // TODO(https://github.com/google/closure-compiler/issues/3240):\n      //     Change back to just super.methodCall()\n      cssText = elementBase._processStyleText.call(this, cssText, baseURI);\n      if (!SHIM_SHADOW && DIR_CHECK.test(cssText)) {\n        cssText = this._replaceDirInCssText(cssText);\n        this.__activateDir = true;\n      }\n      return cssText;\n    }\n\n    /**\n     * Replace `:dir` in the given CSS text\n     *\n     * @param {string} text CSS text to replace DIR\n     * @return {string} Modified CSS\n     * @nocollapse\n     */\n    static _replaceDirInCssText(text) {\n      let replacedText = text;\n      replacedText = replacedText.replace(HOST_DIR, HOST_DIR_REPLACMENT);\n      replacedText = replacedText.replace(EL_DIR, EL_DIR_REPLACMENT);\n      return replacedText;\n    }\n\n    constructor() {\n      super();\n      /** @type {boolean} */\n      this.__autoDirOptOut = false;\n    }\n\n    /**\n     * @override\n     * @suppress {invalidCasts} Closure doesn't understand that `this` is an\n     *     HTMLElement\n     * @return {void}\n     */\n    ready() {\n      super.ready();\n      this.__autoDirOptOut = /** @type {!HTMLElement} */(this).hasAttribute('dir');\n    }\n\n    /**\n     * @override\n     * @suppress {missingProperties} If it exists on elementBase, it can be\n     *   super'd\n     * @return {void}\n     */\n    connectedCallback() {\n      if (elementBase.prototype.connectedCallback) {\n        super.connectedCallback();\n      }\n      if (this.constructor.__activateDir) {\n        takeRecords();\n        DIR_INSTANCES.push(this);\n        setRTL(this);\n      }\n    }\n\n    /**\n     * @override\n     * @suppress {missingProperties} If it exists on elementBase, it can be\n     *   super'd\n     * @return {void}\n     */\n    disconnectedCallback() {\n      if (elementBase.prototype.disconnectedCallback) {\n        super.disconnectedCallback();\n      }\n      if (this.constructor.__activateDir) {\n        const idx = DIR_INSTANCES.indexOf(this);\n        if (idx > -1) {\n          DIR_INSTANCES.splice(idx, 1);\n        }\n      }\n    }\n  }\n\n  Dir.__activateDir = false;\n\n  return Dir;\n});\n","/**\n@license\nCopyright (c) 2017 The Polymer Project Authors. All rights reserved.\nThis code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt\nThe complete set of authors may be found at http://polymer.github.io/AUTHORS.txt\nThe complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt\nCode distributed by Google as part of the polymer project is also\nsubject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt\n*/\n\nfunction resolve() {\n  document.body.removeAttribute('unresolved');\n}\n\nif (document.readyState === 'interactive' || document.readyState === 'complete') {\n  resolve();\n} else {\n  window.addEventListener('DOMContentLoaded', resolve);\n}\n\nexport {};\n","/**\n@license\nCopyright (c) 2017 The Polymer Project Authors. All rights reserved.\nThis code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt\nThe complete set of authors may be found at http://polymer.github.io/AUTHORS.txt\nThe complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt\nCode distributed by Google as part of the polymer project is also\nsubject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt\n*/\nimport './boot.js';\n\nfunction newSplice(index, removed, addedCount) {\n  return {\n    index: index,\n    removed: removed,\n    addedCount: addedCount\n  };\n}\n\nconst EDIT_LEAVE = 0;\nconst EDIT_UPDATE = 1;\nconst EDIT_ADD = 2;\nconst EDIT_DELETE = 3;\n\n// Note: This function is *based* on the computation of the Levenshtein\n// \"edit\" distance. The one change is that \"updates\" are treated as two\n// edits - not one. With Array splices, an update is really a delete\n// followed by an add. By retaining this, we optimize for \"keeping\" the\n// maximum array items in the original array. For example:\n//\n//   'xxxx123' -> '123yyyy'\n//\n// With 1-edit updates, the shortest path would be just to update all seven\n// characters. With 2-edit updates, we delete 4, leave 3, and add 4. This\n// leaves the substring '123' intact.\nfunction calcEditDistances(current, currentStart, currentEnd,\n                            old, oldStart, oldEnd) {\n  // \"Deletion\" columns\n  let rowCount = oldEnd - oldStart + 1;\n  let columnCount = currentEnd - currentStart + 1;\n  let distances = new Array(rowCount);\n\n  // \"Addition\" rows. Initialize null column.\n  for (let i = 0; i < rowCount; i++) {\n    distances[i] = new Array(columnCount);\n    distances[i][0] = i;\n  }\n\n  // Initialize null row\n  for (let j = 0; j < columnCount; j++)\n    distances[0][j] = j;\n\n  for (let i = 1; i < rowCount; i++) {\n    for (let j = 1; j < columnCount; j++) {\n      if (equals(current[currentStart + j - 1], old[oldStart + i - 1]))\n        distances[i][j] = distances[i - 1][j - 1];\n      else {\n        let north = distances[i - 1][j] + 1;\n        let west = distances[i][j - 1] + 1;\n        distances[i][j] = north < west ? north : west;\n      }\n    }\n  }\n\n  return distances;\n}\n\n// This starts at the final weight, and walks \"backward\" by finding\n// the minimum previous weight recursively until the origin of the weight\n// matrix.\nfunction spliceOperationsFromEditDistances(distances) {\n  let i = distances.length - 1;\n  let j = distances[0].length - 1;\n  let current = distances[i][j];\n  let edits = [];\n  while (i > 0 || j > 0) {\n    if (i == 0) {\n      edits.push(EDIT_ADD);\n      j--;\n      continue;\n    }\n    if (j == 0) {\n      edits.push(EDIT_DELETE);\n      i--;\n      continue;\n    }\n    let northWest = distances[i - 1][j - 1];\n    let west = distances[i - 1][j];\n    let north = distances[i][j - 1];\n\n    let min;\n    if (west < north)\n      min = west < northWest ? west : northWest;\n    else\n      min = north < northWest ? north : northWest;\n\n    if (min == northWest) {\n      if (northWest == current) {\n        edits.push(EDIT_LEAVE);\n      } else {\n        edits.push(EDIT_UPDATE);\n        current = northWest;\n      }\n      i--;\n      j--;\n    } else if (min == west) {\n      edits.push(EDIT_DELETE);\n      i--;\n      current = west;\n    } else {\n      edits.push(EDIT_ADD);\n      j--;\n      current = north;\n    }\n  }\n\n  edits.reverse();\n  return edits;\n}\n\n/**\n * Splice Projection functions:\n *\n * A splice map is a representation of how a previous array of items\n * was transformed into a new array of items. Conceptually it is a list of\n * tuples of\n *\n *   <index, removed, addedCount>\n *\n * which are kept in ascending index order of. The tuple represents that at\n * the |index|, |removed| sequence of items were removed, and counting forward\n * from |index|, |addedCount| items were added.\n */\n\n/**\n * Lacking individual splice mutation information, the minimal set of\n * splices can be synthesized given the previous state and final state of an\n * array. The basic approach is to calculate the edit distance matrix and\n * choose the shortest path through it.\n *\n * Complexity: O(l * p)\n *   l: The length of the current array\n *   p: The length of the old array\n *\n * @param {!Array} current The current \"changed\" array for which to\n * calculate splices.\n * @param {number} currentStart Starting index in the `current` array for\n * which splices are calculated.\n * @param {number} currentEnd Ending index in the `current` array for\n * which splices are calculated.\n * @param {!Array} old The original \"unchanged\" array to compare `current`\n * against to determine splices.\n * @param {number} oldStart Starting index in the `old` array for\n * which splices are calculated.\n * @param {number} oldEnd Ending index in the `old` array for\n * which splices are calculated.\n * @return {!Array} Returns an array of splice record objects. Each of these\n * contains: `index` the location where the splice occurred; `removed`\n * the array of removed items from this location; `addedCount` the number\n * of items added at this location.\n */\nfunction calcSplices(current, currentStart, currentEnd,\n                      old, oldStart, oldEnd) {\n  let prefixCount = 0;\n  let suffixCount = 0;\n  let splice;\n\n  let minLength = Math.min(currentEnd - currentStart, oldEnd - oldStart);\n  if (currentStart == 0 && oldStart == 0)\n    prefixCount = sharedPrefix(current, old, minLength);\n\n  if (currentEnd == current.length && oldEnd == old.length)\n    suffixCount = sharedSuffix(current, old, minLength - prefixCount);\n\n  currentStart += prefixCount;\n  oldStart += prefixCount;\n  currentEnd -= suffixCount;\n  oldEnd -= suffixCount;\n\n  if (currentEnd - currentStart == 0 && oldEnd - oldStart == 0)\n    return [];\n\n  if (currentStart == currentEnd) {\n    splice = newSplice(currentStart, [], 0);\n    while (oldStart < oldEnd)\n      splice.removed.push(old[oldStart++]);\n\n    return [ splice ];\n  } else if (oldStart == oldEnd)\n    return [ newSplice(currentStart, [], currentEnd - currentStart) ];\n\n  let ops = spliceOperationsFromEditDistances(\n      calcEditDistances(current, currentStart, currentEnd,\n                             old, oldStart, oldEnd));\n\n  splice = undefined;\n  let splices = [];\n  let index = currentStart;\n  let oldIndex = oldStart;\n  for (let i = 0; i < ops.length; i++) {\n    switch(ops[i]) {\n      case EDIT_LEAVE:\n        if (splice) {\n          splices.push(splice);\n          splice = undefined;\n        }\n\n        index++;\n        oldIndex++;\n        break;\n      case EDIT_UPDATE:\n        if (!splice)\n          splice = newSplice(index, [], 0);\n\n        splice.addedCount++;\n        index++;\n\n        splice.removed.push(old[oldIndex]);\n        oldIndex++;\n        break;\n      case EDIT_ADD:\n        if (!splice)\n          splice = newSplice(index, [], 0);\n\n        splice.addedCount++;\n        index++;\n        break;\n      case EDIT_DELETE:\n        if (!splice)\n          splice = newSplice(index, [], 0);\n\n        splice.removed.push(old[oldIndex]);\n        oldIndex++;\n        break;\n    }\n  }\n\n  if (splice) {\n    splices.push(splice);\n  }\n  return splices;\n}\n\nfunction sharedPrefix(current, old, searchLength) {\n  for (let i = 0; i < searchLength; i++)\n    if (!equals(current[i], old[i]))\n      return i;\n  return searchLength;\n}\n\nfunction sharedSuffix(current, old, searchLength) {\n  let index1 = current.length;\n  let index2 = old.length;\n  let count = 0;\n  while (count < searchLength && equals(current[--index1], old[--index2]))\n    count++;\n\n  return count;\n}\n\n/**\n * Returns an array of splice records indicating the minimum edits required\n * to transform the `previous` array into the `current` array.\n *\n * Splice records are ordered by index and contain the following fields:\n * - `index`: index where edit started\n * - `removed`: array of removed items from this index\n * - `addedCount`: number of items added at this index\n *\n * This function is based on the Levenshtein \"minimum edit distance\"\n * algorithm. Note that updates are treated as removal followed by addition.\n *\n * The worst-case time complexity of this algorithm is `O(l * p)`\n *   l: The length of the current array\n *   p: The length of the previous array\n *\n * However, the worst-case complexity is reduced by an `O(n)` optimization\n * to detect any shared prefix & suffix between the two arrays and only\n * perform the more expensive minimum edit distance calculation over the\n * non-shared portions of the arrays.\n *\n * @function\n * @param {!Array} current The \"changed\" array for which splices will be\n * calculated.\n * @param {!Array} previous The \"unchanged\" original array to compare\n * `current` against to determine the splices.\n * @return {!Array} Returns an array of splice record objects. Each of these\n * contains: `index` the location where the splice occurred; `removed`\n * the array of removed items from this location; `addedCount` the number\n * of items added at this location.\n */\nexport function calculateSplices(current, previous) {\n  return calcSplices(current, 0, current.length, previous, 0,\n                          previous.length);\n}\n\nfunction equals(currentValue, previousValue) {\n  return currentValue === previousValue;\n}\n","/**\n@license\nCopyright (c) 2017 The Polymer Project Authors. All rights reserved.\nThis code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt\nThe complete set of authors may be found at http://polymer.github.io/AUTHORS.txt\nThe complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt\nCode distributed by Google as part of the polymer project is also\nsubject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt\n*/\nimport './boot.js';\n\nimport { calculateSplices } from './array-splice.js';\nimport { microTask } from './async.js';\nimport { wrap } from './wrap.js';\n\n/**\n * Returns true if `node` is a slot element\n * @param {!Node} node Node to test.\n * @return {boolean} Returns true if the given `node` is a slot\n * @private\n */\nfunction isSlot(node) {\n  return (node.localName === 'slot');\n}\n\n/**\n * Class that listens for changes (additions or removals) to\n * \"flattened nodes\" on a given `node`. The list of flattened nodes consists\n * of a node's children and, for any children that are `<slot>` elements,\n * the expanded flattened list of `assignedNodes`.\n * For example, if the observed node has children `<a></a><slot></slot><b></b>`\n * and the `<slot>` has one `<div>` assigned to it, then the flattened\n * nodes list is `<a></a><div></div><b></b>`. If the `<slot>` has other\n * `<slot>` elements assigned to it, these are flattened as well.\n *\n * The provided `callback` is called whenever any change to this list\n * of flattened nodes occurs, where an addition or removal of a node is\n * considered a change. The `callback` is called with one argument, an object\n * containing an array of any `addedNodes` and `removedNodes`.\n *\n * Note: the callback is called asynchronous to any changes\n * at a microtask checkpoint. This is because observation is performed using\n * `MutationObserver` and the `<slot>` element's `slotchange` event which\n * are asynchronous.\n *\n * An example:\n * ```js\n * class TestSelfObserve extends PolymerElement {\n *   static get is() { return 'test-self-observe';}\n *   connectedCallback() {\n *     super.connectedCallback();\n *     this._observer = new FlattenedNodesObserver(this, (info) => {\n *       this.info = info;\n *     });\n *   }\n *   disconnectedCallback() {\n *     super.disconnectedCallback();\n *     this._observer.disconnect();\n *   }\n * }\n * customElements.define(TestSelfObserve.is, TestSelfObserve);\n * ```\n *\n * @summary Class that listens for changes (additions or removals) to\n * \"flattened nodes\" on a given `node`.\n * @implements {PolymerDomApi.ObserveHandle}\n */\nexport let FlattenedNodesObserver = class {\n\n  /**\n   * Returns the list of flattened nodes for the given `node`.\n   * This list consists of a node's children and, for any children\n   * that are `<slot>` elements, the expanded flattened list of `assignedNodes`.\n   * For example, if the observed node has children `<a></a><slot></slot><b></b>`\n   * and the `<slot>` has one `<div>` assigned to it, then the flattened\n   * nodes list is `<a></a><div></div><b></b>`. If the `<slot>` has other\n   * `<slot>` elements assigned to it, these are flattened as well.\n   *\n   * @param {!HTMLElement|!HTMLSlotElement} node The node for which to\n   *      return the list of flattened nodes.\n   * @return {!Array<!Node>} The list of flattened nodes for the given `node`.\n   * @nocollapse See https://github.com/google/closure-compiler/issues/2763\n   */\n  // eslint-disable-next-line\n  static getFlattenedNodes(node) {\n    const wrapped = wrap(node);\n    if (isSlot(node)) {\n      node = /** @type {!HTMLSlotElement} */(node); // eslint-disable-line no-self-assign\n      return wrapped.assignedNodes({flatten: true});\n    } else {\n      return Array.from(wrapped.childNodes).map((node) => {\n        if (isSlot(node)) {\n          node = /** @type {!HTMLSlotElement} */(node); // eslint-disable-line no-self-assign\n          return wrap(node).assignedNodes({flatten: true});\n        } else {\n          return [node];\n        }\n      }).reduce((a, b) => a.concat(b), []);\n    }\n  }\n\n  /**\n   * @param {!HTMLElement} target Node on which to listen for changes.\n   * @param {?function(this: Element, { target: !HTMLElement, addedNodes: !Array<!Element>, removedNodes: !Array<!Element> }):void} callback Function called when there are additions\n   * or removals from the target's list of flattened nodes.\n   */\n  // eslint-disable-next-line\n  constructor(target, callback) {\n    /**\n     * @type {MutationObserver}\n     * @private\n     */\n    this._shadyChildrenObserver = null;\n    /**\n     * @type {MutationObserver}\n     * @private\n     */\n    this._nativeChildrenObserver = null;\n    this._connected = false;\n    /**\n     * @type {!HTMLElement}\n     * @private\n     */\n    this._target = target;\n    this.callback = callback;\n    this._effectiveNodes = [];\n    this._observer = null;\n    this._scheduled = false;\n    /**\n     * @type {function()}\n     * @private\n     */\n    this._boundSchedule = () => {\n      this._schedule();\n    };\n    this.connect();\n    this._schedule();\n  }\n\n  /**\n   * Activates an observer. This method is automatically called when\n   * a `FlattenedNodesObserver` is created. It should only be called to\n   * re-activate an observer that has been deactivated via the `disconnect` method.\n   *\n   * @return {void}\n   */\n  connect() {\n    if (isSlot(this._target)) {\n      this._listenSlots([this._target]);\n    } else if (wrap(this._target).children) {\n      this._listenSlots(\n          /** @type {!NodeList<!Node>} */ (wrap(this._target).children));\n      if (window.ShadyDOM) {\n        this._shadyChildrenObserver =\n          window.ShadyDOM.observeChildren(this._target, (mutations) => {\n            this._processMutations(mutations);\n          });\n      } else {\n        this._nativeChildrenObserver =\n          new MutationObserver((mutations) => {\n            this._processMutations(mutations);\n          });\n        this._nativeChildrenObserver.observe(this._target, {childList: true});\n      }\n    }\n    this._connected = true;\n  }\n\n  /**\n   * Deactivates the flattened nodes observer. After calling this method\n   * the observer callback will not be called when changes to flattened nodes\n   * occur. The `connect` method may be subsequently called to reactivate\n   * the observer.\n   *\n   * @return {void}\n   * @override\n   */\n  disconnect() {\n    if (isSlot(this._target)) {\n      this._unlistenSlots([this._target]);\n    } else if (wrap(this._target).children) {\n      this._unlistenSlots(\n          /** @type {!NodeList<!Node>} */ (wrap(this._target).children));\n      if (window.ShadyDOM && this._shadyChildrenObserver) {\n        window.ShadyDOM.unobserveChildren(this._shadyChildrenObserver);\n        this._shadyChildrenObserver = null;\n      } else if (this._nativeChildrenObserver) {\n        this._nativeChildrenObserver.disconnect();\n        this._nativeChildrenObserver = null;\n      }\n    }\n    this._connected = false;\n  }\n\n  /**\n   * @return {void}\n   * @private\n   */\n  _schedule() {\n    if (!this._scheduled) {\n      this._scheduled = true;\n      microTask.run(() => this.flush());\n    }\n  }\n\n  /**\n   * @param {Array<MutationRecord>} mutations Mutations signaled by the mutation observer\n   * @return {void}\n   * @private\n   */\n  _processMutations(mutations) {\n    this._processSlotMutations(mutations);\n    this.flush();\n  }\n\n  /**\n   * @param {Array<MutationRecord>} mutations Mutations signaled by the mutation observer\n   * @return {void}\n   * @private\n   */\n  _processSlotMutations(mutations) {\n    if (mutations) {\n      for (let i=0; i < mutations.length; i++) {\n        let mutation = mutations[i];\n        if (mutation.addedNodes) {\n          this._listenSlots(mutation.addedNodes);\n        }\n        if (mutation.removedNodes) {\n          this._unlistenSlots(mutation.removedNodes);\n        }\n      }\n    }\n  }\n\n  /**\n   * Flushes the observer causing any pending changes to be immediately\n   * delivered the observer callback. By default these changes are delivered\n   * asynchronously at the next microtask checkpoint.\n   *\n   * @return {boolean} Returns true if any pending changes caused the observer\n   * callback to run.\n   */\n  flush() {\n    if (!this._connected) {\n      return false;\n    }\n    if (window.ShadyDOM) {\n      ShadyDOM.flush();\n    }\n    if (this._nativeChildrenObserver) {\n      this._processSlotMutations(this._nativeChildrenObserver.takeRecords());\n    } else if (this._shadyChildrenObserver) {\n      this._processSlotMutations(this._shadyChildrenObserver.takeRecords());\n    }\n    this._scheduled = false;\n    let info = {\n      target: this._target,\n      addedNodes: [],\n      removedNodes: []\n    };\n    let newNodes = this.constructor.getFlattenedNodes(this._target);\n    let splices = calculateSplices(newNodes,\n      this._effectiveNodes);\n    // process removals\n    for (let i=0, s; (i<splices.length) && (s=splices[i]); i++) {\n      for (let j=0, n; (j < s.removed.length) && (n=s.removed[j]); j++) {\n        info.removedNodes.push(n);\n      }\n    }\n    // process adds\n    for (let i=0, s; (i<splices.length) && (s=splices[i]); i++) {\n      for (let j=s.index; j < s.index + s.addedCount; j++) {\n        info.addedNodes.push(newNodes[j]);\n      }\n    }\n    // update cache\n    this._effectiveNodes = newNodes;\n    let didFlush = false;\n    if (info.addedNodes.length || info.removedNodes.length) {\n      didFlush = true;\n      this.callback.call(this._target, info);\n    }\n    return didFlush;\n  }\n\n  /**\n   * @param {!Array<!Node>|!NodeList<!Node>} nodeList Nodes that could change\n   * @return {void}\n   * @private\n   */\n  _listenSlots(nodeList) {\n    for (let i=0; i < nodeList.length; i++) {\n      let n = nodeList[i];\n      if (isSlot(n)) {\n        n.addEventListener('slotchange', this._boundSchedule);\n      }\n    }\n  }\n\n  /**\n   * @param {!Array<!Node>|!NodeList<!Node>} nodeList Nodes that could change\n   * @return {void}\n   * @private\n   */\n  _unlistenSlots(nodeList) {\n    for (let i=0; i < nodeList.length; i++) {\n      let n = nodeList[i];\n      if (isSlot(n)) {\n        n.removeEventListener('slotchange', this._boundSchedule);\n      }\n    }\n  }\n\n};","/**\n@license\nCopyright (c) 2017 The Polymer Project Authors. All rights reserved.\nThis code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt\nThe complete set of authors may be found at http://polymer.github.io/AUTHORS.txt\nThe complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt\nCode distributed by Google as part of the polymer project is also\nsubject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt\n*/\nimport './boot.js';\nimport {enqueueDebouncer, flushDebouncers} from '../utils/debounce.js';\nexport {enqueueDebouncer};\n\n/**\n * Forces several classes of asynchronously queued tasks to flush:\n * - Debouncers added via `enqueueDebouncer`\n * - ShadyDOM distribution\n *\n * @return {void}\n */\nexport const flush = function() {\n  let shadyDOM, debouncers;\n  do {\n    shadyDOM = window.ShadyDOM && ShadyDOM.flush();\n    if (window.ShadyCSS && window.ShadyCSS.ScopingShim) {\n      window.ShadyCSS.ScopingShim.flush();\n    }\n    debouncers = flushDebouncers();\n  } while (shadyDOM || debouncers);\n};\n","/**\n@license\nCopyright (c) 2017 The Polymer Project Authors. All rights reserved.\nThis code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt\nThe complete set of authors may be found at http://polymer.github.io/AUTHORS.txt\nThe complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt\nCode distributed by Google as part of the polymer project is also\nsubject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt\n*/\nimport '../utils/boot.js';\nimport { wrap } from '../utils/wrap.js';\nimport '../utils/settings.js';\nimport { FlattenedNodesObserver } from '../utils/flattened-nodes-observer.js';\nexport { flush, enqueueDebouncer as addDebouncer } from '../utils/flush.js';\n/* eslint-disable no-unused-vars */\nimport { Debouncer } from '../utils/debounce.js';  // used in type annotations\n/* eslint-enable no-unused-vars */\n\nconst p = Element.prototype;\n/**\n * @const {function(this:Node, string): boolean}\n */\nconst normalizedMatchesSelector = p.matches || p.matchesSelector ||\n  p.mozMatchesSelector || p.msMatchesSelector ||\n  p.oMatchesSelector || p.webkitMatchesSelector;\n\n/**\n * Cross-platform `element.matches` shim.\n *\n * @function matchesSelector\n * @param {!Node} node Node to check selector against\n * @param {string} selector Selector to match\n * @return {boolean} True if node matched selector\n */\nexport const matchesSelector = function(node, selector) {\n  return normalizedMatchesSelector.call(node, selector);\n};\n\n/**\n * Node API wrapper class returned from `Polymer.dom.(target)` when\n * `target` is a `Node`.\n * @implements {PolymerDomApi}\n * @unrestricted\n */\nclass DomApiNative {\n\n  /**\n   * @param {!Node} node Node for which to create a Polymer.dom helper object.\n   */\n  constructor(node) {\n    if (window['ShadyDOM'] && window['ShadyDOM']['inUse']) {\n      window['ShadyDOM']['patch'](node);\n    }\n    this.node = node;\n  }\n\n  /**\n   * Returns an instance of `FlattenedNodesObserver` that\n   * listens for node changes on this element.\n   *\n   * @param {function(this:HTMLElement, { target: !HTMLElement, addedNodes: !Array<!Element>, removedNodes: !Array<!Element> }):void} callback Called when direct or distributed children\n   *   of this element changes\n   * @return {!PolymerDomApi.ObserveHandle} Observer instance\n   * @override\n   */\n  observeNodes(callback) {\n    return new FlattenedNodesObserver(\n        /** @type {!HTMLElement} */(this.node), callback);\n  }\n\n  /**\n   * Disconnects an observer previously created via `observeNodes`\n   *\n   * @param {!PolymerDomApi.ObserveHandle} observerHandle Observer instance\n   *   to disconnect.\n   * @return {void}\n   * @override\n   */\n  unobserveNodes(observerHandle) {\n    observerHandle.disconnect();\n  }\n\n  /**\n   * Provided as a backwards-compatible API only.  This method does nothing.\n   * @return {void}\n   */\n  notifyObserver() {}\n\n  /**\n   * Returns true if the provided node is contained with this element's\n   * light-DOM children or shadow root, including any nested shadow roots\n   * of children therein.\n   *\n   * @param {Node} node Node to test\n   * @return {boolean} Returns true if the given `node` is contained within\n   *   this element's light or shadow DOM.\n   * @override\n   */\n  deepContains(node) {\n    if (wrap(this.node).contains(node)) {\n      return true;\n    }\n    let n = node;\n    let doc = node.ownerDocument;\n    // walk from node to `this` or `document`\n    while (n && n !== doc && n !== this.node) {\n      // use logical parentnode, or native ShadowRoot host\n      n = wrap(n).parentNode || wrap(n).host;\n    }\n    return n === this.node;\n  }\n\n  /**\n   * Returns the root node of this node.  Equivalent to `getRootNode()`.\n   *\n   * @return {!Node} Top most element in the dom tree in which the node\n   * exists. If the node is connected to a document this is either a\n   * shadowRoot or the document; otherwise, it may be the node\n   * itself or a node or document fragment containing it.\n   * @override\n   */\n  getOwnerRoot() {\n    return wrap(this.node).getRootNode();\n  }\n\n  /**\n   * For slot elements, returns the nodes assigned to the slot; otherwise\n   * an empty array. It is equivalent to `<slot>.addignedNodes({flatten:true})`.\n   *\n   * @return {!Array<!Node>} Array of assigned nodes\n   * @override\n   */\n  getDistributedNodes() {\n    return (this.node.localName === 'slot') ?\n      wrap(this.node).assignedNodes({flatten: true}) :\n      [];\n  }\n\n  /**\n   * Returns an array of all slots this element was distributed to.\n   *\n   * @return {!Array<!HTMLSlotElement>} Description\n   * @override\n   */\n  getDestinationInsertionPoints() {\n    let ip$ = [];\n    let n = wrap(this.node).assignedSlot;\n    while (n) {\n      ip$.push(n);\n      n = wrap(n).assignedSlot;\n    }\n    return ip$;\n  }\n\n  /**\n   * Calls `importNode` on the `ownerDocument` for this node.\n   *\n   * @param {!Node} node Node to import\n   * @param {boolean} deep True if the node should be cloned deeply during\n   *   import\n   * @return {Node} Clone of given node imported to this owner document\n   */\n  importNode(node, deep) {\n    let doc = this.node instanceof Document ? this.node :\n      this.node.ownerDocument;\n    return wrap(doc).importNode(node, deep);\n  }\n\n  /**\n   * @return {!Array<!Node>} Returns a flattened list of all child nodes and\n   * nodes assigned to child slots.\n   * @override\n   */\n  getEffectiveChildNodes() {\n    return FlattenedNodesObserver.getFlattenedNodes(\n        /** @type {!HTMLElement} */ (this.node));\n  }\n\n  /**\n   * Returns a filtered list of flattened child elements for this element based\n   * on the given selector.\n   *\n   * @param {string} selector Selector to filter nodes against\n   * @return {!Array<!HTMLElement>} List of flattened child elements\n   * @override\n   */\n  queryDistributedElements(selector) {\n    let c$ = this.getEffectiveChildNodes();\n    let list = [];\n    for (let i=0, l=c$.length, c; (i<l) && (c=c$[i]); i++) {\n      if ((c.nodeType === Node.ELEMENT_NODE) &&\n          matchesSelector(c, selector)) {\n        list.push(c);\n      }\n    }\n    return list;\n  }\n\n  /**\n   * For shadow roots, returns the currently focused element within this\n   * shadow root.\n   *\n   * return {Node|undefined} Currently focused element\n   * @override\n   */\n  get activeElement() {\n    let node = this.node;\n    return node._activeElement !== undefined ? node._activeElement : node.activeElement;\n  }\n}\n\nfunction forwardMethods(proto, methods) {\n  for (let i=0; i < methods.length; i++) {\n    let method = methods[i];\n    /* eslint-disable valid-jsdoc */\n    proto[method] = /** @this {DomApiNative} */ function() {\n      return this.node[method].apply(this.node, arguments);\n    };\n    /* eslint-enable */\n  }\n}\n\nfunction forwardReadOnlyProperties(proto, properties) {\n  for (let i=0; i < properties.length; i++) {\n    let name = properties[i];\n    Object.defineProperty(proto, name, {\n      get: function() {\n        const domApi = /** @type {DomApiNative} */(this);\n        return domApi.node[name];\n      },\n      configurable: true\n    });\n  }\n}\n\nfunction forwardProperties(proto, properties) {\n  for (let i=0; i < properties.length; i++) {\n    let name = properties[i];\n    Object.defineProperty(proto, name, {\n      /**\n       * @this {DomApiNative}\n       * @return {*} .\n       */\n      get: function() {\n        return this.node[name];\n      },\n      /**\n       * @this {DomApiNative}\n       * @param {*} value .\n       */\n      set: function(value) {\n        this.node[name] = value;\n      },\n      configurable: true\n    });\n  }\n}\n\n\n/**\n * Event API wrapper class returned from `dom.(target)` when\n * `target` is an `Event`.\n */\nexport class EventApi {\n  constructor(event) {\n    this.event = event;\n  }\n\n  /**\n   * Returns the first node on the `composedPath` of this event.\n   *\n   * @return {!EventTarget} The node this event was dispatched to\n   */\n  get rootTarget() {\n    return this.path[0];\n  }\n\n  /**\n   * Returns the local (re-targeted) target for this event.\n   *\n   * @return {!EventTarget} The local (re-targeted) target for this event.\n   */\n  get localTarget() {\n    return this.event.target;\n  }\n\n  /**\n   * Returns the `composedPath` for this event.\n   * @return {!Array<!EventTarget>} The nodes this event propagated through\n   */\n  get path() {\n    return this.event.composedPath();\n  }\n}\n\n/**\n * @function\n * @param {boolean=} deep\n * @return {!Node}\n */\nDomApiNative.prototype.cloneNode;\n/**\n * @function\n * @param {!Node} node\n * @return {!Node}\n */\nDomApiNative.prototype.appendChild;\n/**\n * @function\n * @param {!Node} newChild\n * @param {Node} refChild\n * @return {!Node}\n */\nDomApiNative.prototype.insertBefore;\n/**\n * @function\n * @param {!Node} node\n * @return {!Node}\n */\nDomApiNative.prototype.removeChild;\n/**\n * @function\n * @param {!Node} oldChild\n * @param {!Node} newChild\n * @return {!Node}\n */\nDomApiNative.prototype.replaceChild;\n/**\n * @function\n * @param {string} name\n * @param {string} value\n * @return {void}\n */\nDomApiNative.prototype.setAttribute;\n/**\n * @function\n * @param {string} name\n * @return {void}\n */\nDomApiNative.prototype.removeAttribute;\n/**\n * @function\n * @param {string} selector\n * @return {?Element}\n */\nDomApiNative.prototype.querySelector;\n/**\n * @function\n * @param {string} selector\n * @return {!NodeList<!Element>}\n */\nDomApiNative.prototype.querySelectorAll;\n\n/** @type {?Node} */\nDomApiNative.prototype.parentNode;\n/** @type {?Node} */\nDomApiNative.prototype.firstChild;\n/** @type {?Node} */\nDomApiNative.prototype.lastChild;\n/** @type {?Node} */\nDomApiNative.prototype.nextSibling;\n/** @type {?Node} */\nDomApiNative.prototype.previousSibling;\n/** @type {?HTMLElement} */\nDomApiNative.prototype.firstElementChild;\n/** @type {?HTMLElement} */\nDomApiNative.prototype.lastElementChild;\n/** @type {?HTMLElement} */\nDomApiNative.prototype.nextElementSibling;\n/** @type {?HTMLElement} */\nDomApiNative.prototype.previousElementSibling;\n/** @type {!Array<!Node>} */\nDomApiNative.prototype.childNodes;\n/** @type {!Array<!HTMLElement>} */\nDomApiNative.prototype.children;\n/** @type {?DOMTokenList} */\nDomApiNative.prototype.classList;\n\n/** @type {string} */\nDomApiNative.prototype.textContent;\n/** @type {string} */\nDomApiNative.prototype.innerHTML;\n\nlet DomApiImpl = DomApiNative;\n\nif (window['ShadyDOM'] && window['ShadyDOM']['inUse'] && window['ShadyDOM']['noPatch'] && window['ShadyDOM']['Wrapper']) {\n\n  /**\n   * @private\n   * @extends {HTMLElement}\n   */\n  class Wrapper extends window['ShadyDOM']['Wrapper'] {}\n\n  // copy bespoke API onto wrapper\n  Object.getOwnPropertyNames(DomApiNative.prototype).forEach((prop) => {\n    if (prop != 'activeElement') {\n      Wrapper.prototype[prop] = DomApiNative.prototype[prop];\n    }\n  });\n\n  // Note, `classList` is here only for legacy compatibility since it does not\n  // trigger distribution in v1 Shadow DOM.\n  forwardReadOnlyProperties(Wrapper.prototype, [\n    'classList'\n  ]);\n\n  DomApiImpl = Wrapper;\n\n  Object.defineProperties(EventApi.prototype, {\n\n    // Returns the \"lowest\" node in the same root as the event's currentTarget.\n    // When in `noPatch` mode, this must be calculated by walking the event's\n    // path.\n    localTarget: {\n      get() {\n        const current = this.event.currentTarget;\n        const currentRoot = current && dom(current).getOwnerRoot();\n        const p$ = this.path;\n        for (let i = 0; i < p$.length; i++) {\n          const e = p$[i];\n          if (dom(e).getOwnerRoot() === currentRoot) {\n            return e;\n          }\n        }\n      },\n      configurable: true\n    },\n\n    path: {\n      get() {\n        return window['ShadyDOM']['composedPath'](this.event);\n      },\n      configurable: true\n    }\n  });\n\n} else {\n\n  // Methods that can provoke distribution or must return the logical, not\n  // composed tree.\n  forwardMethods(DomApiNative.prototype, [\n    'cloneNode', 'appendChild', 'insertBefore', 'removeChild',\n    'replaceChild', 'setAttribute', 'removeAttribute',\n    'querySelector', 'querySelectorAll', 'attachShadow'\n  ]);\n\n  // Properties that should return the logical, not composed tree. Note, `classList`\n  // is here only for legacy compatibility since it does not trigger distribution\n  // in v1 Shadow DOM.\n  forwardReadOnlyProperties(DomApiNative.prototype, [\n    'parentNode', 'firstChild', 'lastChild',\n    'nextSibling', 'previousSibling', 'firstElementChild',\n    'lastElementChild', 'nextElementSibling', 'previousElementSibling',\n    'childNodes', 'children', 'classList', 'shadowRoot'\n  ]);\n\n  forwardProperties(DomApiNative.prototype, [\n    'textContent', 'innerHTML', 'className'\n  ]);\n}\n\nexport const DomApi = DomApiImpl;\n\n/**\n * Legacy DOM and Event manipulation API wrapper factory used to abstract\n * differences between native Shadow DOM and \"Shady DOM\" when polyfilling on\n * older browsers.\n *\n * Note that in Polymer 2.x use of `Polymer.dom` is no longer required and\n * in the majority of cases simply facades directly to the standard native\n * API.\n *\n * @summary Legacy DOM and Event manipulation API wrapper factory used to\n * abstract differences between native Shadow DOM and \"Shady DOM.\"\n * @param {(Node|Event|DomApiNative|EventApi)=} obj Node or event to operate on\n * @return {!DomApiNative|!EventApi} Wrapper providing either node API or event API\n */\nexport const dom = function(obj) {\n  obj = obj || document;\n  if (obj instanceof DomApiImpl) {\n    return /** @type {!DomApi} */(obj);\n  }\n  if (obj instanceof EventApi) {\n    return /** @type {!EventApi} */(obj);\n  }\n  let helper = obj['__domApi'];\n  if (!helper) {\n    if (obj instanceof Event) {\n      helper = new EventApi(obj);\n    } else {\n      helper = new DomApiImpl(/** @type {Node} */(obj));\n    }\n    obj['__domApi'] = helper;\n  }\n  return helper;\n};\n","/**\n@license\nCopyright (c) 2019 The Polymer Project Authors. All rights reserved.\nThis code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt\nThe complete set of authors may be found at http://polymer.github.io/AUTHORS.txt\nThe complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt\nCode distributed by Google as part of the polymer project is also\nsubject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt\n*/\n\nimport './boot.js';\nimport {wrap} from './wrap.js';\n\nconst ShadyDOM = window.ShadyDOM;\nconst ShadyCSS = window.ShadyCSS;\n\n/**\n * Return true if node scope is correct.\n *\n * @param {!Element} node Node to check scope\n * @param {!Node} scope Scope reference\n * @return {boolean} True if node is in scope\n */\nfunction sameScope(node, scope) {\n  return wrap(node).getRootNode() === scope;\n}\n\n/**\n * Ensure that elements in a ShadowDOM container are scoped correctly.\n * This function is only needed when ShadyDOM is used and unpatched DOM APIs are used in third party code.\n * This can happen in noPatch mode or when specialized APIs like ranges or tables are used to mutate DOM.\n *\n * @param  {!Element} container Container element to scope\n * @param  {boolean=} shouldObserve if true, start a mutation observer for added nodes to the container\n * @return {?MutationObserver} Returns a new MutationObserver on `container` if `shouldObserve` is true.\n */\nexport function scopeSubtree(container, shouldObserve = false) {\n  // If using native ShadowDOM, abort\n  if (!ShadyDOM || !ShadyCSS) {\n    return null;\n  }\n  // ShadyCSS handles DOM mutations when ShadyDOM does not handle scoping itself\n  if (!ShadyDOM['handlesDynamicScoping']) {\n    return null;\n  }\n  const ScopingShim = ShadyCSS['ScopingShim'];\n  // if ScopingShim is not available, abort\n  if (!ScopingShim) {\n    return null;\n  }\n  // capture correct scope for container\n  const containerScope = ScopingShim['scopeForNode'](container);\n  const root = wrap(container).getRootNode();\n\n  const scopify = (node) => {\n    if (!sameScope(node, root)) {\n      return;\n    }\n    // NOTE: native qSA does not honor scoped DOM, but it is faster, and the same behavior as Polymer v1\n    const elements = Array.from(ShadyDOM['nativeMethods']['querySelectorAll'].call(node, '*'));\n    elements.push(node);\n    for (let i = 0; i < elements.length; i++) {\n      const el = elements[i];\n      if (!sameScope(el, root)) {\n        continue;\n      }\n      const currentScope = ScopingShim['currentScopeForNode'](el);\n      if (currentScope !== containerScope) {\n        if (currentScope !== '') {\n          ScopingShim['unscopeNode'](el, currentScope);\n        }\n        ScopingShim['scopeNode'](el, containerScope);\n      }\n    }\n  };\n\n  // scope everything in container\n  scopify(container);\n\n  if (shouldObserve) {\n    const mo = new MutationObserver((mxns) => {\n      for (let i = 0; i < mxns.length; i++) {\n        const mxn = mxns[i];\n        for (let j = 0; j < mxn.addedNodes.length; j++) {\n          const addedNode = mxn.addedNodes[j];\n          if (addedNode.nodeType === Node.ELEMENT_NODE) {\n            scopify(addedNode);\n          }\n        }\n      }\n    });\n    mo.observe(container, {childList: true, subtree: true});\n    return mo;\n  } else {\n    return null;\n  }\n}","/**\n * @fileoverview\n * @suppress {checkPrototypalTypes}\n * @license Copyright (c) 2017 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at\n * http://polymer.github.io/LICENSE.txt The complete set of authors may be found\n * at http://polymer.github.io/AUTHORS.txt The complete set of contributors may\n * be found at http://polymer.github.io/CONTRIBUTORS.txt Code distributed by\n * Google as part of the polymer project is also subject to an additional IP\n * rights grant found at http://polymer.github.io/PATENTS.txt\n */\nimport { ElementMixin } from './element-mixin.js';\nimport { dedupingMixin } from '../utils/mixin.js';\nimport { wrap } from '../utils/wrap.js';\n\nconst DISABLED_ATTR = 'disable-upgrade';\n\nexport const findObservedAttributesGetter = (ctor) => {\n  while (ctor) {\n    const desc = Object.getOwnPropertyDescriptor(ctor, 'observedAttributes');\n    if (desc) {\n      return desc.get;\n    }\n    ctor = Object.getPrototypeOf(ctor.prototype).constructor;\n  }\n  return () => [];\n};\n\n/**\n * Element class mixin that allows the element to boot up in a non-enabled\n * state when the `disable-upgrade` attribute is present. This mixin is\n * designed to be used with element classes like PolymerElement that perform\n * initial startup work when they are first connected. When the\n * `disable-upgrade` attribute is removed, if the element is connected, it\n * boots up and \"enables\" as it otherwise would; if it is not connected, the\n * element boots up when it is next connected.\n *\n * Using `disable-upgrade` with PolymerElement prevents any data propagation\n * to the element, any element DOM from stamping, or any work done in\n * connected/disconnctedCallback from occuring, but it does not prevent work\n * done in the element constructor.\n *\n * Note, this mixin must be applied on top of any element class that\n * itself implements a `connectedCallback` so that it can control the work\n * done in `connectedCallback`. For example,\n *\n *     MyClass = DisableUpgradeMixin(class extends BaseClass {...});\n *\n * @mixinFunction\n * @polymer\n * @appliesMixin ElementMixin\n * @template T\n * @param {function(new:T)} superClass Class to apply mixin to.\n * @return {function(new:T)} superClass with mixin applied.\n */\nexport const DisableUpgradeMixin = dedupingMixin((base) => {\n  /**\n   * @constructor\n   * @implements {Polymer_ElementMixin}\n   * @extends {HTMLElement}\n   * @private\n   */\n  const superClass = ElementMixin(base);\n\n  // Work around for closure bug #126934458. Using `super` in a property\n  // getter does not work so instead we search the Base prototype for an\n  // implementation of observedAttributes so that we can override and call\n  // the `super` getter. Note, this is done one time ever because we assume\n  // that `Base` is always comes from `Polymer.LegacyElementMixn`.\n  let observedAttributesGetter = findObservedAttributesGetter(superClass);\n\n  /**\n   * @polymer\n   * @mixinClass\n   * @implements {Polymer_DisableUpgradeMixin}\n   */\n  class DisableUpgradeClass extends superClass {\n\n    constructor() {\n      super();\n      /** @type {boolean|undefined} */\n      this.__isUpgradeDisabled;\n    }\n\n    static get observedAttributes() {\n      return observedAttributesGetter.call(this).concat(DISABLED_ATTR);\n    }\n\n    // Prevent element from initializing properties when it's upgrade disabled.\n    /** @override */\n    _initializeProperties() {\n      if (this.hasAttribute(DISABLED_ATTR)) {\n        this.__isUpgradeDisabled = true;\n      } else {\n        super._initializeProperties();\n      }\n    }\n\n    // Prevent element from enabling properties when it's upgrade disabled.\n    // Normally overriding connectedCallback would be enough, but dom-* elements\n    /** @override */\n    _enableProperties() {\n      if (!this.__isUpgradeDisabled) {\n        super._enableProperties();\n      }\n    }\n\n    // If the element starts upgrade-disabled and a property is set for\n    // which an accessor exists, the default should not be applied.\n    // This additional check is needed because defaults are applied via\n    // `_initializeProperties` which is called after initial properties\n    // have been set when the element starts upgrade-disabled.\n    /** @override */\n    _canApplyPropertyDefault(property) {\n      return super._canApplyPropertyDefault(property) &&\n        !(this.__isUpgradeDisabled && this._isPropertyPending(property));\n    }\n\n    /**\n     * @override\n     * @param {string} name Attribute name.\n     * @param {?string} old The previous value for the attribute.\n     * @param {?string} value The new value for the attribute.\n     * @param {?string} namespace The XML namespace for the attribute.\n     * @return {void}\n     */\n    attributeChangedCallback(name, old, value, namespace) {\n      if (name == DISABLED_ATTR) {\n        // When disable-upgrade is removed, initialize properties and\n        // provoke connectedCallback if the element is already connected.\n        if (this.__isUpgradeDisabled && value == null) {\n          super._initializeProperties();\n          this.__isUpgradeDisabled = false;\n          if (wrap(this).isConnected) {\n            super.connectedCallback();\n          }\n        }\n      } else {\n        super.attributeChangedCallback(\n            name, old, value, /** @type {null|string} */ (namespace));\n      }\n    }\n\n    // Prevent element from connecting when it's upgrade disabled.\n    // This prevents user code in `attached` from being called.\n    /** @override */\n    connectedCallback() {\n      if (!this.__isUpgradeDisabled) {\n        super.connectedCallback();\n      }\n    }\n\n    // Prevent element from disconnecting when it's upgrade disabled.\n    // This avoids allowing user code `detached` from being called without a\n    // paired call to `attached`.\n    /** @override */\n    disconnectedCallback() {\n      if (!this.__isUpgradeDisabled) {\n        super.disconnectedCallback();\n      }\n    }\n\n  }\n\n  return DisableUpgradeClass;\n});\n","/**\n@license\nCopyright (c) 2017 The Polymer Project Authors. All rights reserved.\nThis code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt\nThe complete set of authors may be found at http://polymer.github.io/AUTHORS.txt\nThe complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt\nCode distributed by Google as part of the polymer project is also\nsubject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt\n*/\nimport '@webcomponents/shadycss/entrypoints/apply-shim.js';\nimport { ElementMixin, builtCSS } from '../mixins/element-mixin.js';\nimport { GestureEventListeners } from '../mixins/gesture-event-listeners.js';\nimport { DirMixin } from '../mixins/dir-mixin.js';\nimport { dedupingMixin } from '../utils/mixin.js';\nimport '../utils/render-status.js';\nimport '../utils/unresolved.js';\nimport { dom, matchesSelector } from './polymer.dom.js';\nimport { setTouchAction } from '../utils/gestures.js';\nimport { Debouncer } from '../utils/debounce.js';\nimport { timeOut, microTask } from '../utils/async.js';\nimport { get } from '../utils/path.js';\nimport { wrap } from '../utils/wrap.js';\nimport { scopeSubtree } from '../utils/scope-subtree.js';\nimport { legacyOptimizations, legacyNoObservedAttributes } from '../utils/settings.js';\nimport { findObservedAttributesGetter } from '../mixins/disable-upgrade-mixin.js';\nimport { register } from '../utils/telemetry.js';\n\nconst DISABLED_ATTR = 'disable-upgrade';\n\nlet styleInterface = window.ShadyCSS;\n\n/**\n * Element class mixin that provides Polymer's \"legacy\" API intended to be\n * backward-compatible to the greatest extent possible with the API\n * found on the Polymer 1.x `Polymer.Base` prototype applied to all elements\n * defined using the `Polymer({...})` function.\n *\n * @mixinFunction\n * @polymer\n * @appliesMixin ElementMixin\n * @appliesMixin GestureEventListeners\n * @appliesMixin DirMixin\n * @property isAttached {boolean} Set to `true` in this element's\n *   `connectedCallback` and `false` in `disconnectedCallback`\n * @summary Element class mixin that provides Polymer's \"legacy\" API\n */\nexport const LegacyElementMixin = dedupingMixin((base) => {\n\n  // TODO(kschaaf): Note, the `@implements {Polymer_DirMixin}` is required here\n  // (rather than on legacyElementBase) for unknown reasons.\n  /**\n   * @constructor\n   * @implements {Polymer_ElementMixin}\n   * @implements {Polymer_GestureEventListeners}\n   * @implements {Polymer_DirMixin}\n   * @extends {HTMLElement}\n   * @private\n   */\n  const GesturesElement = GestureEventListeners(ElementMixin(base));\n\n  // Note, the DirMixin does nothing if css is built so avoid including it\n  // in that case.\n\n  /**\n   * @constructor\n   * @extends {GesturesElement}\n   * @private\n   */\n  const legacyElementBase = builtCSS ? GesturesElement :\n    DirMixin(GesturesElement);\n\n  const observedAttributesGetter = findObservedAttributesGetter(legacyElementBase);\n\n  /**\n   * Map of simple names to touch action names\n   * @dict\n   */\n  const DIRECTION_MAP = {\n    'x': 'pan-x',\n    'y': 'pan-y',\n    'none': 'none',\n    'all': 'auto'\n  };\n\n  /**\n   * @polymer\n   * @mixinClass\n   * @extends {legacyElementBase}\n   * @implements {Polymer_LegacyElementMixin}\n   * @unrestricted\n   */\n  class LegacyElement extends legacyElementBase {\n\n    constructor() {\n      super();\n      /** @type {boolean} */\n      this.isAttached;\n      /** @type {?WeakMap<!Element, !Object<string, !Function>>} */\n      this.__boundListeners;\n      /** @type {?Object<string, ?Function>} */\n      this._debouncers;\n      // NOTE: Inlined for perf from version of DisableUpgradeMixin.\n      /** @type {boolean|undefined} */\n      this.__isUpgradeDisabled;\n      /** @type {boolean|undefined} */\n      this.__needsAttributesAtConnected;\n      /** @type {boolean|undefined} */\n      this._legacyForceObservedAttributes;\n    }\n\n    /**\n     * Forwards `importMeta` from the prototype (i.e. from the info object\n     * passed to `Polymer({...})`) to the static API.\n     *\n     * @return {!Object} The `import.meta` object set on the prototype\n     * @suppress {missingProperties} `this` is always in the instance in\n     *  closure for some reason even in a static method, rather than the class\n     * @nocollapse\n     */\n    static get importMeta() {\n      return this.prototype.importMeta;\n    }\n\n    /**\n     * Legacy callback called during the `constructor`, for overriding\n     * by the user.\n     * @override\n     * @return {void}\n     */\n    created() {}\n\n    /**\n     * Processes an attribute reaction when the `legacyNoObservedAttributes`\n     * setting is in use.\n     * @param {string} name Name of attribute that changed\n     * @param {?string} old Old attribute value\n     * @param {?string} value New attribute value\n     * @return {void}\n     */\n    __attributeReaction(name, old, value) {\n      if ((this.__dataAttributes && this.__dataAttributes[name]) || name === DISABLED_ATTR) {\n        this.attributeChangedCallback(name, old, value, null);\n      }\n    }\n\n    /**\n     * Sets the value of an attribute.\n     * @override\n     */\n    setAttribute(name, value) {\n      if (legacyNoObservedAttributes && !this._legacyForceObservedAttributes) {\n        const oldValue = this.getAttribute(name);\n        super.setAttribute(name, value);\n        // value coerced to String for closure's benefit\n        this.__attributeReaction(name, oldValue, String(value));\n      } else {\n        super.setAttribute(name, value);\n      }\n    }\n\n    /**\n     * Removes an attribute.\n     * @override\n     */\n    removeAttribute(name) {\n      if (legacyNoObservedAttributes && !this._legacyForceObservedAttributes) {\n        const oldValue = this.getAttribute(name);\n        super.removeAttribute(name);\n        this.__attributeReaction(name, oldValue, null);\n      } else {\n        super.removeAttribute(name);\n      }\n    }\n\n    // NOTE: Inlined for perf from version of DisableUpgradeMixin.\n    static get observedAttributes() {\n      if (legacyNoObservedAttributes && !this.prototype._legacyForceObservedAttributes) {\n        // Ensure this element is property registered with the telemetry system.\n        if (!this.hasOwnProperty(JSCompiler_renameProperty('__observedAttributes', this))) {\n          this.__observedAttributes = [];\n          register(this.prototype);\n        }\n        return this.__observedAttributes;\n      } else {\n        return observedAttributesGetter.call(this).concat(DISABLED_ATTR);\n      }\n    }\n\n    // NOTE: Inlined for perf from version of DisableUpgradeMixin.\n    // Prevent element from enabling properties when it's upgrade disabled.\n    // Normally overriding connectedCallback would be enough, but dom-* elements\n    /** @override */\n    _enableProperties() {\n      if (!this.__isUpgradeDisabled) {\n        super._enableProperties();\n      }\n    }\n\n    // NOTE: Inlined for perf from version of DisableUpgradeMixin.\n    // If the element starts upgrade-disabled and a property is set for\n    // which an accessor exists, the default should not be applied.\n    // This additional check is needed because defaults are applied via\n    // `_initializeProperties` which is called after initial properties\n    // have been set when the element starts upgrade-disabled.\n    /** @override */\n    _canApplyPropertyDefault(property) {\n      return super._canApplyPropertyDefault(property) &&\n        !(this.__isUpgradeDisabled && this._isPropertyPending(property));\n    }\n\n    /**\n     * Provides an implementation of `connectedCallback`\n     * which adds Polymer legacy API's `attached` method.\n     * @return {void}\n     * @override\n     */\n    connectedCallback() {\n      if (this.__needsAttributesAtConnected) {\n        this._takeAttributes();\n      }\n      // NOTE: Inlined for perf from version of DisableUpgradeMixin.\n      if (!this.__isUpgradeDisabled) {\n        super.connectedCallback();\n        this.isAttached = true;\n        this.attached();\n      }\n    }\n\n    /**\n     * Legacy callback called during `connectedCallback`, for overriding\n     * by the user.\n     * @override\n     * @return {void}\n     */\n    attached() {}\n\n    /**\n     * Provides an implementation of `disconnectedCallback`\n     * which adds Polymer legacy API's `detached` method.\n     * @return {void}\n     * @override\n     */\n    disconnectedCallback() {\n      // NOTE: Inlined for perf from version of DisableUpgradeMixin.\n      if (!this.__isUpgradeDisabled) {\n        super.disconnectedCallback();\n        this.isAttached = false;\n        this.detached();\n      }\n    }\n\n    /**\n     * Legacy callback called during `disconnectedCallback`, for overriding\n     * by the user.\n     * @override\n     * @return {void}\n     */\n    detached() {}\n\n    /**\n     * Provides an override implementation of `attributeChangedCallback`\n     * which adds the Polymer legacy API's `attributeChanged` method.\n     * @param {string} name Name of attribute.\n     * @param {?string} old Old value of attribute.\n     * @param {?string} value Current value of attribute.\n     * @param {?string} namespace Attribute namespace.\n     * @return {void}\n     * @override\n     */\n    attributeChangedCallback(name, old, value, namespace) {\n      if (old !== value) {\n        // NOTE: Inlined for perf from version of DisableUpgradeMixin.\n        if (name == DISABLED_ATTR) {\n          // When disable-upgrade is removed, intialize properties and\n          // provoke connectedCallback if the element is already connected.\n          if (this.__isUpgradeDisabled && value == null) {\n            this._initializeProperties();\n            this.__isUpgradeDisabled = false;\n            if (wrap(this).isConnected) {\n              this.connectedCallback();\n            }\n          }\n        } else {\n          super.attributeChangedCallback(name, old, value, namespace);\n          this.attributeChanged(name, old, value);\n        }\n      }\n    }\n\n    /**\n     * Legacy callback called during `attributeChangedChallback`, for overriding\n     * by the user.\n     * @param {string} name Name of attribute.\n     * @param {?string} old Old value of attribute.\n     * @param {?string} value Current value of attribute.\n     * @return {void}\n     * @override\n     */\n    attributeChanged(name, old, value) {} // eslint-disable-line no-unused-vars\n\n    /**\n     * Overrides the default `Polymer.PropertyEffects` implementation to\n     * add support for class initialization via the `_registered` callback.\n     * This is called only when the first instance of the element is created.\n     *\n     * @return {void}\n     * @override\n     * @suppress {invalidCasts}\n     */\n    _initializeProperties() {\n      // NOTE: Inlined for perf from version of DisableUpgradeMixin.\n      // Only auto-use disable-upgrade if legacyOptimizations is set.\n      if (legacyOptimizations && this.hasAttribute(DISABLED_ATTR)) {\n        this.__isUpgradeDisabled = true;\n      } else {\n        let proto = Object.getPrototypeOf(this);\n        if (!proto.hasOwnProperty(JSCompiler_renameProperty('__hasRegisterFinished', proto))) {\n          this._registered();\n          // backstop in case the `_registered` implementation does not set this\n          proto.__hasRegisterFinished = true;\n        }\n        super._initializeProperties();\n        this.root = /** @type {HTMLElement} */(this);\n        this.created();\n        // Pull all attribute values 1x if `legacyNoObservedAttributes` is set.\n        if (legacyNoObservedAttributes && !this._legacyForceObservedAttributes) {\n          if (this.hasAttributes()) {\n            this._takeAttributes();\n          // Element created from scratch or parser generated\n          } else if (!this.parentNode) {\n            this.__needsAttributesAtConnected = true;\n          }\n        }\n        // Ensure listeners are applied immediately so that they are\n        // added before declarative event listeners. This allows an element to\n        // decorate itself via an event prior to any declarative listeners\n        // seeing the event. Note, this ensures compatibility with 1.x ordering.\n        this._applyListeners();\n      }\n    }\n\n    _takeAttributes() {\n      const a = this.attributes;\n      for (let i=0, l=a.length; i < l; i++) {\n        const attr = a[i];\n        this.__attributeReaction(attr.name, null, attr.value);\n      }\n    }\n\n    /**\n     * Called automatically when an element is initializing.\n     * Users may override this method to perform class registration time\n     * work. The implementation should ensure the work is performed\n     * only once for the class.\n     * @protected\n     * @return {void}\n     * @override\n     */\n    _registered() {}\n\n    /**\n     * Overrides the default `Polymer.PropertyEffects` implementation to\n     * add support for installing `hostAttributes` and `listeners`.\n     *\n     * @return {void}\n     * @override\n     */\n    ready() {\n      this._ensureAttributes();\n      super.ready();\n    }\n\n    /**\n     * Ensures an element has required attributes. Called when the element\n     * is being readied via `ready`. Users should override to set the\n     * element's required attributes. The implementation should be sure\n     * to check and not override existing attributes added by\n     * the user of the element. Typically, setting attributes should be left\n     * to the element user and not done here; reasonable exceptions include\n     * setting aria roles and focusability.\n     * @protected\n     * @return {void}\n     * @override\n     */\n    _ensureAttributes() {}\n\n    /**\n     * Adds element event listeners. Called when the element\n     * is being readied via `ready`. Users should override to\n     * add any required element event listeners.\n     * In performance critical elements, the work done here should be kept\n     * to a minimum since it is done before the element is rendered. In\n     * these elements, consider adding listeners asynchronously so as not to\n     * block render.\n     * @protected\n     * @return {void}\n     * @override\n     */\n    _applyListeners() {}\n\n    /**\n     * Converts a typed JavaScript value to a string.\n     *\n     * Note this method is provided as backward-compatible legacy API\n     * only.  It is not directly called by any Polymer features. To customize\n     * how properties are serialized to attributes for attribute bindings and\n     * `reflectToAttribute: true` properties as well as this method, override\n     * the `_serializeValue` method provided by `Polymer.PropertyAccessors`.\n     *\n     * @param {*} value Value to deserialize\n     * @return {string | undefined} Serialized value\n     * @override\n     */\n    serialize(value) {\n      return this._serializeValue(value);\n    }\n\n    /**\n     * Converts a string to a typed JavaScript value.\n     *\n     * Note this method is provided as backward-compatible legacy API\n     * only.  It is not directly called by any Polymer features.  To customize\n     * how attributes are deserialized to properties for in\n     * `attributeChangedCallback`, override `_deserializeValue` method\n     * provided by `Polymer.PropertyAccessors`.\n     *\n     * @param {string} value String to deserialize\n     * @param {*} type Type to deserialize the string to\n     * @return {*} Returns the deserialized value in the `type` given.\n     * @override\n     */\n    deserialize(value, type) {\n      return this._deserializeValue(value, type);\n    }\n\n    /**\n     * Serializes a property to its associated attribute.\n     *\n     * Note this method is provided as backward-compatible legacy API\n     * only.  It is not directly called by any Polymer features.\n     *\n     * @param {string} property Property name to reflect.\n     * @param {string=} attribute Attribute name to reflect.\n     * @param {*=} value Property value to reflect.\n     * @return {void}\n     * @override\n     */\n    reflectPropertyToAttribute(property, attribute, value) {\n      this._propertyToAttribute(property, attribute, value);\n    }\n\n    /**\n     * Sets a typed value to an HTML attribute on a node.\n     *\n     * Note this method is provided as backward-compatible legacy API\n     * only.  It is not directly called by any Polymer features.\n     *\n     * @param {*} value Value to serialize.\n     * @param {string} attribute Attribute name to serialize to.\n     * @param {Element} node Element to set attribute to.\n     * @return {void}\n     * @override\n     */\n    serializeValueToAttribute(value, attribute, node) {\n      this._valueToNodeAttribute(/** @type {Element} */ (node || this), value, attribute);\n    }\n\n    /**\n     * Copies own properties (including accessor descriptors) from a source\n     * object to a target object.\n     *\n     * @param {Object} prototype Target object to copy properties to.\n     * @param {Object} api Source object to copy properties from.\n     * @return {Object} prototype object that was passed as first argument.\n     * @override\n     */\n    extend(prototype, api) {\n      if (!(prototype && api)) {\n        return prototype || api;\n      }\n      let n$ = Object.getOwnPropertyNames(api);\n      for (let i=0, n; (i<n$.length) && (n=n$[i]); i++) {\n        let pd = Object.getOwnPropertyDescriptor(api, n);\n        if (pd) {\n          Object.defineProperty(prototype, n, pd);\n        }\n      }\n      return prototype;\n    }\n\n    /**\n     * Copies props from a source object to a target object.\n     *\n     * Note, this method uses a simple `for...in` strategy for enumerating\n     * properties.  To ensure only `ownProperties` are copied from source\n     * to target and that accessor implementations are copied, use `extend`.\n     *\n     * @param {!Object} target Target object to copy properties to.\n     * @param {!Object} source Source object to copy properties from.\n     * @return {!Object} Target object that was passed as first argument.\n     * @override\n     */\n    mixin(target, source) {\n      for (let i in source) {\n        target[i] = source[i];\n      }\n      return target;\n    }\n\n    /**\n     * Sets the prototype of an object.\n     *\n     * Note this method is provided as backward-compatible legacy API\n     * only.  It is not directly called by any Polymer features.\n     * @param {Object} object The object on which to set the prototype.\n     * @param {Object} prototype The prototype that will be set on the given\n     * `object`.\n     * @return {Object} Returns the given `object` with its prototype set\n     * to the given `prototype` object.\n     * @override\n     */\n    chainObject(object, prototype) {\n      if (object && prototype && object !== prototype) {\n        object.__proto__ = prototype;\n      }\n      return object;\n    }\n\n    /* **** Begin Template **** */\n\n    /**\n     * Calls `importNode` on the `content` of the `template` specified and\n     * returns a document fragment containing the imported content.\n     *\n     * @param {HTMLTemplateElement} template HTML template element to instance.\n     * @return {!DocumentFragment} Document fragment containing the imported\n     *   template content.\n     * @override\n     * @suppress {missingProperties} go/missingfnprops\n     */\n    instanceTemplate(template) {\n      let content = this.constructor._contentForTemplate(template);\n      let dom = /** @type {!DocumentFragment} */\n        (document.importNode(content, true));\n      return dom;\n    }\n\n    /* **** Begin Events **** */\n\n\n\n    /**\n     * Dispatches a custom event with an optional detail value.\n     *\n     * @param {string} type Name of event type.\n     * @param {*=} detail Detail value containing event-specific\n     *   payload.\n     * @param {{ bubbles: (boolean|undefined), cancelable: (boolean|undefined),\n     *     composed: (boolean|undefined) }=}\n     *  options Object specifying options.  These may include:\n     *  `bubbles` (boolean, defaults to `true`),\n     *  `cancelable` (boolean, defaults to false), and\n     *  `node` on which to fire the event (HTMLElement, defaults to `this`).\n     * @return {!Event} The new event that was fired.\n     * @override\n     */\n    fire(type, detail, options) {\n      options = options || {};\n      detail = (detail === null || detail === undefined) ? {} : detail;\n      let event = new Event(type, {\n        bubbles: options.bubbles === undefined ? true : options.bubbles,\n        cancelable: Boolean(options.cancelable),\n        composed: options.composed === undefined ? true: options.composed\n      });\n      event.detail = detail;\n      let node = options.node || this;\n      wrap(node).dispatchEvent(event);\n      return event;\n    }\n\n    /**\n     * Convenience method to add an event listener on a given element,\n     * late bound to a named method on this element.\n     *\n     * @param {?EventTarget} node Element to add event listener to.\n     * @param {string} eventName Name of event to listen for.\n     * @param {string} methodName Name of handler method on `this` to call.\n     * @return {void}\n     * @override\n     */\n    listen(node, eventName, methodName) {\n      node = /** @type {!EventTarget} */ (node || this);\n      let hbl = this.__boundListeners ||\n        (this.__boundListeners = new WeakMap());\n      let bl = hbl.get(node);\n      if (!bl) {\n        bl = {};\n        hbl.set(node, bl);\n      }\n      let key = eventName + methodName;\n      if (!bl[key]) {\n        bl[key] = this._addMethodEventListenerToNode(\n            /** @type {!Node} */ (node), eventName, methodName, this);\n      }\n    }\n\n    /**\n     * Convenience method to remove an event listener from a given element,\n     * late bound to a named method on this element.\n     *\n     * @param {?EventTarget} node Element to remove event listener from.\n     * @param {string} eventName Name of event to stop listening to.\n     * @param {string} methodName Name of handler method on `this` to not call\n     anymore.\n     * @return {void}\n     * @override\n     */\n    unlisten(node, eventName, methodName) {\n      node = /** @type {!EventTarget} */ (node || this);\n      let bl = this.__boundListeners &&\n          this.__boundListeners.get(/** @type {!Element} */ (node));\n      let key = eventName + methodName;\n      let handler = bl && bl[key];\n      if (handler) {\n        this._removeEventListenerFromNode(\n            /** @type {!Node} */ (node), eventName, handler);\n        bl[key] = /** @type {?} */ (null);\n      }\n    }\n\n    /**\n     * Override scrolling behavior to all direction, one direction, or none.\n     *\n     * Valid scroll directions:\n     *   - 'all': scroll in any direction\n     *   - 'x': scroll only in the 'x' direction\n     *   - 'y': scroll only in the 'y' direction\n     *   - 'none': disable scrolling for this node\n     *\n     * @param {string=} direction Direction to allow scrolling\n     * Defaults to `all`.\n     * @param {Element=} node Element to apply scroll direction setting.\n     * Defaults to `this`.\n     * @return {void}\n     * @override\n     */\n    setScrollDirection(direction, node) {\n      setTouchAction(\n          /** @type {!Element} */ (node || this),\n          DIRECTION_MAP[direction] || 'auto');\n    }\n    /* **** End Events **** */\n\n    /**\n     * Convenience method to run `querySelector` on this local DOM scope.\n     *\n     * This function calls `Polymer.dom(this.root).querySelector(slctr)`.\n     *\n     * @param {string} slctr Selector to run on this local DOM scope\n     * @return {Element} Element found by the selector, or null if not found.\n     * @override\n     */\n    $$(slctr) {\n      // Note, no need to `wrap` this because root is always patched\n      return this.root.querySelector(slctr);\n    }\n\n    /**\n     * Return the element whose local dom within which this element\n     * is contained. This is a shorthand for\n     * `this.getRootNode().host`.\n     * @this {Element}\n     * @return {?Node} The element whose local dom within which this element is\n     * contained.\n     * @override\n     */\n    get domHost() {\n      let root = wrap(this).getRootNode();\n      return (root instanceof DocumentFragment) ? /** @type {ShadowRoot} */ (root).host : root;\n    }\n\n    /**\n     * Force this element to distribute its children to its local dom.\n     * This should not be necessary as of Polymer 2.0.2 and is provided only\n     * for backwards compatibility.\n     * @return {void}\n     * @override\n     */\n    distributeContent() {\n      const thisEl = /** @type {Element} */ (this);\n      const domApi = /** @type {PolymerDomApi} */(dom(thisEl));\n      if (window.ShadyDOM && domApi.shadowRoot) {\n        ShadyDOM.flush();\n      }\n    }\n\n    /**\n     * Returns a list of nodes that are the effective childNodes. The effective\n     * childNodes list is the same as the element's childNodes except that\n     * any `<content>` elements are replaced with the list of nodes distributed\n     * to the `<content>`, the result of its `getDistributedNodes` method.\n     * @return {!Array<!Node>} List of effective child nodes.\n     * @suppress {invalidCasts} LegacyElementMixin must be applied to an\n     *     HTMLElement\n     * @override\n     */\n    getEffectiveChildNodes() {\n      const thisEl = /** @type {Element} */ (this);\n      const domApi = /** @type {PolymerDomApi} */ (dom(thisEl));\n      return domApi.getEffectiveChildNodes();\n    }\n\n    /**\n     * Returns a list of nodes distributed within this element that match\n     * `selector`. These can be dom children or elements distributed to\n     * children that are insertion points.\n     * @param {string} selector Selector to run.\n     * @return {!Array<!Node>} List of distributed elements that match selector.\n     * @suppress {invalidCasts} LegacyElementMixin must be applied to an\n     * HTMLElement\n     * @override\n     */\n    queryDistributedElements(selector) {\n      const thisEl = /** @type {Element} */ (this);\n      const domApi = /** @type {PolymerDomApi} */ (dom(thisEl));\n      return domApi.queryDistributedElements(selector);\n    }\n\n    /**\n     * Returns a list of elements that are the effective children. The effective\n     * children list is the same as the element's children except that\n     * any `<content>` elements are replaced with the list of elements\n     * distributed to the `<content>`.\n     *\n     * @return {!Array<!Node>} List of effective children.\n     * @override\n     */\n    getEffectiveChildren() {\n      let list = this.getEffectiveChildNodes();\n      return list.filter(function(/** @type {!Node} */ n) {\n        return (n.nodeType === Node.ELEMENT_NODE);\n      });\n    }\n\n    /**\n     * Returns a string of text content that is the concatenation of the\n     * text content's of the element's effective childNodes (the elements\n     * returned by <a href=\"#getEffectiveChildNodes>getEffectiveChildNodes</a>.\n     *\n     * @return {string} List of effective children.\n     * @override\n     */\n    getEffectiveTextContent() {\n      let cn = this.getEffectiveChildNodes();\n      let tc = [];\n      for (let i=0, c; (c = cn[i]); i++) {\n        if (c.nodeType !== Node.COMMENT_NODE) {\n          tc.push(c.textContent);\n        }\n      }\n      return tc.join('');\n    }\n\n    /**\n     * Returns the first effective childNode within this element that\n     * match `selector`. These can be dom child nodes or elements distributed\n     * to children that are insertion points.\n     * @param {string} selector Selector to run.\n     * @return {Node} First effective child node that matches selector.\n     * @override\n     */\n    queryEffectiveChildren(selector) {\n      let e$ = this.queryDistributedElements(selector);\n      return e$ && e$[0];\n    }\n\n    /**\n     * Returns a list of effective childNodes within this element that\n     * match `selector`. These can be dom child nodes or elements distributed\n     * to children that are insertion points.\n     * @param {string} selector Selector to run.\n     * @return {!Array<!Node>} List of effective child nodes that match\n     *     selector.\n     * @override\n     */\n    queryAllEffectiveChildren(selector) {\n      return this.queryDistributedElements(selector);\n    }\n\n    /**\n     * Returns a list of nodes distributed to this element's `<slot>`.\n     *\n     * If this element contains more than one `<slot>` in its local DOM,\n     * an optional selector may be passed to choose the desired content.\n     *\n     * @param {string=} slctr CSS selector to choose the desired\n     *   `<slot>`.  Defaults to `content`.\n     * @return {!Array<!Node>} List of distributed nodes for the `<slot>`.\n     * @override\n     */\n    getContentChildNodes(slctr) {\n      // Note, no need to `wrap` this because root is always\n      let content = this.root.querySelector(slctr || 'slot');\n      return content ?\n          /** @type {PolymerDomApi} */ (dom(content)).getDistributedNodes() :\n          [];\n    }\n\n    /**\n     * Returns a list of element children distributed to this element's\n     * `<slot>`.\n     *\n     * If this element contains more than one `<slot>` in its\n     * local DOM, an optional selector may be passed to choose the desired\n     * content.  This method differs from `getContentChildNodes` in that only\n     * elements are returned.\n     *\n     * @param {string=} slctr CSS selector to choose the desired\n     *   `<content>`.  Defaults to `content`.\n     * @return {!Array<!HTMLElement>} List of distributed nodes for the\n     *   `<slot>`.\n     * @suppress {invalidCasts}\n     * @override\n     */\n    getContentChildren(slctr) {\n      let children = /** @type {!Array<!HTMLElement>} */(this.getContentChildNodes(slctr).filter(function(n) {\n        return (n.nodeType === Node.ELEMENT_NODE);\n      }));\n      return children;\n    }\n\n    /**\n     * Checks whether an element is in this element's light DOM tree.\n     *\n     * @param {?Node} node The element to be checked.\n     * @return {boolean} true if node is in this element's light DOM tree.\n     * @suppress {invalidCasts} LegacyElementMixin must be applied to an\n     * HTMLElement\n     * @override\n     */\n    isLightDescendant(node) {\n      const thisNode = /** @type {Node} */ (this);\n      return thisNode !== node && wrap(thisNode).contains(node) &&\n        wrap(thisNode).getRootNode() === wrap(node).getRootNode();\n    }\n\n    /**\n     * Checks whether an element is in this element's local DOM tree.\n     *\n     * @param {!Element} node The element to be checked.\n     * @return {boolean} true if node is in this element's local DOM tree.\n     * @override\n     */\n    isLocalDescendant(node) {\n      return this.root === wrap(node).getRootNode();\n    }\n\n    /**\n     * No-op for backwards compatibility. This should now be handled by\n     * ShadyCss library.\n     * @param  {!Element} container Container element to scope\n     * @param  {boolean=} shouldObserve if true, start a mutation observer for added nodes to the container\n     * @return {?MutationObserver} Returns a new MutationObserver on `container` if `shouldObserve` is true.\n     * @override\n     */\n    scopeSubtree(container, shouldObserve = false) {\n      return scopeSubtree(container, shouldObserve);\n    }\n\n    /**\n     * Returns the computed style value for the given property.\n     * @param {string} property The css property name.\n     * @return {string} Returns the computed css property value for the given\n     * `property`.\n     * @suppress {invalidCasts} LegacyElementMixin must be applied to an\n     *     HTMLElement\n     * @override\n     */\n    getComputedStyleValue(property) {\n      return styleInterface.getComputedStyleValue(/** @type {!Element} */(this), property);\n    }\n\n    // debounce\n\n    /**\n     * Call `debounce` to collapse multiple requests for a named task into\n     * one invocation which is made after the wait time has elapsed with\n     * no new request.  If no wait time is given, the callback will be called\n     * at microtask timing (guaranteed before paint).\n     *\n     *     debouncedClickAction(e) {\n     *       // will not call `processClick` more than once per 100ms\n     *       this.debounce('click', function() {\n     *        this.processClick();\n     *       } 100);\n     *     }\n     *\n     * @param {string} jobName String to identify the debounce job.\n     * @param {function():void} callback Function that is called (with `this`\n     *   context) when the wait time elapses.\n     * @param {number=} wait Optional wait time in milliseconds (ms) after the\n     *   last signal that must elapse before invoking `callback`\n     * @return {!Object} Returns a debouncer object on which exists the\n     * following methods: `isActive()` returns true if the debouncer is\n     * active; `cancel()` cancels the debouncer if it is active;\n     * `flush()` immediately invokes the debounced callback if the debouncer\n     * is active.\n     * @override\n     */\n    debounce(jobName, callback, wait) {\n      this._debouncers = this._debouncers || {};\n      return this._debouncers[jobName] = Debouncer.debounce(\n            this._debouncers[jobName]\n          , wait > 0 ? timeOut.after(wait) : microTask\n          , callback.bind(this));\n    }\n\n    /**\n     * Returns whether a named debouncer is active.\n     *\n     * @param {string} jobName The name of the debouncer started with `debounce`\n     * @return {boolean} Whether the debouncer is active (has not yet fired).\n     * @override\n     */\n    isDebouncerActive(jobName) {\n      this._debouncers = this._debouncers || {};\n      let debouncer = this._debouncers[jobName];\n      return !!(debouncer && debouncer.isActive());\n    }\n\n    /**\n     * Immediately calls the debouncer `callback` and inactivates it.\n     *\n     * @param {string} jobName The name of the debouncer started with `debounce`\n     * @return {void}\n     * @override\n     */\n    flushDebouncer(jobName) {\n      this._debouncers = this._debouncers || {};\n      let debouncer = this._debouncers[jobName];\n      if (debouncer) {\n        debouncer.flush();\n      }\n    }\n\n    /**\n     * Cancels an active debouncer.  The `callback` will not be called.\n     *\n     * @param {string} jobName The name of the debouncer started with `debounce`\n     * @return {void}\n     * @override\n     */\n    cancelDebouncer(jobName) {\n      this._debouncers = this._debouncers || {};\n      let debouncer = this._debouncers[jobName];\n      if (debouncer) {\n        debouncer.cancel();\n      }\n    }\n\n    /**\n     * Runs a callback function asynchronously.\n     *\n     * By default (if no waitTime is specified), async callbacks are run at\n     * microtask timing, which will occur before paint.\n     *\n     * @param {!Function} callback The callback function to run, bound to\n     *     `this`.\n     * @param {number=} waitTime Time to wait before calling the\n     *   `callback`.  If unspecified or 0, the callback will be run at microtask\n     *   timing (before paint).\n     * @return {number} Handle that may be used to cancel the async job.\n     * @override\n     */\n    async(callback, waitTime) {\n      return waitTime > 0 ? timeOut.run(callback.bind(this), waitTime) :\n          ~microTask.run(callback.bind(this));\n    }\n\n    /**\n     * Cancels an async operation started with `async`.\n     *\n     * @param {number} handle Handle returned from original `async` call to\n     *   cancel.\n     * @return {void}\n     * @override\n     */\n    cancelAsync(handle) {\n      handle < 0 ? microTask.cancel(~handle) :\n          timeOut.cancel(handle);\n    }\n\n    // other\n\n    /**\n     * Convenience method for creating an element and configuring it.\n     *\n     * @param {string} tag HTML element tag to create.\n     * @param {Object=} props Object of properties to configure on the\n     *    instance.\n     * @return {!Element} Newly created and configured element.\n     * @override\n     */\n    create(tag, props) {\n      let elt = document.createElement(tag);\n      if (props) {\n        if (elt.setProperties) {\n          elt.setProperties(props);\n        } else {\n          for (let n in props) {\n            elt[n] = props[n];\n          }\n        }\n      }\n      return elt;\n    }\n\n    /**\n     * Polyfill for Element.prototype.matches, which is sometimes still\n     * prefixed.\n     *\n     * @param {string} selector Selector to test.\n     * @param {!Element=} node Element to test the selector against.\n     * @return {boolean} Whether the element matches the selector.\n     * @override\n     */\n    elementMatches(selector, node) {\n      return matchesSelector( (node || this), selector);\n    }\n\n    /**\n     * Toggles an HTML attribute on or off.\n     *\n     * @param {string} name HTML attribute name\n     * @param {boolean=} bool Boolean to force the attribute on or off.\n     *    When unspecified, the state of the attribute will be reversed.\n     * @return {boolean} true if the attribute now exists\n     * @override\n     */\n    toggleAttribute(name, bool) {\n      let node = /** @type {Element} */(this);\n      if (arguments.length === 3) {\n        node = /** @type {Element} */(arguments[2]);\n      }\n      if (arguments.length == 1) {\n        bool = !node.hasAttribute(name);\n      }\n      if (bool) {\n        wrap(node).setAttribute(name, '');\n        return true;\n      } else {\n        wrap(node).removeAttribute(name);\n        return false;\n      }\n    }\n\n\n    /**\n     * Toggles a CSS class on or off.\n     *\n     * @param {string} name CSS class name\n     * @param {boolean=} bool Boolean to force the class on or off.\n     *    When unspecified, the state of the class will be reversed.\n     * @param {Element=} node Node to target.  Defaults to `this`.\n     * @return {void}\n     * @override\n     */\n    toggleClass(name, bool, node) {\n      node = /** @type {Element} */ (node || this);\n      if (arguments.length == 1) {\n        bool = !node.classList.contains(name);\n      }\n      if (bool) {\n        node.classList.add(name);\n      } else {\n        node.classList.remove(name);\n      }\n    }\n\n    /**\n     * Cross-platform helper for setting an element's CSS `transform` property.\n     *\n     * @param {string} transformText Transform setting.\n     * @param {Element=} node Element to apply the transform to.\n     * Defaults to `this`\n     * @return {void}\n     * @override\n     */\n    transform(transformText, node) {\n      node = /** @type {Element} */ (node || this);\n      node.style.webkitTransform = transformText;\n      node.style.transform = transformText;\n    }\n\n    /**\n     * Cross-platform helper for setting an element's CSS `translate3d`\n     * property.\n     *\n     * @param {number|string} x X offset.\n     * @param {number|string} y Y offset.\n     * @param {number|string} z Z offset.\n     * @param {Element=} node Element to apply the transform to.\n     * Defaults to `this`.\n     * @return {void}\n     * @override\n     */\n    translate3d(x, y, z, node) {\n      node = /** @type {Element} */ (node || this);\n      this.transform('translate3d(' + x + ',' + y + ',' + z + ')', node);\n    }\n\n    /**\n     * Removes an item from an array, if it exists.\n     *\n     * If the array is specified by path, a change notification is\n     * generated, so that observers, data bindings and computed\n     * properties watching that path can update.\n     *\n     * If the array is passed directly, **no change\n     * notification is generated**.\n     *\n     * @param {string | !Array<number|string>} arrayOrPath Path to array from\n     *     which to remove the item\n     *   (or the array itself).\n     * @param {*} item Item to remove.\n     * @return {Array} Array containing item removed.\n     * @override\n     */\n    arrayDelete(arrayOrPath, item) {\n      let index;\n      if (Array.isArray(arrayOrPath)) {\n        index = arrayOrPath.indexOf(item);\n        if (index >= 0) {\n          return arrayOrPath.splice(index, 1);\n        }\n      } else {\n        let arr = get(this, arrayOrPath);\n        index = arr.indexOf(item);\n        if (index >= 0) {\n          return this.splice(arrayOrPath, index, 1);\n        }\n      }\n      return null;\n    }\n\n    // logging\n\n    /**\n     * Facades `console.log`/`warn`/`error` as override point.\n     *\n     * @param {string} level One of 'log', 'warn', 'error'\n     * @param {Array} args Array of strings or objects to log\n     * @return {void}\n     * @override\n     */\n    _logger(level, args) {\n      // accept ['foo', 'bar'] and [['foo', 'bar']]\n      if (Array.isArray(args) && args.length === 1 && Array.isArray(args[0])) {\n        args = args[0];\n      }\n      switch(level) {\n        case 'log':\n        case 'warn':\n        case 'error':\n          console[level](...args);\n      }\n    }\n\n    /**\n     * Facades `console.log` as an override point.\n     *\n     * @param {...*} args Array of strings or objects to log\n     * @return {void}\n     * @override\n     */\n    _log(...args) {\n      this._logger('log', args);\n    }\n\n    /**\n     * Facades `console.warn` as an override point.\n     *\n     * @param {...*} args Array of strings or objects to log\n     * @return {void}\n     * @override\n     */\n    _warn(...args) {\n      this._logger('warn', args);\n    }\n\n    /**\n     * Facades `console.error` as an override point.\n     *\n     * @param {...*} args Array of strings or objects to log\n     * @return {void}\n     * @override\n     */\n    _error(...args) {\n      this._logger('error', args);\n    }\n\n    /**\n     * Formats a message using the element type an a method name.\n     *\n     * @param {string} methodName Method name to associate with message\n     * @param {...*} args Array of strings or objects to log\n     * @return {!Array} Array with formatting information for `console`\n     *   logging.\n     * @override\n     */\n    _logf(methodName, ...args) {\n      return ['[%s::%s]', this.is, methodName, ...args];\n    }\n\n  }\n\n  LegacyElement.prototype.is = '';\n\n  return LegacyElement;\n});\n","/**\n@license\nCopyright (c) 2017 The Polymer Project Authors. All rights reserved.\nThis code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt\nThe complete set of authors may be found at http://polymer.github.io/AUTHORS.txt\nThe complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt\nCode distributed by Google as part of the polymer project is also\nsubject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt\n*/\n\nimport { LegacyElementMixin } from './legacy-element-mixin.js';\nimport { legacyOptimizations } from '../utils/settings.js';\n\nconst lifecycleProps = {\n  attached: true,\n  detached: true,\n  ready: true,\n  created: true,\n  beforeRegister: true,\n  registered: true,\n  attributeChanged: true,\n  listeners: true,\n  hostAttributes: true\n};\n\nconst excludeOnInfo = {\n  attached: true,\n  detached: true,\n  ready: true,\n  created: true,\n  beforeRegister: true,\n  registered: true,\n  attributeChanged: true,\n  behaviors: true,\n  _noAccessors: true\n};\n\nconst excludeOnBehaviors = Object.assign({\n  listeners: true,\n  hostAttributes: true,\n  properties: true,\n  observers: true,\n}, excludeOnInfo);\n\nfunction copyProperties(source, target, excludeProps) {\n  const noAccessors = source._noAccessors;\n  const propertyNames = Object.getOwnPropertyNames(source);\n  for (let i = 0; i < propertyNames.length; i++) {\n    let p = propertyNames[i];\n    if (p in excludeProps) {\n      continue;\n    }\n    if (noAccessors) {\n      target[p] = source[p];\n    } else {\n      let pd = Object.getOwnPropertyDescriptor(source, p);\n      if (pd) {\n        // ensure property is configurable so that a later behavior can\n        // re-configure it.\n        pd.configurable = true;\n        Object.defineProperty(target, p, pd);\n      }\n    }\n  }\n}\n\n/**\n * Applies a \"legacy\" behavior or array of behaviors to the provided class.\n *\n * Note: this method will automatically also apply the `LegacyElementMixin`\n * to ensure that any legacy behaviors can rely on legacy Polymer API on\n * the underlying element.\n *\n * @function\n * @template T\n * @param {!Object|!Array<!Object>} behaviors Behavior object or array of behaviors.\n * @param {function(new:T)} klass Element class.\n * @return {?} Returns a new Element class extended by the\n * passed in `behaviors` and also by `LegacyElementMixin`.\n * @suppress {invalidCasts, checkTypes}\n */\nexport function mixinBehaviors(behaviors, klass) {\n  return GenerateClassFromInfo({}, LegacyElementMixin(klass), behaviors);\n}\n\n// NOTE:\n// 1.x\n// Behaviors were mixed in *in reverse order* and de-duped on the fly.\n// The rule was that behavior properties were copied onto the element\n// prototype if and only if the property did not already exist.\n// Given: Polymer{ behaviors: [A, B, C, A, B]}, property copy order was:\n// (1), B, (2), A, (3) C. This means prototype properties win over\n// B properties win over A win over C. This mirrors what would happen\n// with inheritance if element extended B extended A extended C.\n//\n// Again given, Polymer{ behaviors: [A, B, C, A, B]}, the resulting\n// `behaviors` array was [C, A, B].\n// Behavior lifecycle methods were called in behavior array order\n// followed by the element, e.g. (1) C.created, (2) A.created,\n// (3) B.created, (4) element.created. There was no support for\n// super, and \"super-behavior\" methods were callable only by name).\n//\n// 2.x\n// Behaviors are made into proper mixins which live in the\n// element's prototype chain. Behaviors are placed in the element prototype\n// eldest to youngest and de-duped youngest to oldest:\n// So, first [A, B, C, A, B] becomes [C, A, B] then,\n// the element prototype becomes (oldest) (1) PolymerElement, (2) class(C),\n// (3) class(A), (4) class(B), (5) class(Polymer({...})).\n// Result:\n// This means element properties win over B properties win over A win\n// over C. (same as 1.x)\n// If lifecycle is called (super then me), order is\n// (1) C.created, (2) A.created, (3) B.created, (4) element.created\n// (again same as 1.x)\nfunction applyBehaviors(proto, behaviors, lifecycle) {\n  for (let i=0; i<behaviors.length; i++) {\n    applyInfo(proto, behaviors[i], lifecycle, excludeOnBehaviors);\n  }\n}\n\nfunction applyInfo(proto, info, lifecycle, excludeProps) {\n  copyProperties(info, proto, excludeProps);\n  for (let p in lifecycleProps) {\n    if (info[p]) {\n      lifecycle[p] = lifecycle[p] || [];\n      lifecycle[p].push(info[p]);\n    }\n  }\n}\n\n/**\n * @param {Array} behaviors List of behaviors to flatten.\n * @param {Array=} list Target list to flatten behaviors into.\n * @param {Array=} exclude List of behaviors to exclude from the list.\n * @return {!Array} Returns the list of flattened behaviors.\n */\nfunction flattenBehaviors(behaviors, list, exclude) {\n  list = list || [];\n  for (let i=behaviors.length-1; i >= 0; i--) {\n    let b = behaviors[i];\n    if (b) {\n      if (Array.isArray(b)) {\n        flattenBehaviors(b, list);\n      } else {\n        // dedup\n        if (list.indexOf(b) < 0 && (!exclude || exclude.indexOf(b) < 0)) {\n          list.unshift(b);\n        }\n      }\n    } else {\n      console.warn('behavior is null, check for missing or 404 import');\n    }\n  }\n  return list;\n}\n\n/**\n * Copies property descriptors from source to target, overwriting all fields\n * of any previous descriptor for a property *except* for `value`, which is\n * merged in from the target if it does not exist on the source.\n *\n * @param {*} target Target properties object\n * @param {*} source Source properties object\n */\nfunction mergeProperties(target, source) {\n  for (const p in source) {\n    const targetInfo = target[p];\n    const sourceInfo = source[p];\n    if (!('value' in sourceInfo) && targetInfo && ('value' in targetInfo)) {\n      target[p] = Object.assign({value: targetInfo.value}, sourceInfo);\n    } else {\n      target[p] = sourceInfo;\n    }\n  }\n}\n\nconst LegacyElement = LegacyElementMixin(HTMLElement);\n\n/* Note about construction and extension of legacy classes.\n  [Changed in Q4 2018 to optimize performance.]\n\n  When calling `Polymer` or `mixinBehaviors`, the generated class below is\n  made. The list of behaviors was previously made into one generated class per\n  behavior, but this is no longer the case as behaviors are now called\n  manually. Note, there may *still* be multiple generated classes in the\n  element's prototype chain if extension is used with `mixinBehaviors`.\n\n  The generated class is directly tied to the info object and behaviors\n  used to create it. That list of behaviors is filtered so it's only the\n  behaviors not active on the superclass. In order to call through to the\n  entire list of lifecycle methods, it's important to call `super`.\n\n  The element's `properties` and `observers` are controlled via the finalization\n  mechanism provided by `PropertiesMixin`. `Properties` and `observers` are\n  collected by manually traversing the prototype chain and merging.\n\n  To limit changes, the `_registered` method is called via `_initializeProperties`\n  and not `_finalizeClass`.\n\n*/\n/**\n * @param {!PolymerInit} info Polymer info object\n * @param {function(new:HTMLElement)} Base base class to extend with info object\n * @param {Object=} behaviors behaviors to copy into the element\n * @return {function(new:HTMLElement)} Generated class\n * @suppress {checkTypes}\n * @private\n */\nfunction GenerateClassFromInfo(info, Base, behaviors) {\n\n  // manages behavior and lifecycle processing (filled in after class definition)\n  let behaviorList;\n  const lifecycle = {};\n\n  /** @private */\n  class PolymerGenerated extends Base {\n\n    // explicitly not calling super._finalizeClass\n    /** @nocollapse */\n    static _finalizeClass() {\n      // if calling via a subclass that hasn't been generated, pass through to super\n      if (!this.hasOwnProperty(JSCompiler_renameProperty('generatedFrom', this))) {\n        // TODO(https://github.com/google/closure-compiler/issues/3240):\n        //     Change back to just super.methodCall()\n        Base._finalizeClass.call(this);\n      } else {\n        // interleave properties and observers per behavior and `info`\n        if (behaviorList) {\n          for (let i=0, b; i < behaviorList.length; i++) {\n            b = behaviorList[i];\n            if (b.properties) {\n              this.createProperties(b.properties);\n            }\n            if (b.observers) {\n              this.createObservers(b.observers, b.properties);\n            }\n          }\n        }\n        if (info.properties) {\n          this.createProperties(info.properties);\n        }\n        if (info.observers) {\n          this.createObservers(info.observers, info.properties);\n        }\n        // make sure to prepare the element template\n        this._prepareTemplate();\n      }\n    }\n\n    /** @nocollapse */\n    static get properties() {\n      const properties = {};\n      if (behaviorList) {\n        for (let i=0; i < behaviorList.length; i++) {\n          mergeProperties(properties, behaviorList[i].properties);\n        }\n      }\n      mergeProperties(properties, info.properties);\n      return properties;\n    }\n\n    /** @nocollapse */\n    static get observers() {\n      let observers = [];\n      if (behaviorList) {\n        for (let i=0, b; i < behaviorList.length; i++) {\n          b = behaviorList[i];\n          if (b.observers) {\n            observers = observers.concat(b.observers);\n          }\n        }\n      }\n      if (info.observers) {\n        observers = observers.concat(info.observers);\n      }\n      return observers;\n    }\n\n    /**\n     * @return {void}\n     */\n    created() {\n      super.created();\n      const list = lifecycle.created;\n      if (list) {\n        for (let i=0; i < list.length; i++) {\n          list[i].call(this);\n        }\n      }\n    }\n\n    /**\n     * @return {void}\n     */\n    _registered() {\n      /* NOTE: `beforeRegister` is called here for bc, but the behavior\n        is different than in 1.x. In 1.0, the method was called *after*\n        mixing prototypes together but *before* processing of meta-objects.\n        However, dynamic effects can still be set here and can be done either\n        in `beforeRegister` or `registered`. It is no longer possible to set\n        `is` in `beforeRegister` as you could in 1.x.\n      */\n      // only proceed if the generated class' prototype has not been registered.\n      const generatedProto = PolymerGenerated.prototype;\n      if (!generatedProto.hasOwnProperty(JSCompiler_renameProperty('__hasRegisterFinished', generatedProto))) {\n        generatedProto.__hasRegisterFinished = true;\n        // ensure superclass is registered first.\n        super._registered();\n        // copy properties onto the generated class lazily if we're optimizing,\n        if (legacyOptimizations) {\n          copyPropertiesToProto(generatedProto);\n        }\n        // make sure legacy lifecycle is called on the *element*'s prototype\n        // and not the generated class prototype; if the element has been\n        // extended, these are *not* the same.\n        const proto = Object.getPrototypeOf(this);\n        let list = lifecycle.beforeRegister;\n        if (list) {\n          for (let i=0; i < list.length; i++) {\n            list[i].call(proto);\n          }\n        }\n        list = lifecycle.registered;\n        if (list) {\n          for (let i=0; i < list.length; i++) {\n            list[i].call(proto);\n          }\n        }\n      }\n    }\n\n    /**\n     * @return {void}\n     */\n    _applyListeners() {\n      super._applyListeners();\n      const list = lifecycle.listeners;\n      if (list) {\n        for (let i=0; i < list.length; i++) {\n          const listeners = list[i];\n          if (listeners) {\n            for (let l in listeners) {\n              this._addMethodEventListenerToNode(this, l, listeners[l]);\n            }\n          }\n        }\n      }\n    }\n\n    // note: exception to \"super then me\" rule;\n    // do work before calling super so that super attributes\n    // only apply if not already set.\n    /**\n     * @return {void}\n     */\n    _ensureAttributes() {\n      const list = lifecycle.hostAttributes;\n      if (list) {\n        for (let i=list.length-1; i >= 0; i--) {\n          const hostAttributes = list[i];\n          for (let a in hostAttributes) {\n              this._ensureAttribute(a, hostAttributes[a]);\n            }\n        }\n      }\n      super._ensureAttributes();\n    }\n\n    /**\n     * @return {void}\n     */\n    ready() {\n      super.ready();\n      let list = lifecycle.ready;\n      if (list) {\n        for (let i=0; i < list.length; i++) {\n          list[i].call(this);\n        }\n      }\n    }\n\n    /**\n     * @return {void}\n     */\n    attached() {\n      super.attached();\n      let list = lifecycle.attached;\n      if (list) {\n        for (let i=0; i < list.length; i++) {\n          list[i].call(this);\n        }\n      }\n    }\n\n    /**\n     * @return {void}\n     */\n    detached() {\n      super.detached();\n      let list = lifecycle.detached;\n      if (list) {\n        for (let i=0; i < list.length; i++) {\n          list[i].call(this);\n        }\n      }\n    }\n\n    /**\n     * Implements native Custom Elements `attributeChangedCallback` to\n     * set an attribute value to a property via `_attributeToProperty`.\n     *\n     * @param {string} name Name of attribute that changed\n     * @param {?string} old Old attribute value\n     * @param {?string} value New attribute value\n     * @return {void}\n     */\n    attributeChanged(name, old, value) {\n      super.attributeChanged();\n      let list = lifecycle.attributeChanged;\n      if (list) {\n        for (let i=0; i < list.length; i++) {\n          list[i].call(this, name, old, value);\n        }\n      }\n    }\n  }\n\n  // apply behaviors, note actual copying is done lazily at first instance creation\n  if (behaviors) {\n    // NOTE: ensure the behavior is extending a class with\n    // legacy element api. This is necessary since behaviors expect to be able\n    // to access 1.x legacy api.\n    if (!Array.isArray(behaviors)) {\n      behaviors = [behaviors];\n    }\n    let superBehaviors = Base.prototype.behaviors;\n    // get flattened, deduped list of behaviors *not* already on super class\n    behaviorList = flattenBehaviors(behaviors, null, superBehaviors);\n    PolymerGenerated.prototype.behaviors = superBehaviors ?\n      superBehaviors.concat(behaviors) : behaviorList;\n  }\n\n  const copyPropertiesToProto = (proto) => {\n    if (behaviorList) {\n      applyBehaviors(proto, behaviorList, lifecycle);\n    }\n    applyInfo(proto, info, lifecycle, excludeOnInfo);\n  };\n\n  // copy properties if we're not optimizing\n  if (!legacyOptimizations) {\n    copyPropertiesToProto(PolymerGenerated.prototype);\n  }\n\n  PolymerGenerated.generatedFrom = info;\n\n  return PolymerGenerated;\n}\n\n/**\n * Generates a class that extends `LegacyElement` based on the\n * provided info object.  Metadata objects on the `info` object\n * (`properties`, `observers`, `listeners`, `behaviors`, `is`) are used\n * for Polymer's meta-programming systems, and any functions are copied\n * to the generated class.\n *\n * Valid \"metadata\" values are as follows:\n *\n * `is`: String providing the tag name to register the element under. In\n * addition, if a `dom-module` with the same id exists, the first template\n * in that `dom-module` will be stamped into the shadow root of this element,\n * with support for declarative event listeners (`on-...`), Polymer data\n * bindings (`[[...]]` and `{{...}}`), and id-based node finding into\n * `this.$`.\n *\n * `properties`: Object describing property-related metadata used by Polymer\n * features (key: property names, value: object containing property metadata).\n * Valid keys in per-property metadata include:\n * - `type` (String|Number|Object|Array|...): Used by\n *   `attributeChangedCallback` to determine how string-based attributes\n *   are deserialized to JavaScript property values.\n * - `notify` (boolean): Causes a change in the property to fire a\n *   non-bubbling event called `<property>-changed`. Elements that have\n *   enabled two-way binding to the property use this event to observe changes.\n * - `readOnly` (boolean): Creates a getter for the property, but no setter.\n *   To set a read-only property, use the private setter method\n *   `_setProperty(property, value)`.\n * - `observer` (string): Observer method name that will be called when\n *   the property changes. The arguments of the method are\n *   `(value, previousValue)`.\n * - `computed` (string): String describing method and dependent properties\n *   for computing the value of this property (e.g. `'computeFoo(bar, zot)'`).\n *   Computed properties are read-only by default and can only be changed\n *   via the return value of the computing method.\n *\n * `observers`: Array of strings describing multi-property observer methods\n *  and their dependent properties (e.g. `'observeABC(a, b, c)'`).\n *\n * `listeners`: Object describing event listeners to be added to each\n *  instance of this element (key: event name, value: method name).\n *\n * `behaviors`: Array of additional `info` objects containing metadata\n * and callbacks in the same format as the `info` object here which are\n * merged into this element.\n *\n * `hostAttributes`: Object listing attributes to be applied to the host\n *  once created (key: attribute name, value: attribute value).  Values\n *  are serialized based on the type of the value.  Host attributes should\n *  generally be limited to attributes such as `tabIndex` and `aria-...`.\n *  Attributes in `hostAttributes` are only applied if a user-supplied\n *  attribute is not already present (attributes in markup override\n *  `hostAttributes`).\n *\n * In addition, the following Polymer-specific callbacks may be provided:\n * - `registered`: called after first instance of this element,\n * - `created`: called during `constructor`\n * - `attached`: called during `connectedCallback`\n * - `detached`: called during `disconnectedCallback`\n * - `ready`: called before first `attached`, after all properties of\n *   this element have been propagated to its template and all observers\n *   have run\n *\n * @param {!PolymerInit} info Object containing Polymer metadata and functions\n *   to become class methods.\n * @template T\n * @param {function(T):T} mixin Optional mixin to apply to legacy base class\n *   before extending with Polymer metaprogramming.\n * @return {function(new:HTMLElement)} Generated class\n */\nexport const Class = function(info, mixin) {\n  if (!info) {\n    console.warn('Polymer.Class requires `info` argument');\n  }\n  let klass = mixin ? mixin(LegacyElement) :\n      LegacyElement;\n  klass = GenerateClassFromInfo(info, klass, info.behaviors);\n  // decorate klass with registration info\n  klass.is = klass.prototype.is = info.is;\n  return klass;\n};\n","/**\n@license\nCopyright (c) 2017 The Polymer Project Authors. All rights reserved.\nThis code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt\nThe complete set of authors may be found at http://polymer.github.io/AUTHORS.txt\nThe complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt\nCode distributed by Google as part of the polymer project is also\nsubject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt\n*/\nimport { Class } from './class.js';\n\nimport '../utils/boot.js';\n\n/**\n * Legacy class factory and registration helper for defining Polymer\n * elements.\n *\n * This method is equivalent to\n *\n *     import {Class} from '@polymer/polymer/lib/legacy/class.js';\n *     customElements.define(info.is, Class(info));\n *\n * See `Class` for details on valid legacy metadata format for `info`.\n *\n * @global\n * @override\n * @function\n * @param {!PolymerInit} info Object containing Polymer metadata and functions\n *   to become class methods.\n * @return {function(new: HTMLElement)} Generated class\n * @suppress {duplicate, invalidCasts, checkTypes}\n */\nconst Polymer = function(info) {\n  // if input is a `class` (aka a function with a prototype), use the prototype\n  // remember that the `constructor` will never be called\n  let klass;\n  if (typeof info === 'function') {\n    klass = info;\n  } else {\n    klass = Polymer.Class(info);\n  }\n  // Copy opt out for `legacyNoObservedAttributes` from info object to class.\n  if (info._legacyForceObservedAttributes) {\n    klass.prototype._legacyForceObservedAttributes = info._legacyForceObservedAttributes;\n  }\n  customElements.define(klass.is, /** @type {!HTMLElement} */(klass));\n  return klass;\n};\n\nPolymer.Class = Class;\n\nexport { Polymer };","/**\n@license\nCopyright (c) 2017 The Polymer Project Authors. All rights reserved.\nThis code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt\nThe complete set of authors may be found at http://polymer.github.io/AUTHORS.txt\nThe complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt\nCode distributed by Google as part of the polymer project is also\nsubject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt\n*/\nimport { dedupingMixin } from '../utils/mixin.js';\n\n// Common implementation for mixin & behavior\nfunction mutablePropertyChange(inst, property, value, old, mutableData) {\n  let isObject;\n  if (mutableData) {\n    isObject = (typeof value === 'object' && value !== null);\n    // Pull `old` for Objects from temp cache, but treat `null` as a primitive\n    if (isObject) {\n      old = inst.__dataTemp[property];\n    }\n  }\n  // Strict equality check, but return false for NaN===NaN\n  let shouldChange = (old !== value && (old === old || value === value));\n  // Objects are stored in temporary cache (cleared at end of\n  // turn), which is used for dirty-checking\n  if (isObject && shouldChange) {\n    inst.__dataTemp[property] = value;\n  }\n  return shouldChange;\n}\n\n/**\n * Element class mixin to skip strict dirty-checking for objects and arrays\n * (always consider them to be \"dirty\"), for use on elements utilizing\n * `PropertyEffects`\n *\n * By default, `PropertyEffects` performs strict dirty checking on\n * objects, which means that any deep modifications to an object or array will\n * not be propagated unless \"immutable\" data patterns are used (i.e. all object\n * references from the root to the mutation were changed).\n *\n * Polymer also provides a proprietary data mutation and path notification API\n * (e.g. `notifyPath`, `set`, and array mutation API's) that allow efficient\n * mutation and notification of deep changes in an object graph to all elements\n * bound to the same object graph.\n *\n * In cases where neither immutable patterns nor the data mutation API can be\n * used, applying this mixin will cause Polymer to skip dirty checking for\n * objects and arrays (always consider them to be \"dirty\").  This allows a\n * user to make a deep modification to a bound object graph, and then either\n * simply re-set the object (e.g. `this.items = this.items`) or call `notifyPath`\n * (e.g. `this.notifyPath('items')`) to update the tree.  Note that all\n * elements that wish to be updated based on deep mutations must apply this\n * mixin or otherwise skip strict dirty checking for objects/arrays.\n * Specifically, any elements in the binding tree between the source of a\n * mutation and the consumption of it must apply this mixin or enable the\n * `OptionalMutableData` mixin.\n *\n * In order to make the dirty check strategy configurable, see\n * `OptionalMutableData`.\n *\n * Note, the performance characteristics of propagating large object graphs\n * will be worse as opposed to using strict dirty checking with immutable\n * patterns or Polymer's path notification API.\n *\n * @mixinFunction\n * @polymer\n * @summary Element class mixin to skip strict dirty-checking for objects\n *   and arrays\n * @template T\n * @param {function(new:T)} superClass Class to apply mixin to.\n * @return {function(new:T)} superClass with mixin applied.\n */\nexport const MutableData = dedupingMixin(superClass => {\n\n  /**\n   * @polymer\n   * @mixinClass\n   * @implements {Polymer_MutableData}\n   */\n  class MutableData extends superClass {\n    /**\n     * Overrides `PropertyEffects` to provide option for skipping\n     * strict equality checking for Objects and Arrays.\n     *\n     * This method pulls the value to dirty check against from the `__dataTemp`\n     * cache (rather than the normal `__data` cache) for Objects.  Since the temp\n     * cache is cleared at the end of a turn, this implementation allows\n     * side-effects of deep object changes to be processed by re-setting the\n     * same object (using the temp cache as an in-turn backstop to prevent\n     * cycles due to 2-way notification).\n     *\n     * @param {string} property Property name\n     * @param {*} value New property value\n     * @param {*} old Previous property value\n     * @return {boolean} Whether the property should be considered a change\n     * @protected\n     */\n    _shouldPropertyChange(property, value, old) {\n      return mutablePropertyChange(this, property, value, old, true);\n    }\n\n  }\n\n  return MutableData;\n\n});\n\n/**\n * Element class mixin to add the optional ability to skip strict\n * dirty-checking for objects and arrays (always consider them to be\n * \"dirty\") by setting a `mutable-data` attribute on an element instance.\n *\n * By default, `PropertyEffects` performs strict dirty checking on\n * objects, which means that any deep modifications to an object or array will\n * not be propagated unless \"immutable\" data patterns are used (i.e. all object\n * references from the root to the mutation were changed).\n *\n * Polymer also provides a proprietary data mutation and path notification API\n * (e.g. `notifyPath`, `set`, and array mutation API's) that allow efficient\n * mutation and notification of deep changes in an object graph to all elements\n * bound to the same object graph.\n *\n * In cases where neither immutable patterns nor the data mutation API can be\n * used, applying this mixin will allow Polymer to skip dirty checking for\n * objects and arrays (always consider them to be \"dirty\").  This allows a\n * user to make a deep modification to a bound object graph, and then either\n * simply re-set the object (e.g. `this.items = this.items`) or call `notifyPath`\n * (e.g. `this.notifyPath('items')`) to update the tree.  Note that all\n * elements that wish to be updated based on deep mutations must apply this\n * mixin or otherwise skip strict dirty checking for objects/arrays.\n * Specifically, any elements in the binding tree between the source of a\n * mutation and the consumption of it must enable this mixin or apply the\n * `MutableData` mixin.\n *\n * While this mixin adds the ability to forgo Object/Array dirty checking,\n * the `mutableData` flag defaults to false and must be set on the instance.\n *\n * Note, the performance characteristics of propagating large object graphs\n * will be worse by relying on `mutableData: true` as opposed to using\n * strict dirty checking with immutable patterns or Polymer's path notification\n * API.\n *\n * @mixinFunction\n * @polymer\n * @summary Element class mixin to optionally skip strict dirty-checking\n *   for objects and arrays\n */\nexport const OptionalMutableData = dedupingMixin(superClass => {\n\n  /**\n   * @mixinClass\n   * @polymer\n   * @implements {Polymer_OptionalMutableData}\n   */\n  class OptionalMutableData extends superClass {\n\n    /** @nocollapse */\n    static get properties() {\n      return {\n        /**\n         * Instance-level flag for configuring the dirty-checking strategy\n         * for this element.  When true, Objects and Arrays will skip dirty\n         * checking, otherwise strict equality checking will be used.\n         */\n        mutableData: Boolean\n      };\n    }\n\n    /**\n     * Overrides `PropertyEffects` to provide option for skipping\n     * strict equality checking for Objects and Arrays.\n     *\n     * When `this.mutableData` is true on this instance, this method\n     * pulls the value to dirty check against from the `__dataTemp` cache\n     * (rather than the normal `__data` cache) for Objects.  Since the temp\n     * cache is cleared at the end of a turn, this implementation allows\n     * side-effects of deep object changes to be processed by re-setting the\n     * same object (using the temp cache as an in-turn backstop to prevent\n     * cycles due to 2-way notification).\n     *\n     * @param {string} property Property name\n     * @param {*} value New property value\n     * @param {*} old Previous property value\n     * @return {boolean} Whether the property should be considered a change\n     * @protected\n     */\n    _shouldPropertyChange(property, value, old) {\n      return mutablePropertyChange(this, property, value, old, this.mutableData);\n    }\n  }\n\n  return OptionalMutableData;\n\n});\n\n// Export for use by legacy behavior\nMutableData._mutablePropertyChange = mutablePropertyChange;\n","/**\n@license\nCopyright (c) 2017 The Polymer Project Authors. All rights reserved.\nThis code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt\nThe complete set of authors may be found at http://polymer.github.io/AUTHORS.txt\nThe complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt\nCode distributed by Google as part of the polymer project is also\nsubject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt\n*/\n\n/**\n * Module for preparing and stamping instances of templates that utilize\n * Polymer's data-binding and declarative event listener features.\n *\n * Example:\n *\n *     // Get a template from somewhere, e.g. light DOM\n *     let template = this.querySelector('template');\n *     // Prepare the template\n *     let TemplateClass = Templatize.templatize(template);\n *     // Instance the template with an initial data model\n *     let instance = new TemplateClass({myProp: 'initial'});\n *     // Insert the instance's DOM somewhere, e.g. element's shadow DOM\n *     this.shadowRoot.appendChild(instance.root);\n *     // Changing a property on the instance will propagate to bindings\n *     // in the template\n *     instance.myProp = 'new value';\n *\n * The `options` dictionary passed to `templatize` allows for customizing\n * features of the generated template class, including how outer-scope host\n * properties should be forwarded into template instances, how any instance\n * properties added into the template's scope should be notified out to\n * the host, and whether the instance should be decorated as a \"parent model\"\n * of any event handlers.\n *\n *     // Customize property forwarding and event model decoration\n *     let TemplateClass = Templatize.templatize(template, this, {\n *       parentModel: true,\n *       forwardHostProp(property, value) {...},\n *       instanceProps: {...},\n *       notifyInstanceProp(instance, property, value) {...},\n *     });\n *\n * @summary Module for preparing and stamping instances of templates\n *   utilizing Polymer templating features.\n */\n\nimport './boot.js';\n\nimport { PropertyEffects } from '../mixins/property-effects.js';\nimport { MutableData } from '../mixins/mutable-data.js';\nimport { strictTemplatePolicy, legacyWarnings } from './settings.js';\nimport { wrap } from './wrap.js';\n\n// Base class for HTMLTemplateElement extension that has property effects\n// machinery for propagating host properties to children. This is an ES5\n// class only because Babel (incorrectly) requires super() in the class\n// constructor even though no `this` is used and it returns an instance.\nlet newInstance = null;\n\n/**\n * @constructor\n * @extends {HTMLTemplateElement}\n * @private\n */\nfunction HTMLTemplateElementExtension() { return newInstance; }\nHTMLTemplateElementExtension.prototype = Object.create(HTMLTemplateElement.prototype, {\n  constructor: {\n    value: HTMLTemplateElementExtension,\n    writable: true\n  }\n});\n\n/**\n * @constructor\n * @implements {Polymer_PropertyEffects}\n * @extends {HTMLTemplateElementExtension}\n * @private\n */\nconst DataTemplate = PropertyEffects(HTMLTemplateElementExtension);\n\n/**\n * @constructor\n * @implements {Polymer_MutableData}\n * @extends {DataTemplate}\n * @private\n */\nconst MutableDataTemplate = MutableData(DataTemplate);\n\n// Applies a DataTemplate subclass to a <template> instance\nfunction upgradeTemplate(template, constructor) {\n  newInstance = template;\n  Object.setPrototypeOf(template, constructor.prototype);\n  new constructor();\n  newInstance = null;\n}\n\n/**\n * Base class for TemplateInstance.\n * @constructor\n * @extends {HTMLElement}\n * @implements {Polymer_PropertyEffects}\n * @private\n */\nconst templateInstanceBase = PropertyEffects(class {});\n\nexport function showHideChildren(hide, children) {\n  for (let i=0; i<children.length; i++) {\n    let n = children[i];\n    // Ignore non-changes\n    if (Boolean(hide) != Boolean(n.__hideTemplateChildren__)) {\n      // clear and restore text\n      if (n.nodeType === Node.TEXT_NODE) {\n        if (hide) {\n          n.__polymerTextContent__ = n.textContent;\n          n.textContent = '';\n        } else {\n          n.textContent = n.__polymerTextContent__;\n        }\n      // remove and replace slot\n      } else if (n.localName === 'slot') {\n        if (hide) {\n          n.__polymerReplaced__ = document.createComment('hidden-slot');\n          wrap(wrap(n).parentNode).replaceChild(n.__polymerReplaced__, n);\n        } else {\n          const replace = n.__polymerReplaced__;\n          if (replace) {\n            wrap(wrap(replace).parentNode).replaceChild(n, replace);\n          }\n        }\n      }\n      // hide and show nodes\n      else if (n.style) {\n        if (hide) {\n          n.__polymerDisplay__ = n.style.display;\n          n.style.display = 'none';\n        } else {\n          n.style.display = n.__polymerDisplay__;\n        }\n      }\n    }\n    n.__hideTemplateChildren__ = hide;\n    if (n._showHideChildren) {\n      n._showHideChildren(hide);\n    }\n  }\n}\n\n/**\n * @polymer\n * @customElement\n * @appliesMixin PropertyEffects\n * @unrestricted\n */\nclass TemplateInstanceBase extends templateInstanceBase {\n  constructor(props) {\n    super();\n    this._configureProperties(props);\n    /** @type {!StampedTemplate} */\n    this.root = this._stampTemplate(this.__dataHost);\n    // Save list of stamped children\n    let children = [];\n    /** @suppress {invalidCasts} */\n    this.children = /** @type {!NodeList} */ (children);\n    // Polymer 1.x did not use `Polymer.dom` here so not bothering.\n    for (let n = this.root.firstChild; n; n=n.nextSibling) {\n      children.push(n);\n      n.__templatizeInstance = this;\n    }\n    if (this.__templatizeOwner &&\n      this.__templatizeOwner.__hideTemplateChildren__) {\n      this._showHideChildren(true);\n    }\n    // Flush props only when props are passed if instance props exist\n    // or when there isn't instance props.\n    let options = this.__templatizeOptions;\n    if ((props && options.instanceProps) || !options.instanceProps) {\n      this._enableProperties();\n    }\n  }\n  /**\n   * Configure the given `props` by calling `_setPendingProperty`. Also\n   * sets any properties stored in `__hostProps`.\n   * @private\n   * @param {Object} props Object of property name-value pairs to set.\n   * @return {void}\n   */\n  _configureProperties(props) {\n    let options = this.__templatizeOptions;\n    if (options.forwardHostProp) {\n      for (let hprop in this.__hostProps) {\n        this._setPendingProperty(hprop, this.__dataHost['_host_' + hprop]);\n      }\n    }\n    // Any instance props passed in the constructor will overwrite host props;\n    // normally this would be a user error but we don't specifically filter them\n    for (let iprop in props) {\n      this._setPendingProperty(iprop, props[iprop]);\n    }\n  }\n  /**\n   * Forwards a host property to this instance.  This method should be\n   * called on instances from the `options.forwardHostProp` callback\n   * to propagate changes of host properties to each instance.\n   *\n   * Note this method enqueues the change, which are flushed as a batch.\n   *\n   * @param {string} prop Property or path name\n   * @param {*} value Value of the property to forward\n   * @return {void}\n   */\n  forwardHostProp(prop, value) {\n    if (this._setPendingPropertyOrPath(prop, value, false, true)) {\n      this.__dataHost._enqueueClient(this);\n    }\n  }\n\n  /**\n   * Override point for adding custom or simulated event handling.\n   *\n   * @override\n   * @param {!Node} node Node to add event listener to\n   * @param {string} eventName Name of event\n   * @param {function(!Event):void} handler Listener function to add\n   * @return {void}\n   */\n  _addEventListenerToNode(node, eventName, handler) {\n    if (this._methodHost && this.__templatizeOptions.parentModel) {\n      // If this instance should be considered a parent model, decorate\n      // events this template instance as `model`\n      this._methodHost._addEventListenerToNode(node, eventName, (e) => {\n        e.model = this;\n        handler(e);\n      });\n    } else {\n      // Otherwise delegate to the template's host (which could be)\n      // another template instance\n      let templateHost = this.__dataHost.__dataHost;\n      if (templateHost) {\n        templateHost._addEventListenerToNode(node, eventName, handler);\n      }\n    }\n  }\n  /**\n   * Shows or hides the template instance top level child elements. For\n   * text nodes, `textContent` is removed while \"hidden\" and replaced when\n   * \"shown.\"\n   * @param {boolean} hide Set to true to hide the children;\n   * set to false to show them.\n   * @return {void}\n   * @protected\n   */\n  _showHideChildren(hide) {\n    showHideChildren(hide, this.children);\n  }\n  /**\n   * Overrides default property-effects implementation to intercept\n   * textContent bindings while children are \"hidden\" and cache in\n   * private storage for later retrieval.\n   *\n   * @override\n   * @param {!Node} node The node to set a property on\n   * @param {string} prop The property to set\n   * @param {*} value The value to set\n   * @return {void}\n   * @protected\n   */\n  _setUnmanagedPropertyToNode(node, prop, value) {\n    if (node.__hideTemplateChildren__ &&\n        node.nodeType == Node.TEXT_NODE && prop == 'textContent') {\n      node.__polymerTextContent__ = value;\n    } else {\n      super._setUnmanagedPropertyToNode(node, prop, value);\n    }\n  }\n  /**\n   * Find the parent model of this template instance.  The parent model\n   * is either another templatize instance that had option `parentModel: true`,\n   * or else the host element.\n   *\n   * @return {!Polymer_PropertyEffects} The parent model of this instance\n   */\n  get parentModel() {\n    let model = this.__parentModel;\n    if (!model) {\n      let options;\n      model = this;\n      do {\n        // A template instance's `__dataHost` is a <template>\n        // `model.__dataHost.__dataHost` is the template's host\n        model = model.__dataHost.__dataHost;\n      } while ((options = model.__templatizeOptions) && !options.parentModel);\n      this.__parentModel = model;\n    }\n    return model;\n  }\n\n  /**\n   * Stub of HTMLElement's `dispatchEvent`, so that effects that may\n   * dispatch events safely no-op.\n   *\n   * @param {Event} event Event to dispatch\n   * @return {boolean} Always true.\n   * @override\n   */\n   dispatchEvent(event) { // eslint-disable-line no-unused-vars\n     return true;\n  }\n}\n\n/** @type {!DataTemplate} */\nTemplateInstanceBase.prototype.__dataHost;\n/** @type {!TemplatizeOptions} */\nTemplateInstanceBase.prototype.__templatizeOptions;\n/** @type {!Polymer_PropertyEffects} */\nTemplateInstanceBase.prototype._methodHost;\n/** @type {!Object} */\nTemplateInstanceBase.prototype.__templatizeOwner;\n/** @type {!Object} */\nTemplateInstanceBase.prototype.__hostProps;\n\n/**\n * @constructor\n * @extends {TemplateInstanceBase}\n * @implements {Polymer_MutableData}\n * @private\n */\nconst MutableTemplateInstanceBase = MutableData(\n    // This cast shouldn't be neccessary, but Closure doesn't understand that\n    // TemplateInstanceBase is a constructor function.\n    /** @type {function(new:TemplateInstanceBase)} */ (TemplateInstanceBase));\n\nfunction findMethodHost(template) {\n  // Technically this should be the owner of the outermost template.\n  // In shadow dom, this is always getRootNode().host, but we can\n  // approximate this via cooperation with our dataHost always setting\n  // `_methodHost` as long as there were bindings (or id's) on this\n  // instance causing it to get a dataHost.\n  let templateHost = template.__dataHost;\n  return templateHost && templateHost._methodHost || templateHost;\n}\n\n/* eslint-disable valid-jsdoc */\n/**\n * @suppress {missingProperties} class.prototype is not defined for some reason\n */\nfunction createTemplatizerClass(template, templateInfo, options) {\n  /**\n   * @constructor\n   * @extends {TemplateInstanceBase}\n   */\n  let templatizerBase = options.mutableData ?\n    MutableTemplateInstanceBase : TemplateInstanceBase;\n\n  // Affordance for global mixins onto TemplatizeInstance\n  if (templatize.mixin) {\n    templatizerBase = templatize.mixin(templatizerBase);\n  }\n\n  /**\n   * Anonymous class created by the templatize\n   * @constructor\n   * @private\n   */\n  let klass = class extends templatizerBase { };\n  /** @override */\n  klass.prototype.__templatizeOptions = options;\n  klass.prototype._bindTemplate(template);\n  addNotifyEffects(klass, template, templateInfo, options);\n  return klass;\n}\n\n/**\n * Adds propagate effects from the template to the template instance for\n * properties that the host binds to the template using the `_host_` prefix.\n *\n * @suppress {missingProperties} class.prototype is not defined for some reason\n */\nfunction addPropagateEffects(target, templateInfo, options, methodHost) {\n  let userForwardHostProp = options.forwardHostProp;\n  if (userForwardHostProp && templateInfo.hasHostProps) {\n    // Under the `removeNestedTemplates` optimization, a custom element like\n    // `dom-if` or `dom-repeat` can itself be treated as the \"template\"; this\n    // flag is used to switch between upgrading a `<template>` to be a property\n    // effects client vs. adding the effects directly to the custom element\n    const isTemplate = target.localName == 'template';\n    // Provide data API and property effects on memoized template class\n    let klass = templateInfo.templatizeTemplateClass;\n    if (!klass) {\n      if (isTemplate) {\n        /**\n         * @constructor\n         * @extends {DataTemplate}\n         */\n        let templatizedBase =\n            options.mutableData ? MutableDataTemplate : DataTemplate;\n\n        // NOTE: due to https://github.com/google/closure-compiler/issues/2928,\n        // combining the next two lines into one assignment causes a spurious\n        // type error.\n        /** @private */\n        class TemplatizedTemplate extends templatizedBase {}\n        klass = templateInfo.templatizeTemplateClass = TemplatizedTemplate;\n      } else {\n        /**\n         * @constructor\n         * @extends {PolymerElement}\n         */\n        const templatizedBase = target.constructor;\n\n        // Create a cached subclass of the base custom element class onto which\n        // to put the template-specific propagate effects\n        // NOTE: due to https://github.com/google/closure-compiler/issues/2928,\n        // combining the next two lines into one assignment causes a spurious\n        // type error.\n        /** @private */\n        class TemplatizedTemplateExtension extends templatizedBase {}\n        klass = templateInfo.templatizeTemplateClass =\n            TemplatizedTemplateExtension;\n      }\n      // Add template - >instances effects\n      // and host <- template effects\n      let hostProps = templateInfo.hostProps;\n      for (let prop in hostProps) {\n        klass.prototype._addPropertyEffect('_host_' + prop,\n          klass.prototype.PROPERTY_EFFECT_TYPES.PROPAGATE,\n          {fn: createForwardHostPropEffect(prop, userForwardHostProp)});\n        klass.prototype._createNotifyingProperty('_host_' + prop);\n      }\n      if (legacyWarnings && methodHost) {\n        warnOnUndeclaredProperties(templateInfo, options, methodHost);\n      }\n    }\n    // Mix any pre-bound data into __data; no need to flush this to\n    // instances since they pull from the template at instance-time\n    if (target.__dataProto) {\n      // Note, generally `__dataProto` could be chained, but it's guaranteed\n      // to not be since this is a vanilla template we just added effects to\n      Object.assign(target.__data, target.__dataProto);\n    }\n    if (isTemplate) {\n      upgradeTemplate(target, klass);\n      // Clear any pending data for performance\n      target.__dataTemp = {};\n      target.__dataPending = null;\n      target.__dataOld = null;\n      target._enableProperties();\n    } else {\n      // Swizzle the cached subclass prototype onto the custom element\n      Object.setPrototypeOf(target, klass.prototype);\n      // Check for any pre-bound instance host properties, and do the\n      // instance property delete/assign dance for those (directly into data;\n      // not need to go through accessor since they are pulled at instance time)\n      const hostProps = templateInfo.hostProps;\n      for (let prop in hostProps) {\n        prop = '_host_' + prop;\n        if (prop in target) {\n          const val = target[prop];\n          delete target[prop];\n          target.__data[prop] = val;\n        }\n      }\n    }\n  }\n}\n/* eslint-enable valid-jsdoc */\n\nfunction createForwardHostPropEffect(hostProp, userForwardHostProp) {\n  return function forwardHostProp(template, prop, props) {\n    userForwardHostProp.call(template.__templatizeOwner,\n      prop.substring('_host_'.length), props[prop]);\n  };\n}\n\nfunction addNotifyEffects(klass, template, templateInfo, options) {\n  let hostProps = templateInfo.hostProps || {};\n  for (let iprop in options.instanceProps) {\n    delete hostProps[iprop];\n    let userNotifyInstanceProp = options.notifyInstanceProp;\n    if (userNotifyInstanceProp) {\n      klass.prototype._addPropertyEffect(iprop,\n        klass.prototype.PROPERTY_EFFECT_TYPES.NOTIFY,\n        {fn: createNotifyInstancePropEffect(iprop, userNotifyInstanceProp)});\n    }\n  }\n  if (options.forwardHostProp && template.__dataHost) {\n    for (let hprop in hostProps) {\n      // As we're iterating hostProps in this function, note whether\n      // there were any, for an optimization in addPropagateEffects\n      if (!templateInfo.hasHostProps) {\n        templateInfo.hasHostProps = true;\n      }\n      klass.prototype._addPropertyEffect(hprop,\n        klass.prototype.PROPERTY_EFFECT_TYPES.NOTIFY,\n        {fn: createNotifyHostPropEffect()});\n    }\n  }\n}\n\nfunction createNotifyInstancePropEffect(instProp, userNotifyInstanceProp) {\n  return function notifyInstanceProp(inst, prop, props) {\n    userNotifyInstanceProp.call(inst.__templatizeOwner,\n      inst, prop, props[prop]);\n  };\n}\n\nfunction createNotifyHostPropEffect() {\n  return function notifyHostProp(inst, prop, props) {\n    inst.__dataHost._setPendingPropertyOrPath('_host_' + prop, props[prop], true, true);\n  };\n}\n\n\n/**\n * Returns an anonymous `PropertyEffects` class bound to the\n * `<template>` provided.  Instancing the class will result in the\n * template being stamped into a document fragment stored as the instance's\n * `root` property, after which it can be appended to the DOM.\n *\n * Templates may utilize all Polymer data-binding features as well as\n * declarative event listeners.  Event listeners and inline computing\n * functions in the template will be called on the host of the template.\n *\n * The constructor returned takes a single argument dictionary of initial\n * property values to propagate into template bindings.  Additionally\n * host properties can be forwarded in, and instance properties can be\n * notified out by providing optional callbacks in the `options` dictionary.\n *\n * Valid configuration in `options` are as follows:\n *\n * - `forwardHostProp(property, value)`: Called when a property referenced\n *   in the template changed on the template's host. As this library does\n *   not retain references to templates instanced by the user, it is the\n *   templatize owner's responsibility to forward host property changes into\n *   user-stamped instances.  The `instance.forwardHostProp(property, value)`\n *    method on the generated class should be called to forward host\n *   properties into the template to prevent unnecessary property-changed\n *   notifications. Any properties referenced in the template that are not\n *   defined in `instanceProps` will be notified up to the template's host\n *   automatically.\n * - `instanceProps`: Dictionary of property names that will be added\n *   to the instance by the templatize owner.  These properties shadow any\n *   host properties, and changes within the template to these properties\n *   will result in `notifyInstanceProp` being called.\n * - `mutableData`: When `true`, the generated class will skip strict\n *   dirty-checking for objects and arrays (always consider them to be\n *   \"dirty\").\n * - `notifyInstanceProp(instance, property, value)`: Called when\n *   an instance property changes.  Users may choose to call `notifyPath`\n *   on e.g. the owner to notify the change.\n * - `parentModel`: When `true`, events handled by declarative event listeners\n *   (`on-event=\"handler\"`) will be decorated with a `model` property pointing\n *   to the template instance that stamped it.  It will also be returned\n *   from `instance.parentModel` in cases where template instance nesting\n *   causes an inner model to shadow an outer model.\n *\n * All callbacks are called bound to the `owner`. Any context\n * needed for the callbacks (such as references to `instances` stamped)\n * should be stored on the `owner` such that they can be retrieved via\n * `this`.\n *\n * When `options.forwardHostProp` is declared as an option, any properties\n * referenced in the template will be automatically forwarded from the host of\n * the `<template>` to instances, with the exception of any properties listed in\n * the `options.instanceProps` object.  `instanceProps` are assumed to be\n * managed by the owner of the instances, either passed into the constructor\n * or set after the fact.  Note, any properties passed into the constructor will\n * always be set to the instance (regardless of whether they would normally\n * be forwarded from the host).\n *\n * Note that `templatize()` can be run only once for a given `<template>`.\n * Further calls will result in an error. Also, there is a special\n * behavior if the template was duplicated through a mechanism such as\n * `<dom-repeat>` or `<test-fixture>`. In this case, all calls to\n * `templatize()` return the same class for all duplicates of a template.\n * The class returned from `templatize()` is generated only once using\n * the `options` from the first call. This means that any `options`\n * provided to subsequent calls will be ignored. Therefore, it is very\n * important not to close over any variables inside the callbacks. Also,\n * arrow functions must be avoided because they bind the outer `this`.\n * Inside the callbacks, any contextual information can be accessed\n * through `this`, which points to the `owner`.\n *\n * @param {!HTMLTemplateElement} template Template to templatize\n * @param {Polymer_PropertyEffects=} owner Owner of the template instances;\n *   any optional callbacks will be bound to this owner.\n * @param {Object=} options Options dictionary (see summary for details)\n * @return {function(new:TemplateInstanceBase, Object=)} Generated class bound\n *   to the template provided\n * @suppress {invalidCasts}\n */\nexport function templatize(template, owner, options) {\n  // Under strictTemplatePolicy, the templatized element must be owned\n  // by a (trusted) Polymer element, indicated by existence of _methodHost;\n  // e.g. for dom-if & dom-repeat in main document, _methodHost is null\n  if (strictTemplatePolicy && !findMethodHost(template)) {\n    throw new Error('strictTemplatePolicy: template owner not trusted');\n  }\n  options = /** @type {!TemplatizeOptions} */(options || {});\n  if (template.__templatizeOwner) {\n    throw new Error('A <template> can only be templatized once');\n  }\n  template.__templatizeOwner = owner;\n  const ctor = owner ? owner.constructor : TemplateInstanceBase;\n  let templateInfo = ctor._parseTemplate(template);\n  // Get memoized base class for the prototypical template, which\n  // includes property effects for binding template & forwarding\n  /**\n   * @constructor\n   * @extends {TemplateInstanceBase}\n   */\n  let baseClass = templateInfo.templatizeInstanceClass;\n  if (!baseClass) {\n    baseClass = createTemplatizerClass(template, templateInfo, options);\n    templateInfo.templatizeInstanceClass = baseClass;\n  }\n  const methodHost = findMethodHost(template);\n  // Host property forwarding must be installed onto template instance\n  addPropagateEffects(template, templateInfo, options, methodHost);\n  // Subclass base class and add reference for this specific template\n  /** @private */\n  let klass = class TemplateInstance extends baseClass {};\n  /** @override */\n  klass.prototype._methodHost = methodHost;\n  /** @override */\n  klass.prototype.__dataHost = /** @type {!DataTemplate} */ (template);\n  /** @override */\n  klass.prototype.__templatizeOwner = /** @type {!Object} */ (owner);\n  /** @override */\n  klass.prototype.__hostProps = templateInfo.hostProps;\n  klass = /** @type {function(new:TemplateInstanceBase)} */(klass); //eslint-disable-line no-self-assign\n  return klass;\n}\n\nfunction warnOnUndeclaredProperties(templateInfo, options, methodHost) {\n  const declaredProps = methodHost.constructor._properties;\n  const {propertyEffects} = templateInfo;\n  const {instanceProps} = options;\n  for (let prop in propertyEffects) {\n    // Ensure properties with template effects are declared on the outermost\n    // host (`methodHost`), unless they are instance props or static functions\n    if (!declaredProps[prop] && !(instanceProps && instanceProps[prop])) {\n      const effects = propertyEffects[prop];\n      for (let i=0; i<effects.length; i++) {\n        const {part} = effects[i].info;\n        if (!(part.signature && part.signature.static)) {\n          console.warn(`Property '${prop}' used in template but not ` +\n            `declared in 'properties'; attribute will not be observed.`);\n          break;\n        }\n      }\n    }\n  }\n}\n\n/**\n * Returns the template \"model\" associated with a given element, which\n * serves as the binding scope for the template instance the element is\n * contained in. A template model is an instance of\n * `TemplateInstanceBase`, and should be used to manipulate data\n * associated with this template instance.\n *\n * Example:\n *\n *   let model = modelForElement(el);\n *   if (model.index < 10) {\n *     model.set('item.checked', true);\n *   }\n *\n * @param {HTMLElement} template The model will be returned for\n *   elements stamped from this template (accepts either an HTMLTemplateElement)\n *   or a `<dom-if>`/`<dom-repeat>` element when using `removeNestedTemplates`\n *   optimization.\n * @param {Node=} node Node for which to return a template model.\n * @return {TemplateInstanceBase} Template instance representing the\n *   binding scope for the element\n */\nexport function modelForElement(template, node) {\n  let model;\n  while (node) {\n    // An element with a __templatizeInstance marks the top boundary\n    // of a scope; walk up until we find one, and then ensure that\n    // its __dataHost matches `this`, meaning this dom-repeat stamped it\n    if ((model = node.__dataHost ? node : node.__templatizeInstance)) {\n      // Found an element stamped by another template; keep walking up\n      // from its __dataHost\n      if (model.__dataHost != template) {\n        node = model.__dataHost;\n      } else {\n        return model;\n      }\n    } else {\n      // Still in a template scope, keep going up until\n      // a __templatizeInstance is found\n      node = wrap(node).parentNode;\n    }\n  }\n  return null;\n}\n\nexport { TemplateInstanceBase };\n","/**\n@license\nCopyright (c) 2017 The Polymer Project Authors. All rights reserved.\nThis code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt\nThe complete set of authors may be found at http://polymer.github.io/AUTHORS.txt\nThe complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt\nCode distributed by Google as part of the polymer project is also\nsubject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt\n*/\n\n/**\n * @fileoverview\n *\n * Module to hide `<dom-bind>`, `<dom-if>`, and `<dom-repeat>` elements\n * optimally in ShadyDOM\n */\n\nimport {legacyOptimizations, useShadow} from './settings.js';\n\nlet elementsHidden = false;\n\n/**\n * @return {boolean} True if elements will be hidden globally\n */\nexport function hideElementsGlobally() {\n  if (legacyOptimizations && !useShadow) {\n    if (!elementsHidden) {\n      elementsHidden = true;\n      const style = document.createElement('style');\n      style.textContent = 'dom-bind,dom-if,dom-repeat{display:none;}';\n      document.head.appendChild(style);\n    }\n    return true;\n  }\n  return false;\n}","/**\n@license\nCopyright (c) 2017 The Polymer Project Authors. All rights reserved.\nThis code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt\nThe complete set of authors may be found at http://polymer.github.io/AUTHORS.txt\nThe complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt\nCode distributed by Google as part of the polymer project is also\nsubject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt\n*/\nimport '../utils/boot.js';\n\nimport { PropertyEffects } from '../mixins/property-effects.js';\nimport { OptionalMutableData } from '../mixins/mutable-data.js';\nimport { GestureEventListeners } from '../mixins/gesture-event-listeners.js';\nimport { strictTemplatePolicy } from '../utils/settings.js';\nimport { wrap } from '../utils/wrap.js';\nimport { hideElementsGlobally } from '../utils/hide-template-controls.js';\n\n/**\n * @constructor\n * @extends {HTMLElement}\n * @implements {Polymer_PropertyEffects}\n * @implements {Polymer_OptionalMutableData}\n * @implements {Polymer_GestureEventListeners}\n * @private\n */\nconst domBindBase =\n  GestureEventListeners(\n    OptionalMutableData(\n      PropertyEffects(HTMLElement)));\n\n/**\n * Custom element to allow using Polymer's template features (data binding,\n * declarative event listeners, etc.) in the main document without defining\n * a new custom element.\n *\n * `<template>` tags utilizing bindings may be wrapped with the `<dom-bind>`\n * element, which will immediately stamp the wrapped template into the main\n * document and bind elements to the `dom-bind` element itself as the\n * binding scope.\n *\n * @polymer\n * @customElement\n * @appliesMixin PropertyEffects\n * @appliesMixin OptionalMutableData\n * @appliesMixin GestureEventListeners\n * @extends {domBindBase}\n * @summary Custom element to allow using Polymer's template features (data\n *   binding, declarative event listeners, etc.) in the main document.\n */\nexport class DomBind extends domBindBase {\n\n  static get observedAttributes() { return ['mutable-data']; }\n\n  constructor() {\n    super();\n    if (strictTemplatePolicy) {\n      throw new Error(`strictTemplatePolicy: dom-bind not allowed`);\n    }\n    this.root = null;\n    this.$ = null;\n    this.__children = null;\n  }\n\n  /* eslint-disable no-unused-vars */\n  /**\n   * @override\n   * @param {string} name Name of attribute that changed\n   * @param {?string} old Old attribute value\n   * @param {?string} value New attribute value\n   * @param {?string} namespace Attribute namespace.\n   * @return {void}\n   */\n  attributeChangedCallback(name, old, value, namespace) {\n    // assumes only one observed attribute\n    this.mutableData = true;\n  }\n\n  /**\n   * @override\n   * @return {void}\n   */\n  connectedCallback() {\n    if (!hideElementsGlobally()) {\n      this.style.display = 'none';\n    }\n    this.render();\n  }\n\n  /**\n   * @override\n   * @return {void}\n   */\n  disconnectedCallback() {\n    this.__removeChildren();\n  }\n\n  __insertChildren() {\n    wrap(wrap(this).parentNode).insertBefore(this.root, this);\n  }\n\n  __removeChildren() {\n    if (this.__children) {\n      for (let i=0; i<this.__children.length; i++) {\n        this.root.appendChild(this.__children[i]);\n      }\n    }\n  }\n\n  /**\n   * Forces the element to render its content. This is typically only\n   * necessary to call if HTMLImports with the async attribute are used.\n   * @return {void}\n   */\n  render() {\n    let template;\n    if (!this.__children) {\n      template = /** @type {?HTMLTemplateElement} */(template || this.querySelector('template'));\n      if (!template) {\n        // Wait until childList changes and template should be there by then\n        let observer = new MutationObserver(() => {\n          template = /** @type {HTMLTemplateElement} */(this.querySelector('template'));\n          if (template) {\n            observer.disconnect();\n            this.render();\n          } else {\n            throw new Error('dom-bind requires a <template> child');\n          }\n        });\n        observer.observe(this, {childList: true});\n        return;\n      }\n      this.root = this._stampTemplate(\n        /** @type {!HTMLTemplateElement} */(template));\n      this.$ = this.root.$;\n      this.__children = [];\n      for (let n=this.root.firstChild; n; n=n.nextSibling) {\n        this.__children[this.__children.length] = n;\n      }\n      this._enableProperties();\n    }\n    this.__insertChildren();\n    this.dispatchEvent(new CustomEvent('dom-change', {\n      bubbles: true,\n      composed: true\n    }));\n  }\n\n}\n\ncustomElements.define('dom-bind', DomBind);\n","/**\n@license\nCopyright (c) 2017 The Polymer Project Authors. All rights reserved.\nThis code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt\nThe complete set of authors may be found at http://polymer.github.io/AUTHORS.txt\nThe complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt\nCode distributed by Google as part of the polymer project is also\nsubject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt\n*/\nimport './boot.js';\n\n/**\n * Our TrustedTypePolicy for HTML which is declared using the Polymer html\n * template tag function.\n *\n * That HTML is a developer-authored constant, and is parsed with innerHTML\n * before any untrusted expressions have been mixed in. Therefor it is\n * considered safe by construction.\n *\n * @type {!TrustedTypePolicy|undefined}\n */\nconst policy = window.trustedTypes &&\n    trustedTypes.createPolicy('polymer-html-literal', {createHTML: (s) => s});\n\n/**\n * Class representing a static string value which can be used to filter\n * strings by asseting that they have been created via this class. The\n * `value` property returns the string passed to the constructor.\n */\nclass LiteralString {\n  /**\n   * @param {!ITemplateArray} strings Constant parts of tagged template literal\n   * @param {!Array<*>} values Variable parts of tagged template literal\n   */\n  constructor(strings, values) {\n    assertValidTemplateStringParameters(strings, values);\n    const string = values.reduce(\n        (acc, v, idx) => acc + literalValue(v) + strings[idx + 1], strings[0]);\n    /** @type {string} */\n    this.value = string.toString();\n  }\n  /**\n   * @return {string} LiteralString string value\n   * @override\n   */\n  toString() {\n    return this.value;\n  }\n}\n\n/**\n * @param {*} value Object to stringify into HTML\n * @return {string} HTML stringified form of `obj`\n */\nfunction literalValue(value) {\n  if (value instanceof LiteralString) {\n    return /** @type {!LiteralString} */(value).value;\n  } else {\n    throw new Error(\n        `non-literal value passed to Polymer's htmlLiteral function: ${value}`\n    );\n  }\n}\n\n/**\n * @param {*} value Object to stringify into HTML\n * @return {string} HTML stringified form of `obj`\n */\nfunction htmlValue(value) {\n  if (value instanceof HTMLTemplateElement) {\n    // This might be an mXSS risk – mainly in the case where this template\n    // contains untrusted content that was believed to be sanitized.\n    // However we can't just use the XMLSerializer here because it misencodes\n    // `>` characters inside style tags.\n    // For an example of an actual case that hit this encoding issue,\n    // see b/198592167\n    return /** @type {!HTMLTemplateElement } */(value).innerHTML;\n  } else if (value instanceof LiteralString) {\n    return literalValue(value);\n  } else {\n    throw new Error(\n        `non-template value passed to Polymer's html function: ${value}`);\n  }\n}\n\n/**\n * A template literal tag that creates an HTML <template> element from the\n * contents of the string.\n *\n * This allows you to write a Polymer Template in JavaScript.\n *\n * Templates can be composed by interpolating `HTMLTemplateElement`s in\n * expressions in the JavaScript template literal. The nested template's\n * `innerHTML` is included in the containing template.  The only other\n * values allowed in expressions are those returned from `htmlLiteral`\n * which ensures only literal values from JS source ever reach the HTML, to\n * guard against XSS risks.\n *\n * All other values are disallowed in expressions to help prevent XSS\n * attacks; however, `htmlLiteral` can be used to compose static\n * string values into templates. This is useful to compose strings into\n * places that do not accept html, like the css text of a `style`\n * element.\n *\n * Example:\n *\n *     static get template() {\n *       return html`\n *         <style>:host{ content:\"...\" }</style>\n *         <div class=\"shadowed\">${this.partialTemplate}</div>\n *         ${super.template}\n *       `;\n *     }\n *     static get partialTemplate() { return html`<span>Partial!</span>`; }\n *\n * @param {!ITemplateArray} strings Constant parts of tagged template literal\n * @param {...*} values Variable parts of tagged template literal\n * @return {!HTMLTemplateElement} Constructed HTMLTemplateElement\n */\nexport const html = function html(strings, ...values) {\n  assertValidTemplateStringParameters(strings, values);\n  const template =\n      /** @type {!HTMLTemplateElement} */ (document.createElement('template'));\n  let value = values.reduce(\n      (acc, v, idx) => acc + htmlValue(v) + strings[idx + 1], strings[0]);\n  if (policy) {\n    value = policy.createHTML(value);\n  }\n  template.innerHTML = value;\n  return template;\n};\n\n/**\n * @param {!ITemplateArray} strings Constant parts of tagged template literal\n * @param {!Array<*>} values Array of values from quasis\n */\nconst assertValidTemplateStringParameters = (strings, values) => {\n  // Note: if/when https://github.com/tc39/proposal-array-is-template-object\n  // is standardized, use that instead when available, as it can perform an\n  // unforgable check (though of course, the function itself can be forged).\n  if (!Array.isArray(strings) || !Array.isArray(strings.raw) ||\n      (values.length !== strings.length - 1)) {\n    // This is either caused by a browser bug, a compiler bug, or someone\n    // calling the html template tag function as a regular function.\n    //\n    throw new TypeError('Invalid call to the html template tag');\n  }\n};\n\n/**\n * An html literal tag that can be used with `html` to compose.\n * a literal string.\n *\n * Example:\n *\n *     static get template() {\n *       return html`\n *         <style>\n *           :host { display: block; }\n *           ${this.styleTemplate()}\n *         </style>\n *         <div class=\"shadowed\">${staticValue}</div>\n *         ${super.template}\n *       `;\n *     }\n *     static get styleTemplate() {\n *        return htmlLiteral`.shadowed { background: gray; }`;\n *     }\n *\n * @param {!ITemplateArray} strings Constant parts of tagged template literal\n * @param {...*} values Variable parts of tagged template literal\n * @return {!LiteralString} Constructed literal string\n */\nexport const htmlLiteral = function(strings, ...values) {\n  return new LiteralString(strings, values);\n};\n","/**\n@license\nCopyright (c) 2017 The Polymer Project Authors. All rights reserved.\nThis code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt\nThe complete set of authors may be found at http://polymer.github.io/AUTHORS.txt\nThe complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt\nCode distributed by Google as part of the polymer project is also\nsubject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt\n*/\n\nimport { ElementMixin, version } from './lib/mixins/element-mixin.js';\nexport { html } from './lib/utils/html-tag.js';\n\nexport { version };\n\n/**\n * Base class that provides the core API for Polymer's meta-programming\n * features including template stamping, data-binding, attribute deserialization,\n * and property change observation.\n *\n * @customElement\n * @polymer\n * @constructor\n * @implements {Polymer_ElementMixin}\n * @extends HTMLElement\n * @appliesMixin ElementMixin\n * @summary Custom element base class that provides the core API for Polymer's\n *   key meta-programming features including template stamping, data-binding,\n *   attribute deserialization, and property change observation\n */\nexport const PolymerElement = ElementMixin(HTMLElement);\n","/**\n@license\nCopyright (c) 2017 The Polymer Project Authors. All rights reserved.\nThis code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt\nThe complete set of authors may be found at http://polymer.github.io/AUTHORS.txt\nThe complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt\nCode distributed by Google as part of the polymer project is also\nsubject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt\n*/\nimport { PolymerElement } from '../../polymer-element.js';\n\nimport { TemplateInstanceBase, templatize, modelForElement } from '../utils/templatize.js'; // eslint-disable-line no-unused-vars\nimport { Debouncer } from '../utils/debounce.js';\nimport { enqueueDebouncer, flush } from '../utils/flush.js';\nimport { OptionalMutableData } from '../mixins/mutable-data.js';\nimport { matches, translate } from '../utils/path.js';\nimport { timeOut, microTask } from '../utils/async.js';\nimport { wrap } from '../utils/wrap.js';\nimport { hideElementsGlobally } from '../utils/hide-template-controls.js';\nimport { suppressTemplateNotifications } from '../utils/settings.js';\n\n/**\n * @constructor\n * @implements {Polymer_OptionalMutableData}\n * @extends {PolymerElement}\n * @private\n */\nconst domRepeatBase = OptionalMutableData(PolymerElement);\n\n/**\n * The `<dom-repeat>` element will automatically stamp and binds one instance\n * of template content to each object in a user-provided array.\n * `dom-repeat` accepts an `items` property, and one instance of the template\n * is stamped for each item into the DOM at the location of the `dom-repeat`\n * element.  The `item` property will be set on each instance's binding\n * scope, thus templates should bind to sub-properties of `item`.\n *\n * Example:\n *\n * ```html\n * <dom-module id=\"employee-list\">\n *\n *   <template>\n *\n *     <div> Employee list: </div>\n *     <dom-repeat items=\"{{employees}}\">\n *       <template>\n *         <div>First name: <span>{{item.first}}</span></div>\n *         <div>Last name: <span>{{item.last}}</span></div>\n *       </template>\n *     </dom-repeat>\n *\n *   </template>\n *\n * </dom-module>\n * ```\n *\n * With the following custom element definition:\n *\n * ```js\n * class EmployeeList extends PolymerElement {\n *   static get is() { return 'employee-list'; }\n *   static get properties() {\n *     return {\n *       employees: {\n *         value() {\n *           return [\n *             {first: 'Bob', last: 'Smith'},\n *             {first: 'Sally', last: 'Johnson'},\n *             ...\n *           ];\n *         }\n *       }\n *     };\n *   }\n * }\n * ```\n *\n * Notifications for changes to items sub-properties will be forwarded to template\n * instances, which will update via the normal structured data notification system.\n *\n * Mutations to the `items` array itself should be made using the Array\n * mutation API's on the PropertyEffects mixin (`push`, `pop`, `splice`,\n * `shift`, `unshift`), and template instances will be kept in sync with the\n * data in the array.\n *\n * Events caught by event handlers within the `dom-repeat` template will be\n * decorated with a `model` property, which represents the binding scope for\n * each template instance.  The model should be used to manipulate data on the\n * instance, for example `event.model.set('item.checked', true);`.\n *\n * Alternatively, the model for a template instance for an element stamped by\n * a `dom-repeat` can be obtained using the `modelForElement` API on the\n * `dom-repeat` that stamped it, for example\n * `this.$.domRepeat.modelForElement(event.target).set('item.checked', true);`.\n * This may be useful for manipulating instance data of event targets obtained\n * by event handlers on parents of the `dom-repeat` (event delegation).\n *\n * A view-specific filter/sort may be applied to each `dom-repeat` by supplying a\n * `filter` and/or `sort` property.  This may be a string that names a function on\n * the host, or a function may be assigned to the property directly.  The functions\n * should implemented following the standard `Array` filter/sort API.\n *\n * In order to re-run the filter or sort functions based on changes to sub-fields\n * of `items`, the `observe` property may be set as a space-separated list of\n * `item` sub-fields that should cause a re-filter/sort when modified.  If\n * the filter or sort function depends on properties not contained in `items`,\n * the user should observe changes to those properties and call `render` to update\n * the view based on the dependency change.\n *\n * For example, for an `dom-repeat` with a filter of the following:\n *\n * ```js\n * isEngineer(item) {\n *   return item.type == 'engineer' || item.manager.type == 'engineer';\n * }\n * ```\n *\n * Then the `observe` property should be configured as follows:\n *\n * ```html\n * <dom-repeat items=\"{{employees}}\" filter=\"isEngineer\" observe=\"type manager.type\">\n * ```\n *\n * @customElement\n * @polymer\n * @extends {domRepeatBase}\n * @appliesMixin OptionalMutableData\n * @summary Custom element for stamping instance of a template bound to\n *   items in an array.\n */\nexport class DomRepeat extends domRepeatBase {\n\n  // Not needed to find template; can be removed once the analyzer\n  // can find the tag name from customElements.define call\n  static get is() { return 'dom-repeat'; }\n\n  static get template() { return null; }\n\n  static get properties() {\n\n    /**\n     * Fired whenever DOM is added or removed by this template (by\n     * default, rendering occurs lazily).  To force immediate rendering, call\n     * `render`.\n     *\n     * @event dom-change\n     */\n    return {\n\n      /**\n       * An array containing items determining how many instances of the template\n       * to stamp and that that each template instance should bind to.\n       */\n      items: {\n        type: Array\n      },\n\n      /**\n       * The name of the variable to add to the binding scope for the array\n       * element associated with a given template instance.\n       */\n      as: {\n        type: String,\n        value: 'item'\n      },\n\n      /**\n       * The name of the variable to add to the binding scope with the index\n       * of the instance in the sorted and filtered list of rendered items.\n       * Note, for the index in the `this.items` array, use the value of the\n       * `itemsIndexAs` property.\n       */\n      indexAs: {\n        type: String,\n        value: 'index'\n      },\n\n      /**\n       * The name of the variable to add to the binding scope with the index\n       * of the instance in the `this.items` array. Note, for the index of\n       * this instance in the sorted and filtered list of rendered items,\n       * use the value of the `indexAs` property.\n       */\n      itemsIndexAs: {\n        type: String,\n        value: 'itemsIndex'\n      },\n\n      /**\n       * A function that should determine the sort order of the items.  This\n       * property should either be provided as a string, indicating a method\n       * name on the element's host, or else be an actual function.  The\n       * function should match the sort function passed to `Array.sort`.\n       * Using a sort function has no effect on the underlying `items` array.\n       */\n      sort: {\n        type: Function,\n        observer: '__sortChanged'\n      },\n\n      /**\n       * A function that can be used to filter items out of the view.  This\n       * property should either be provided as a string, indicating a method\n       * name on the element's host, or else be an actual function.  The\n       * function should match the sort function passed to `Array.filter`.\n       * Using a filter function has no effect on the underlying `items` array.\n       */\n      filter: {\n        type: Function,\n        observer: '__filterChanged'\n      },\n\n      /**\n       * When using a `filter` or `sort` function, the `observe` property\n       * should be set to a space-separated list of the names of item\n       * sub-fields that should trigger a re-sort or re-filter when changed.\n       * These should generally be fields of `item` that the sort or filter\n       * function depends on.\n       */\n      observe: {\n        type: String,\n        observer: '__observeChanged'\n      },\n\n      /**\n       * When using a `filter` or `sort` function, the `delay` property\n       * determines a debounce time in ms after a change to observed item\n       * properties that must pass before the filter or sort is re-run.\n       * This is useful in rate-limiting shuffling of the view when\n       * item changes may be frequent.\n       */\n      delay: Number,\n\n      /**\n       * Count of currently rendered items after `filter` (if any) has been applied.\n       * If \"chunking mode\" is enabled, `renderedItemCount` is updated each time a\n       * set of template instances is rendered.\n       *\n       */\n      renderedItemCount: {\n        type: Number,\n        notify: !suppressTemplateNotifications,\n        readOnly: true\n      },\n\n      /**\n       * When greater than zero, defines an initial count of template instances\n       * to render after setting the `items` array, before the next paint, and\n       * puts the `dom-repeat` into \"chunking mode\".  The remaining items (and\n       * any future items as a result of pushing onto the array) will be created\n       * and rendered incrementally at each animation frame thereof until all\n       * instances have been rendered.\n       */\n      initialCount: {\n        type: Number\n      },\n\n      /**\n       * When `initialCount` is used, this property defines a frame rate (in\n       * fps) to target by throttling the number of instances rendered each\n       * frame to not exceed the budget for the target frame rate.  The\n       * framerate is effectively the number of `requestAnimationFrame`s that\n       * it tries to allow to actually fire in a given second. It does this\n       * by measuring the time between `rAF`s and continuously adjusting the\n       * number of items created each `rAF` to maintain the target framerate.\n       * Setting this to a higher number allows lower latency and higher\n       * throughput for event handlers and other tasks, but results in a\n       * longer time for the remaining items to complete rendering.\n       */\n      targetFramerate: {\n        type: Number,\n        value: 20\n      },\n\n      _targetFrameTime: {\n        type: Number,\n        computed: '__computeFrameTime(targetFramerate)'\n      },\n\n      /**\n       * When the global `suppressTemplateNotifications` setting is used, setting\n       * `notifyDomChange: true` will enable firing `dom-change` events on this\n       * element.\n       */\n      notifyDomChange: {\n        type: Boolean\n      },\n\n      /**\n       * When chunking is enabled via `initialCount` and the `items` array is\n       * set to a new array, this flag controls whether the previously rendered\n       * instances are reused or not.\n       *\n       * When `true`, any previously rendered template instances are updated in\n       * place to their new item values synchronously in one shot, and then any\n       * further items (if any) are chunked out.  When `false`, the list is\n       * returned back to its `initialCount` (any instances over the initial\n       * count are discarded) and the remainder of the list is chunked back in.\n       * Set this to `true` to avoid re-creating the list and losing scroll\n       * position, although note that when changing the list to completely\n       * different data the render thread will be blocked until all existing\n       * instances are updated to their new data.\n       */\n      reuseChunkedInstances: {\n        type: Boolean\n      }\n\n    };\n\n  }\n\n  static get observers() {\n    return [ '__itemsChanged(items.*)' ];\n  }\n\n  constructor() {\n    super();\n    this.__instances = [];\n    this.__renderDebouncer = null;\n    this.__itemsIdxToInstIdx = {};\n    this.__chunkCount = null;\n    this.__renderStartTime = null;\n    this.__itemsArrayChanged = false;\n    this.__shouldMeasureChunk = false;\n    this.__shouldContinueChunking = false;\n    this.__chunkingId = 0;\n    this.__sortFn = null;\n    this.__filterFn = null;\n    this.__observePaths = null;\n    /** @type {?function(new:TemplateInstanceBase, Object=)} */\n    this.__ctor = null;\n    this.__isDetached = true;\n    this.template = null;\n    /** @type {TemplateInfo} */\n    this._templateInfo;\n  }\n\n  /**\n   * @override\n   * @return {void}\n   */\n  disconnectedCallback() {\n    super.disconnectedCallback();\n    this.__isDetached = true;\n    for (let i=0; i<this.__instances.length; i++) {\n      this.__detachInstance(i);\n    }\n    // Stop chunking if one was in progress\n    if (this.__chunkingId) {\n      cancelAnimationFrame(this.__chunkingId);\n    }\n  }\n\n  /**\n   * @override\n   * @return {void}\n   */\n  connectedCallback() {\n    super.connectedCallback();\n    if (!hideElementsGlobally()) {\n      this.style.display = 'none';\n    }\n    // only perform attachment if the element was previously detached.\n    if (this.__isDetached) {\n      this.__isDetached = false;\n      let wrappedParent = wrap(wrap(this).parentNode);\n      for (let i=0; i<this.__instances.length; i++) {\n        this.__attachInstance(i, wrappedParent);\n      }\n      // Restart chunking if one was in progress when disconnected\n      if (this.__chunkingId) {\n        this.__render();\n      }\n    }\n  }\n\n  __ensureTemplatized() {\n    // Templatizing (generating the instance constructor) needs to wait\n    // until ready, since won't have its template content handed back to\n    // it until then\n    if (!this.__ctor) {\n      // When `removeNestedTemplates` is true, the \"template\" is the element\n      // itself, which has been given a `_templateInfo` property\n      const thisAsTemplate = /** @type {!HTMLTemplateElement} */ (\n          /** @type {!HTMLElement} */ (this));\n      let template = this.template = thisAsTemplate._templateInfo ?\n          thisAsTemplate :\n          /** @type {!HTMLTemplateElement} */ (this.querySelector('template'));\n      if (!template) {\n        // Wait until childList changes and template should be there by then\n        let observer = new MutationObserver(() => {\n          if (this.querySelector('template')) {\n            observer.disconnect();\n            this.__render();\n          } else {\n            throw new Error('dom-repeat requires a <template> child');\n          }\n        });\n        observer.observe(this, {childList: true});\n        return false;\n      }\n      // Template instance props that should be excluded from forwarding\n      let instanceProps = {};\n      instanceProps[this.as] = true;\n      instanceProps[this.indexAs] = true;\n      instanceProps[this.itemsIndexAs] = true;\n      this.__ctor = templatize(template, this, {\n        mutableData: this.mutableData,\n        parentModel: true,\n        instanceProps: instanceProps,\n        /**\n         * @this {DomRepeat}\n         * @param {string} prop Property to set\n         * @param {*} value Value to set property to\n         */\n        forwardHostProp: function(prop, value) {\n          let i$ = this.__instances;\n          for (let i=0, inst; (i<i$.length) && (inst=i$[i]); i++) {\n            inst.forwardHostProp(prop, value);\n          }\n        },\n        /**\n         * @this {DomRepeat}\n         * @param {Object} inst Instance to notify\n         * @param {string} prop Property to notify\n         * @param {*} value Value to notify\n         */\n        notifyInstanceProp: function(inst, prop, value) {\n          if (matches(this.as, prop)) {\n            let idx = inst[this.itemsIndexAs];\n            if (prop == this.as) {\n              this.items[idx] = value;\n            }\n            let path = translate(this.as, `${JSCompiler_renameProperty('items', this)}.${idx}`, prop);\n            this.notifyPath(path, value);\n          }\n        }\n      });\n    }\n    return true;\n  }\n\n  __getMethodHost() {\n    // Technically this should be the owner of the outermost template.\n    // In shadow dom, this is always getRootNode().host, but we can\n    // approximate this via cooperation with our dataHost always setting\n    // `_methodHost` as long as there were bindings (or id's) on this\n    // instance causing it to get a dataHost.\n    return this.__dataHost._methodHost || this.__dataHost;\n  }\n\n  __functionFromPropertyValue(functionOrMethodName) {\n    if (typeof functionOrMethodName === 'string') {\n      let methodName = functionOrMethodName;\n      let obj = this.__getMethodHost();\n      return function() { return obj[methodName].apply(obj, arguments); };\n    }\n\n    return functionOrMethodName;\n  }\n\n  __sortChanged(sort) {\n    this.__sortFn = this.__functionFromPropertyValue(sort);\n    if (this.items) { this.__debounceRender(this.__render); }\n  }\n\n  __filterChanged(filter) {\n    this.__filterFn = this.__functionFromPropertyValue(filter);\n    if (this.items) { this.__debounceRender(this.__render); }\n  }\n\n  __computeFrameTime(rate) {\n    return Math.ceil(1000/rate);\n  }\n\n  __observeChanged() {\n    this.__observePaths = this.observe &&\n      this.observe.replace('.*', '.').split(' ');\n  }\n\n  __handleObservedPaths(path) {\n    // Handle cases where path changes should cause a re-sort/filter\n    if (this.__sortFn || this.__filterFn) {\n      if (!path) {\n        // Always re-render if the item itself changed\n        this.__debounceRender(this.__render, this.delay);\n      } else if (this.__observePaths) {\n        // Otherwise, re-render if the path changed matches an observed path\n        let paths = this.__observePaths;\n        for (let i=0; i<paths.length; i++) {\n          if (path.indexOf(paths[i]) === 0) {\n            this.__debounceRender(this.__render, this.delay);\n          }\n        }\n      }\n    }\n  }\n\n  __itemsChanged(change) {\n    if (this.items && !Array.isArray(this.items)) {\n      console.warn('dom-repeat expected array for `items`, found', this.items);\n    }\n    // If path was to an item (e.g. 'items.3' or 'items.3.foo'), forward the\n    // path to that instance synchronously (returns false for non-item paths)\n    if (!this.__handleItemPath(change.path, change.value)) {\n      // Otherwise, the array was reset ('items') or spliced ('items.splices'),\n      // so queue a render.  Restart chunking when the items changed (for\n      // backward compatibility), unless `reuseChunkedInstances` option is set\n      if (change.path === 'items') {\n        this.__itemsArrayChanged = true;\n      }\n      this.__debounceRender(this.__render);\n    }\n  }\n\n  /**\n   * @param {function(this:DomRepeat)} fn Function to debounce.\n   * @param {number=} delay Delay in ms to debounce by.\n   */\n  __debounceRender(fn, delay = 0) {\n    this.__renderDebouncer = Debouncer.debounce(\n          this.__renderDebouncer\n        , delay > 0 ? timeOut.after(delay) : microTask\n        , fn.bind(this));\n    enqueueDebouncer(this.__renderDebouncer);\n  }\n\n  /**\n   * Forces the element to render its content. Normally rendering is\n   * asynchronous to a provoking change. This is done for efficiency so\n   * that multiple changes trigger only a single render. The render method\n   * should be called if, for example, template rendering is required to\n   * validate application state.\n   * @return {void}\n   */\n  render() {\n    // Queue this repeater, then flush all in order\n    this.__debounceRender(this.__render);\n    flush();\n  }\n\n  __render() {\n    if (!this.__ensureTemplatized()) {\n      // No template found yet\n      return;\n    }\n    let items = this.items || [];\n    // Sort and filter the items into a mapping array from instance->item\n    const isntIdxToItemsIdx = this.__sortAndFilterItems(items);\n    // If we're chunking, increase the limit if there are new instances to\n    // create and schedule the next chunk\n    const limit = this.__calculateLimit(isntIdxToItemsIdx.length);\n    // Create, update, and/or remove instances\n    this.__updateInstances(items, limit, isntIdxToItemsIdx);\n    // If we're chunking, schedule a rAF task to measure/continue chunking.     \n    // Do this before any notifying events (renderedItemCount & dom-change)\n    // since those could modify items and enqueue a new full render which will\n    // pre-empt this measurement.\n    if (this.initialCount &&\n       (this.__shouldMeasureChunk || this.__shouldContinueChunking)) {\n      cancelAnimationFrame(this.__chunkingId);\n      this.__chunkingId = requestAnimationFrame(() => {\n        this.__chunkingId = null;\n        this.__continueChunking();\n      });\n    }\n    // Set rendered item count\n    this._setRenderedItemCount(this.__instances.length);\n    // Notify users\n    if (!suppressTemplateNotifications || this.notifyDomChange) {\n      this.dispatchEvent(new CustomEvent('dom-change', {\n        bubbles: true,\n        composed: true\n      }));\n    }\n  }\n\n  __sortAndFilterItems(items) {\n    // Generate array maping the instance index to the items array index\n    let isntIdxToItemsIdx = new Array(items.length);\n    for (let i=0; i<items.length; i++) {\n      isntIdxToItemsIdx[i] = i;\n    }\n    // Apply user filter\n    if (this.__filterFn) {\n      isntIdxToItemsIdx = isntIdxToItemsIdx.filter((i, idx, array) =>\n        this.__filterFn(items[i], idx, array));\n    }\n    // Apply user sort\n    if (this.__sortFn) {\n      isntIdxToItemsIdx.sort((a, b) => this.__sortFn(items[a], items[b]));\n    }\n    return isntIdxToItemsIdx;\n  }\n\n  __calculateLimit(filteredItemCount) {\n    let limit = filteredItemCount;\n    const currentCount = this.__instances.length;\n    // When chunking, we increase the limit from the currently rendered count\n    // by the chunk count that is re-calculated after each rAF (with special\n    // cases for resetting the limit to initialCount after changing items)\n    if (this.initialCount) {\n      let newCount;\n      if (!this.__chunkCount ||\n        (this.__itemsArrayChanged && !this.reuseChunkedInstances)) {\n        // Limit next render to the initial count\n        limit = Math.min(filteredItemCount, this.initialCount);\n        // Subtract off any existing instances to determine the number of\n        // instances that will be created\n        newCount = Math.max(limit - currentCount, 0);\n        // Initialize the chunk size with how many items we're creating\n        this.__chunkCount = newCount || 1;\n      } else {\n        // The number of new instances that will be created is based on the\n        // existing instances, the new list size, and the chunk size\n        newCount = Math.min(\n          Math.max(filteredItemCount - currentCount, 0), \n          this.__chunkCount);\n        // Update the limit based on how many new items we're making, limited\n        // buy the total size of the list\n        limit = Math.min(currentCount + newCount, filteredItemCount);\n      }\n      // Record some state about chunking for use in `__continueChunking`\n      this.__shouldMeasureChunk = newCount === this.__chunkCount;\n      this.__shouldContinueChunking = limit < filteredItemCount;\n      this.__renderStartTime = performance.now();\n    }\n    this.__itemsArrayChanged = false;\n    return limit;\n  }\n\n  __continueChunking() {\n    // Simple auto chunkSize throttling algorithm based on feedback loop:\n    // measure actual time between frames and scale chunk count by ratio of\n    // target/actual frame time.  Only modify chunk size if our measurement\n    // reflects the cost of a creating a full chunk's worth of instances; this\n    // avoids scaling up the chunk size if we e.g. quickly re-rendered instances\n    // in place\n    if (this.__shouldMeasureChunk) {\n      const renderTime = performance.now() - this.__renderStartTime;\n      const ratio = this._targetFrameTime / renderTime;\n      this.__chunkCount = Math.round(this.__chunkCount * ratio) || 1;\n    }\n    // Enqueue a new render if we haven't reached the full size of the list\n    if (this.__shouldContinueChunking) {\n      this.__debounceRender(this.__render);\n    }\n  }\n  \n  __updateInstances(items, limit, isntIdxToItemsIdx) {\n    // items->inst map kept for item path forwarding\n    const itemsIdxToInstIdx = this.__itemsIdxToInstIdx = {};\n    let instIdx;\n    // Generate instances and assign items\n    for (instIdx=0; instIdx<limit; instIdx++) {\n      let inst = this.__instances[instIdx];\n      let itemIdx = isntIdxToItemsIdx[instIdx];\n      let item = items[itemIdx];\n      itemsIdxToInstIdx[itemIdx] = instIdx;\n      if (inst) {\n        inst._setPendingProperty(this.as, item);\n        inst._setPendingProperty(this.indexAs, instIdx);\n        inst._setPendingProperty(this.itemsIndexAs, itemIdx);\n        inst._flushProperties();\n      } else {\n        this.__insertInstance(item, instIdx, itemIdx);\n      }\n    }\n    // Remove any extra instances from previous state\n    for (let i=this.__instances.length-1; i>=instIdx; i--) {\n      this.__detachAndRemoveInstance(i);\n    }\n  }\n\n  __detachInstance(idx) {\n    let inst = this.__instances[idx];\n    const wrappedRoot = wrap(inst.root);\n    for (let i=0; i<inst.children.length; i++) {\n      let el = inst.children[i];\n      wrappedRoot.appendChild(el);\n    }\n    return inst;\n  }\n\n  __attachInstance(idx, parent) {\n    let inst = this.__instances[idx];\n    // Note, this is pre-wrapped as an optimization\n    parent.insertBefore(inst.root, this);\n  }\n\n  __detachAndRemoveInstance(idx) {\n    this.__detachInstance(idx);\n    this.__instances.splice(idx, 1);\n  }\n\n  __stampInstance(item, instIdx, itemIdx) {\n    let model = {};\n    model[this.as] = item;\n    model[this.indexAs] = instIdx;\n    model[this.itemsIndexAs] = itemIdx;\n    return new this.__ctor(model);\n  }\n\n  __insertInstance(item, instIdx, itemIdx) {\n    const inst = this.__stampInstance(item, instIdx, itemIdx);\n    let beforeRow = this.__instances[instIdx + 1];\n    let beforeNode = beforeRow ? beforeRow.children[0] : this;\n    wrap(wrap(this).parentNode).insertBefore(inst.root, beforeNode);\n    this.__instances[instIdx] = inst;\n    return inst;\n  }\n\n  // Implements extension point from Templatize mixin\n  /**\n   * Shows or hides the template instance top level child elements. For\n   * text nodes, `textContent` is removed while \"hidden\" and replaced when\n   * \"shown.\"\n   * @param {boolean} hidden Set to true to hide the children;\n   * set to false to show them.\n   * @return {void}\n   * @protected\n   */\n  _showHideChildren(hidden) {\n    for (let i=0; i<this.__instances.length; i++) {\n      this.__instances[i]._showHideChildren(hidden);\n    }\n  }\n\n  // Called as a side effect of a host items.<key>.<path> path change,\n  // responsible for notifying item.<path> changes to inst for key\n  __handleItemPath(path, value) {\n    let itemsPath = path.slice(6); // 'items.'.length == 6\n    let dot = itemsPath.indexOf('.');\n    let itemsIdx = dot < 0 ? itemsPath : itemsPath.substring(0, dot);\n    // If path was index into array...\n    if (itemsIdx == parseInt(itemsIdx, 10)) {\n      let itemSubPath = dot < 0 ? '' : itemsPath.substring(dot+1);\n      // If the path is observed, it will trigger a full refresh\n      this.__handleObservedPaths(itemSubPath);\n      // Note, even if a rull refresh is triggered, always do the path\n      // notification because unless mutableData is used for dom-repeat\n      // and all elements in the instance subtree, a full refresh may\n      // not trigger the proper update.\n      let instIdx = this.__itemsIdxToInstIdx[itemsIdx];\n      let inst = this.__instances[instIdx];\n      if (inst) {\n        let itemPath = this.as + (itemSubPath ? '.' + itemSubPath : '');\n        // This is effectively `notifyPath`, but avoids some of the overhead\n        // of the public API\n        inst._setPendingPropertyOrPath(itemPath, value, false, true);\n        inst._flushProperties();\n      }\n      return true;\n    }\n  }\n\n  /**\n   * Returns the item associated with a given element stamped by\n   * this `dom-repeat`.\n   *\n   * Note, to modify sub-properties of the item,\n   * `modelForElement(el).set('item.<sub-prop>', value)`\n   * should be used.\n   *\n   * @param {!HTMLElement} el Element for which to return the item.\n   * @return {*} Item associated with the element.\n   */\n  itemForElement(el) {\n    let instance = this.modelForElement(el);\n    return instance && instance[this.as];\n  }\n\n  /**\n   * Returns the inst index for a given element stamped by this `dom-repeat`.\n   * If `sort` is provided, the index will reflect the sorted order (rather\n   * than the original array order).\n   *\n   * @param {!HTMLElement} el Element for which to return the index.\n   * @return {?number} Row index associated with the element (note this may\n   *   not correspond to the array index if a user `sort` is applied).\n   */\n  indexForElement(el) {\n    let instance = this.modelForElement(el);\n    return instance && instance[this.indexAs];\n  }\n\n  /**\n   * Returns the template \"model\" associated with a given element, which\n   * serves as the binding scope for the template instance the element is\n   * contained in. A template model\n   * should be used to manipulate data associated with this template instance.\n   *\n   * Example:\n   *\n   *   let model = modelForElement(el);\n   *   if (model.index < 10) {\n   *     model.set('item.checked', true);\n   *   }\n   *\n   * @param {!HTMLElement} el Element for which to return a template model.\n   * @return {TemplateInstanceBase} Model representing the binding scope for\n   *   the element.\n   */\n  modelForElement(el) {\n    return modelForElement(this.template, el);\n  }\n\n}\n\ncustomElements.define(DomRepeat.is, DomRepeat);\n","/**\n@license\nCopyright (c) 2017 The Polymer Project Authors. All rights reserved.\nThis code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt\nThe complete set of authors may be found at http://polymer.github.io/AUTHORS.txt\nThe complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt\nCode distributed by Google as part of the polymer project is also\nsubject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt\n*/\nimport { PolymerElement } from '../../polymer-element.js';\n\nimport { Debouncer } from '../utils/debounce.js';\nimport { enqueueDebouncer, flush } from '../utils/flush.js';\nimport { microTask } from '../utils/async.js';\nimport { root } from '../utils/path.js';\nimport { wrap } from '../utils/wrap.js';\nimport { hideElementsGlobally } from '../utils/hide-template-controls.js';\nimport { fastDomIf, strictTemplatePolicy, suppressTemplateNotifications } from '../utils/settings.js';\nimport { showHideChildren, templatize } from '../utils/templatize.js';\n\n/**\n * @customElement\n * @polymer\n * @extends PolymerElement\n * @summary Base class for dom-if element; subclassed into concrete\n *   implementation.\n */\nclass DomIfBase extends PolymerElement {\n\n  // Not needed to find template; can be removed once the analyzer\n  // can find the tag name from customElements.define call\n  static get is() { return 'dom-if'; }\n\n  static get template() { return null; }\n\n  static get properties() {\n\n    return {\n\n      /**\n       * Fired whenever DOM is added or removed/hidden by this template (by\n       * default, rendering occurs lazily).  To force immediate rendering, call\n       * `render`.\n       *\n       * @event dom-change\n       */\n\n      /**\n       * A boolean indicating whether this template should stamp.\n       */\n      if: {\n        type: Boolean,\n        observer: '__debounceRender'\n      },\n\n      /**\n       * When true, elements will be removed from DOM and discarded when `if`\n       * becomes false and re-created and added back to the DOM when `if`\n       * becomes true.  By default, stamped elements will be hidden but left\n       * in the DOM when `if` becomes false, which is generally results\n       * in better performance.\n       */\n      restamp: {\n        type: Boolean,\n        observer: '__debounceRender'\n      },\n\n      /**\n       * When the global `suppressTemplateNotifications` setting is used, setting\n       * `notifyDomChange: true` will enable firing `dom-change` events on this\n       * element.\n       */\n      notifyDomChange: {\n        type: Boolean\n      }\n    };\n\n  }\n\n  constructor() {\n    super();\n    this.__renderDebouncer = null;\n    this._lastIf = false;\n    this.__hideTemplateChildren__ = false;\n    /** @type {!HTMLTemplateElement|undefined} */\n    this.__template;\n    /** @type {!TemplateInfo|undefined} */\n    this._templateInfo;\n  }\n\n  __debounceRender() {\n    // Render is async for 2 reasons:\n    // 1. To eliminate dom creation trashing if user code thrashes `if` in the\n    //    same turn. This was more common in 1.x where a compound computed\n    //    property could result in the result changing multiple times, but is\n    //    mitigated to a large extent by batched property processing in 2.x.\n    // 2. To avoid double object propagation when a bag including values bound\n    //    to the `if` property as well as one or more hostProps could enqueue\n    //    the <dom-if> to flush before the <template>'s host property\n    //    forwarding. In that scenario creating an instance would result in\n    //    the host props being set once, and then the enqueued changes on the\n    //    template would set properties a second time, potentially causing an\n    //    object to be set to an instance more than once.  Creating the\n    //    instance async from flushing data ensures this doesn't happen. If\n    //    we wanted a sync option in the future, simply having <dom-if> flush\n    //    (or clear) its template's pending host properties before creating\n    //    the instance would also avoid the problem.\n    this.__renderDebouncer = Debouncer.debounce(\n          this.__renderDebouncer\n        , microTask\n        , () => this.__render());\n    enqueueDebouncer(this.__renderDebouncer);\n  }\n\n  /**\n   * @override\n   * @return {void}\n   */\n  disconnectedCallback() {\n    super.disconnectedCallback();\n    const parent = wrap(this).parentNode;\n    if (!parent || (parent.nodeType == Node.DOCUMENT_FRAGMENT_NODE &&\n        !wrap(parent).host)) {\n      this.__teardownInstance();\n    }\n  }\n\n  /**\n   * @override\n   * @return {void}\n   */\n  connectedCallback() {\n    super.connectedCallback();\n    if (!hideElementsGlobally()) {\n      this.style.display = 'none';\n    }\n    if (this.if) {\n      this.__debounceRender();\n    }\n  }\n\n  /**\n   * Ensures a template has been assigned to `this.__template`.  If it has not\n   * yet been, it querySelectors for it in its children and if it does not yet\n   * exist (e.g. in parser-generated case), opens a mutation observer and\n   * waits for it to appear (returns false if it has not yet been found,\n   * otherwise true).  In the `removeNestedTemplates` case, the \"template\" will\n   * be the `dom-if` element itself.\n   *\n   * @return {boolean} True when a template has been found, false otherwise\n   */\n  __ensureTemplate() {\n    if (!this.__template) {\n      // When `removeNestedTemplates` is true, the \"template\" is the element\n      // itself, which has been given a `_templateInfo` property\n      const thisAsTemplate = /** @type {!HTMLTemplateElement} */ (\n          /** @type {!HTMLElement} */ (this));\n      let template = thisAsTemplate._templateInfo ?\n          thisAsTemplate :\n          /** @type {!HTMLTemplateElement} */\n          (wrap(thisAsTemplate).querySelector('template'));\n      if (!template) {\n        // Wait until childList changes and template should be there by then\n        let observer = new MutationObserver(() => {\n          if (wrap(this).querySelector('template')) {\n            observer.disconnect();\n            this.__render();\n          } else {\n            throw new Error('dom-if requires a <template> child');\n          }\n        });\n        observer.observe(this, {childList: true});\n        return false;\n      }\n      this.__template = template;\n    }\n    return true;\n  }\n\n  /**\n   * Ensures a an instance of the template has been created and inserted. This\n   * method may return false if the template has not yet been found or if\n   * there is no `parentNode` to insert the template into (in either case,\n   * connection or the template-finding mutation observer firing will queue\n   * another render, causing this method to be called again at a more\n   * appropriate time).\n   *\n   * Subclasses should implement the following methods called here:\n   * - `__hasInstance`\n   * - `__createAndInsertInstance`\n   * - `__getInstanceNodes`\n   *\n   * @return {boolean} True if the instance was created, false otherwise.\n   */\n  __ensureInstance() {\n    let parentNode = wrap(this).parentNode;\n    if (!this.__hasInstance()) {\n      // Guard against element being detached while render was queued\n      if (!parentNode) {\n        return false;\n      }\n      // Find the template (when false, there was no template yet)\n      if (!this.__ensureTemplate()) {\n        return false;\n      }\n      this.__createAndInsertInstance(parentNode);\n    } else {\n      // Move instance children if necessary\n      let children = this.__getInstanceNodes();\n      if (children && children.length) {\n        // Detect case where dom-if was re-attached in new position\n        let lastChild = wrap(this).previousSibling;\n        if (lastChild !== children[children.length-1]) {\n          for (let i=0, n; (i<children.length) && (n=children[i]); i++) {\n            wrap(parentNode).insertBefore(n, this);\n          }\n        }\n      }\n    }\n    return true;\n  }\n\n  /**\n   * Forces the element to render its content. Normally rendering is\n   * asynchronous to a provoking change. This is done for efficiency so\n   * that multiple changes trigger only a single render. The render method\n   * should be called if, for example, template rendering is required to\n   * validate application state.\n   *\n   * @return {void}\n   */\n  render() {\n    flush();\n  }\n\n  /**\n   * Performs the key rendering steps:\n   * 1. Ensure a template instance has been stamped (when true)\n   * 2. Remove the template instance (when false and restamp:true)\n   * 3. Sync the hidden state of the instance nodes with the if/restamp state\n   * 4. Fires the `dom-change` event when necessary\n   *\n   * @return {void}\n   */\n  __render() {\n    if (this.if) {\n      if (!this.__ensureInstance()) {\n        // No template found yet\n        return;\n      }\n    } else if (this.restamp) {\n      this.__teardownInstance();\n    }\n    this._showHideChildren();\n    if ((!suppressTemplateNotifications || this.notifyDomChange)\n        && this.if != this._lastIf) {\n      this.dispatchEvent(new CustomEvent('dom-change', {\n        bubbles: true,\n        composed: true\n      }));\n      this._lastIf = this.if;\n    }\n  }\n\n  // Ideally these would be annotated as abstract methods in an abstract class,\n  // but closure compiler is finnicky\n  /* eslint-disable valid-jsdoc */\n  /**\n   * Abstract API to be implemented by subclass: Returns true if a template\n   * instance has been created and inserted.\n   *\n   * @protected\n   * @return {boolean} True when an instance has been created.\n   */\n  __hasInstance() { }\n\n  /**\n   * Abstract API to be implemented by subclass: Returns the child nodes stamped\n   * from a template instance.\n   *\n   * @protected\n   * @return {Array<Node>} Array of child nodes stamped from the template\n   * instance.\n   */\n  __getInstanceNodes() { }\n\n  /**\n   * Abstract API to be implemented by subclass: Creates an instance of the\n   * template and inserts it into the given parent node.\n   *\n   * @protected\n   * @param {Node} parentNode The parent node to insert the instance into\n   * @return {void}\n   */\n  __createAndInsertInstance(parentNode) { } // eslint-disable-line no-unused-vars\n\n  /**\n   * Abstract API to be implemented by subclass: Removes nodes created by an\n   * instance of a template and any associated cleanup.\n   *\n   * @protected\n   * @return {void}\n   */\n  __teardownInstance() { }\n\n  /**\n   * Abstract API to be implemented by subclass: Shows or hides any template\n   * instance childNodes based on the `if` state of the element and its\n   * `__hideTemplateChildren__` property.\n   *\n   * @protected\n   * @return {void}\n   */\n  _showHideChildren() { }\n  /* eslint-enable valid-jsdoc */\n}\n\n/**\n * The version of DomIf used when `fastDomIf` setting is in use, which is\n * optimized for first-render (but adds a tax to all subsequent property updates\n * on the host, whether they were used in a given `dom-if` or not).\n *\n * This implementation avoids use of `Templatizer`, which introduces a new scope\n * (a non-element PropertyEffects instance), which is not strictly necessary\n * since `dom-if` never introduces new properties to its scope (unlike\n * `dom-repeat`). Taking advantage of this fact, the `dom-if` reaches up to its\n * `__dataHost` and stamps the template directly from the host using the host's\n * runtime `_stampTemplate` API, which binds the property effects of the\n * template directly to the host. This both avoids the intermediary\n * `Templatizer` instance, but also avoids the need to bind host properties to\n * the `<template>` element and forward those into the template instance.\n *\n * In this version of `dom-if`, the `this.__instance` method is the\n * `DocumentFragment` returned from `_stampTemplate`, which also serves as the\n * handle for later removing it using the `_removeBoundDom` method.\n */\nclass DomIfFast extends DomIfBase {\n\n  constructor() {\n    super();\n    this.__instance = null;\n    this.__syncInfo = null;\n  }\n\n  /**\n   * Implementation of abstract API needed by DomIfBase.\n   *\n   * @override\n   * @return {boolean} True when an instance has been created.\n   */\n  __hasInstance() {\n    return Boolean(this.__instance);\n  }\n\n  /**\n   * Implementation of abstract API needed by DomIfBase.\n   *\n   * @override\n   * @return {Array<Node>} Array of child nodes stamped from the template\n   * instance.\n   */\n  __getInstanceNodes() {\n    return this.__instance.templateInfo.childNodes;\n  }\n\n  /**\n   * Implementation of abstract API needed by DomIfBase.\n   *\n   * Stamps the template by calling `_stampTemplate` on the `__dataHost` of this\n   * element and then inserts the resulting nodes into the given `parentNode`.\n   *\n   * @override\n   * @param {Node} parentNode The parent node to insert the instance into\n   * @return {void}\n   */\n  __createAndInsertInstance(parentNode) {\n    const host = this.__dataHost || this;\n    if (strictTemplatePolicy) {\n      if (!this.__dataHost) {\n        throw new Error('strictTemplatePolicy: template owner not trusted');\n      }\n    }\n    // Pre-bind and link the template into the effects system\n    const templateInfo = host._bindTemplate(\n        /** @type {!HTMLTemplateElement} */ (this.__template), true);\n    // Install runEffects hook that prevents running property effects\n    // (and any nested template effects) when the `if` is false\n    templateInfo.runEffects = (runEffects, changedProps, hasPaths) => {\n      let syncInfo = this.__syncInfo;\n      if (this.if) {\n        // Mix any props that changed while the `if` was false into `changedProps`\n        if (syncInfo) {\n          // If there were properties received while the `if` was false, it is\n          // important to sync the hidden state with the element _first_, so that\n          // new bindings to e.g. `textContent` do not get stomped on by\n          // pre-hidden values if `_showHideChildren` were to be called later at\n          // the next render. Clearing `__invalidProps` here ensures\n          // `_showHideChildren`'s call to `__syncHostProperties` no-ops, so\n          // that we don't call `runEffects` more often than necessary.\n          this.__syncInfo = null;\n          this._showHideChildren();\n          changedProps = Object.assign(syncInfo.changedProps, changedProps);\n        }\n        runEffects(changedProps, hasPaths);\n      } else {\n        // Accumulate any values changed while `if` was false, along with the\n        // runEffects method to sync them, so that we can replay them once `if`\n        // becomes true\n        if (this.__instance) {\n          if (!syncInfo) {\n            syncInfo = this.__syncInfo = { runEffects, changedProps: {} };\n          }\n          if (hasPaths) {\n            // Store root object of any paths; this will ensure direct bindings\n            // like [[obj.foo]] bindings run after a `set('obj.foo', v)`, but\n            // note that path notifications like `set('obj.foo.bar', v)` will\n            // not propagate. Since batched path notifications are not\n            // supported, we cannot simply accumulate path notifications. This\n            // is equivalent to the non-fastDomIf case, which stores root(p) in\n            // __invalidProps.\n            for (const p in changedProps) {\n              const rootProp = root(p);\n              syncInfo.changedProps[rootProp] = this.__dataHost[rootProp];\n            }\n          } else {\n            Object.assign(syncInfo.changedProps, changedProps);\n          }\n        }\n      }\n    };\n    // Stamp the template, and set its DocumentFragment to the \"instance\"\n    this.__instance = host._stampTemplate(\n        /** @type {!HTMLTemplateElement} */ (this.__template), templateInfo);\n    wrap(parentNode).insertBefore(this.__instance, this);\n  }\n\n  /**\n   * Run effects for any properties that changed while the `if` was false.\n   *\n   * @return {void}\n   */\n  __syncHostProperties() {\n    const syncInfo = this.__syncInfo;\n    if (syncInfo) {\n      this.__syncInfo = null;\n      syncInfo.runEffects(syncInfo.changedProps, false);\n    }\n  }\n\n  /**\n   * Implementation of abstract API needed by DomIfBase.\n   *\n   * Remove the instance and any nodes it created.  Uses the `__dataHost`'s\n   * runtime `_removeBoundDom` method.\n   *\n   * @override\n   * @return {void}\n   */\n  __teardownInstance() {\n    const host = this.__dataHost || this;\n    if (this.__instance) {\n      host._removeBoundDom(this.__instance);\n      this.__instance = null;\n      this.__syncInfo = null;\n    }\n  }\n\n  /**\n   * Implementation of abstract API needed by DomIfBase.\n   *\n   * Shows or hides the template instance top level child nodes. For\n   * text nodes, `textContent` is removed while \"hidden\" and replaced when\n   * \"shown.\"\n   *\n   * @override\n   * @return {void}\n   * @protected\n   * @suppress {visibility}\n   */\n  _showHideChildren() {\n    const hidden = this.__hideTemplateChildren__ || !this.if;\n    if (this.__instance && Boolean(this.__instance.__hidden) !== hidden) {\n      this.__instance.__hidden = hidden;\n      showHideChildren(hidden, this.__instance.templateInfo.childNodes);\n    }\n    if (!hidden) {\n      this.__syncHostProperties();\n    }\n  }\n}\n\n/**\n * The \"legacy\" implementation of `dom-if`, implemented using `Templatizer`.\n *\n * In this version, `this.__instance` is the `TemplateInstance` returned\n * from the templatized constructor.\n */\nclass DomIfLegacy extends DomIfBase {\n\n  constructor() {\n    super();\n    this.__ctor = null;\n    this.__instance = null;\n    this.__invalidProps = null;\n  }\n\n  /**\n   * Implementation of abstract API needed by DomIfBase.\n   *\n   * @override\n   * @return {boolean} True when an instance has been created.\n   */\n  __hasInstance() {\n    return Boolean(this.__instance);\n  }\n\n  /**\n   * Implementation of abstract API needed by DomIfBase.\n   *\n   * @override\n   * @return {Array<Node>} Array of child nodes stamped from the template\n   * instance.\n   */\n  __getInstanceNodes() {\n    return this.__instance.children;\n  }\n\n  /**\n   * Implementation of abstract API needed by DomIfBase.\n   *\n   * Stamps the template by creating a new instance of the templatized\n   * constructor (which is created lazily if it does not yet exist), and then\n   * inserts its resulting `root` doc fragment into the given `parentNode`.\n   *\n   * @override\n   * @param {Node} parentNode The parent node to insert the instance into\n   * @return {void}\n   */\n  __createAndInsertInstance(parentNode) {\n    // Ensure we have an instance constructor\n    if (!this.__ctor) {\n      this.__ctor = templatize(\n          /** @type {!HTMLTemplateElement} */ (this.__template), this, {\n            // dom-if templatizer instances require `mutable: true`, as\n            // `__syncHostProperties` relies on that behavior to sync objects\n            mutableData: true,\n            /**\n             * @param {string} prop Property to forward\n             * @param {*} value Value of property\n             * @this {DomIfLegacy}\n             */\n            forwardHostProp: function(prop, value) {\n              if (this.__instance) {\n                if (this.if) {\n                  this.__instance.forwardHostProp(prop, value);\n                } else {\n                  // If we have an instance but are squelching host property\n                  // forwarding due to if being false, note the invalidated\n                  // properties so `__syncHostProperties` can sync them the next\n                  // time `if` becomes true\n                  this.__invalidProps =\n                      this.__invalidProps || Object.create(null);\n                  this.__invalidProps[root(prop)] = true;\n                }\n              }\n            }\n          });\n    }\n    // Create and insert the instance\n    this.__instance = new this.__ctor();\n    wrap(parentNode).insertBefore(this.__instance.root, this);\n  }\n\n  /**\n   * Implementation of abstract API needed by DomIfBase.\n   *\n   * Removes the instance and any nodes it created.\n   *\n   * @override\n   * @return {void}\n   */\n  __teardownInstance() {\n    if (this.__instance) {\n      let c$ = this.__instance.children;\n      if (c$ && c$.length) {\n        // use first child parent, for case when dom-if may have been detached\n        let parent = wrap(c$[0]).parentNode;\n        // Instance children may be disconnected from parents when dom-if\n        // detaches if a tree was innerHTML'ed\n        if (parent) {\n          parent = wrap(parent);\n          for (let i=0, n; (i<c$.length) && (n=c$[i]); i++) {\n            parent.removeChild(n);\n          }\n        }\n      }\n      this.__invalidProps = null;\n      this.__instance = null;\n    }\n  }\n\n  /**\n   * Forwards any properties that changed while the `if` was false into the\n   * template instance and flushes it.\n   *\n   * @return {void}\n   */\n  __syncHostProperties() {\n    let props = this.__invalidProps;\n    if (props) {\n      this.__invalidProps = null;\n      for (let prop in props) {\n        this.__instance._setPendingProperty(prop, this.__dataHost[prop]);\n      }\n      this.__instance._flushProperties();\n    }\n  }\n\n  /**\n   * Implementation of abstract API needed by DomIfBase.\n   *\n   * Shows or hides the template instance top level child elements. For\n   * text nodes, `textContent` is removed while \"hidden\" and replaced when\n   * \"shown.\"\n   *\n   * @override\n   * @protected\n   * @return {void}\n   * @suppress {visibility}\n   */\n  _showHideChildren() {\n    const hidden = this.__hideTemplateChildren__ || !this.if;\n    if (this.__instance && Boolean(this.__instance.__hidden) !== hidden) {\n      this.__instance.__hidden = hidden;\n      this.__instance._showHideChildren(hidden);\n    }\n    if (!hidden) {\n      this.__syncHostProperties();\n    }\n  }\n}\n\n/**\n * The `<dom-if>` element will stamp a light-dom `<template>` child when\n * the `if` property becomes truthy, and the template can use Polymer\n * data-binding and declarative event features when used in the context of\n * a Polymer element's template.\n *\n * When `if` becomes falsy, the stamped content is hidden but not\n * removed from dom. When `if` subsequently becomes truthy again, the content\n * is simply re-shown. This approach is used due to its favorable performance\n * characteristics: the expense of creating template content is paid only\n * once and lazily.\n *\n * Set the `restamp` property to true to force the stamped content to be\n * created / destroyed when the `if` condition changes.\n *\n * @customElement\n * @polymer\n * @extends DomIfBase\n * @constructor\n * @summary Custom element that conditionally stamps and hides or removes\n *   template content based on a boolean flag.\n */\nexport const DomIf = fastDomIf ? DomIfFast : DomIfLegacy;\n\ncustomElements.define(DomIf.is, DomIf);\n","/**\n@license\nCopyright (c) 2017 The Polymer Project Authors. All rights reserved.\nThis code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt\nThe complete set of authors may be found at http://polymer.github.io/AUTHORS.txt\nThe complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt\nCode distributed by Google as part of the polymer project is also\nsubject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt\n*/\nimport { PolymerElement } from '../../polymer-element.js';\n\nimport { dedupingMixin } from '../utils/mixin.js';\nimport { calculateSplices } from '../utils/array-splice.js';\nimport { ElementMixin } from '../mixins/element-mixin.js';\n\n/**\n * Element mixin for recording dynamic associations between item paths in a\n * master `items` array and a `selected` array such that path changes to the\n * master array (at the host) element or elsewhere via data-binding) are\n * correctly propagated to items in the selected array and vice-versa.\n *\n * The `items` property accepts an array of user data, and via the\n * `select(item)` and `deselect(item)` API, updates the `selected` property\n * which may be bound to other parts of the application, and any changes to\n * sub-fields of `selected` item(s) will be kept in sync with items in the\n * `items` array.  When `multi` is false, `selected` is a property\n * representing the last selected item.  When `multi` is true, `selected`\n * is an array of multiply selected items.\n *\n * @polymer\n * @mixinFunction\n * @appliesMixin ElementMixin\n * @summary Element mixin for recording dynamic associations between item paths in a\n * master `items` array and a `selected` array\n */\nlet ArraySelectorMixin = dedupingMixin(superClass => {\n\n  /**\n   * @constructor\n   * @implements {Polymer_ElementMixin}\n   * @private\n   */\n  let elementBase = ElementMixin(superClass);\n\n  /**\n   * @polymer\n   * @mixinClass\n   * @implements {Polymer_ArraySelectorMixin}\n   * @unrestricted\n   */\n  class ArraySelectorMixin extends elementBase {\n\n    static get properties() {\n      return {\n\n        /**\n         * An array containing items from which selection will be made.\n         */\n        items: {\n          type: Array,\n        },\n\n        /**\n         * When `true`, multiple items may be selected at once (in this case,\n         * `selected` is an array of currently selected items).  When `false`,\n         * only one item may be selected at a time.\n         */\n        multi: {\n          type: Boolean,\n          value: false,\n        },\n\n        /**\n         * When `multi` is true, this is an array that contains any selected.\n         * When `multi` is false, this is the currently selected item, or `null`\n         * if no item is selected.\n         * @type {?Object|?Array<!Object>}\n         */\n        selected: {type: Object, notify: true},\n\n        /**\n         * When `multi` is false, this is the currently selected item, or `null`\n         * if no item is selected.\n         * @type {?Object}\n         */\n        selectedItem: {type: Object, notify: true},\n\n        /**\n         * When `true`, calling `select` on an item that is already selected\n         * will deselect the item.\n         */\n        toggle: {type: Boolean, value: false}\n\n      };\n    }\n\n    static get observers() {\n      return ['__updateSelection(multi, items.*)'];\n    }\n\n    constructor() {\n      super();\n      this.__lastItems = null;\n      this.__lastMulti = null;\n      this.__selectedMap = null;\n    }\n\n    __updateSelection(multi, itemsInfo) {\n      let path = itemsInfo.path;\n      if (path == JSCompiler_renameProperty('items', this)) {\n        // Case 1 - items array changed, so diff against previous array and\n        // deselect any removed items and adjust selected indices\n        let newItems = itemsInfo.base || [];\n        let lastItems = this.__lastItems;\n        let lastMulti = this.__lastMulti;\n        if (multi !== lastMulti) {\n          this.clearSelection();\n        }\n        if (lastItems) {\n          let splices = calculateSplices(newItems, lastItems);\n          this.__applySplices(splices);\n        }\n        this.__lastItems = newItems;\n        this.__lastMulti = multi;\n      } else if (itemsInfo.path == `${JSCompiler_renameProperty('items', this)}.splices`) {\n        // Case 2 - got specific splice information describing the array mutation:\n        // deselect any removed items and adjust selected indices\n        this.__applySplices(itemsInfo.value.indexSplices);\n      } else {\n        // Case 3 - an array element was changed, so deselect the previous\n        // item for that index if it was previously selected\n        let part = path.slice(`${JSCompiler_renameProperty('items', this)}.`.length);\n        let idx = parseInt(part, 10);\n        if ((part.indexOf('.') < 0) && part == idx) {\n          this.__deselectChangedIdx(idx);\n        }\n      }\n    }\n\n    __applySplices(splices) {\n      let selected = this.__selectedMap;\n      // Adjust selected indices and mark removals\n      for (let i=0; i<splices.length; i++) {\n        let s = splices[i];\n        selected.forEach((idx, item) => {\n          if (idx < s.index) {\n            // no change\n          } else if (idx >= s.index + s.removed.length) {\n            // adjust index\n            selected.set(item, idx + s.addedCount - s.removed.length);\n          } else {\n            // remove index\n            selected.set(item, -1);\n          }\n        });\n        for (let j=0; j<s.addedCount; j++) {\n          let idx = s.index + j;\n          if (selected.has(this.items[idx])) {\n            selected.set(this.items[idx], idx);\n          }\n        }\n      }\n      // Update linked paths\n      this.__updateLinks();\n      // Remove selected items that were removed from the items array\n      let sidx = 0;\n      selected.forEach((idx, item) => {\n        if (idx < 0) {\n          if (this.multi) {\n            this.splice(JSCompiler_renameProperty('selected', this), sidx, 1);\n          } else {\n            this.selected = this.selectedItem = null;\n          }\n          selected.delete(item);\n        } else {\n          sidx++;\n        }\n      });\n    }\n\n    __updateLinks() {\n      this.__dataLinkedPaths = {};\n      if (this.multi) {\n        let sidx = 0;\n        this.__selectedMap.forEach(idx => {\n          if (idx >= 0) {\n            this.linkPaths(\n                `${JSCompiler_renameProperty('items', this)}.${idx}`,\n                `${JSCompiler_renameProperty('selected', this)}.${sidx++}`);\n          }\n        });\n      } else {\n        this.__selectedMap.forEach(idx => {\n          this.linkPaths(\n              JSCompiler_renameProperty('selected', this),\n              `${JSCompiler_renameProperty('items', this)}.${idx}`);\n          this.linkPaths(\n              JSCompiler_renameProperty('selectedItem', this),\n              `${JSCompiler_renameProperty('items', this)}.${idx}`);\n        });\n      }\n    }\n\n    /**\n     * Clears the selection state.\n     * @override\n     * @return {void}\n     */\n    clearSelection() {\n      // Unbind previous selection\n      this.__dataLinkedPaths = {};\n      // The selected map stores 3 pieces of information:\n      // key: items array object\n      // value: items array index\n      // order: selected array index\n      this.__selectedMap = new Map();\n      // Initialize selection\n      this.selected = this.multi ? [] : null;\n      this.selectedItem = null;\n    }\n\n    /**\n     * Returns whether the item is currently selected.\n     *\n     * @override\n     * @param {*} item Item from `items` array to test\n     * @return {boolean} Whether the item is selected\n     */\n    isSelected(item) {\n      return this.__selectedMap.has(item);\n    }\n\n    /**\n     * Returns whether the item is currently selected.\n     *\n     * @override\n     * @param {number} idx Index from `items` array to test\n     * @return {boolean} Whether the item is selected\n     */\n    isIndexSelected(idx) {\n      return this.isSelected(this.items[idx]);\n    }\n\n    __deselectChangedIdx(idx) {\n      let sidx = this.__selectedIndexForItemIndex(idx);\n      if (sidx >= 0) {\n        let i = 0;\n        this.__selectedMap.forEach((idx, item) => {\n          if (sidx == i++) {\n            this.deselect(item);\n          }\n        });\n      }\n    }\n\n    __selectedIndexForItemIndex(idx) {\n      let selected = this.__dataLinkedPaths[`${JSCompiler_renameProperty('items', this)}.${idx}`];\n      if (selected) {\n        return parseInt(selected.slice(`${JSCompiler_renameProperty('selected', this)}.`.length), 10);\n      }\n    }\n\n    /**\n     * Deselects the given item if it is already selected.\n     *\n     * @override\n     * @param {*} item Item from `items` array to deselect\n     * @return {void}\n     */\n    deselect(item) {\n      let idx = this.__selectedMap.get(item);\n      if (idx >= 0) {\n        this.__selectedMap.delete(item);\n        let sidx;\n        if (this.multi) {\n          sidx = this.__selectedIndexForItemIndex(idx);\n        }\n        this.__updateLinks();\n        if (this.multi) {\n          this.splice(JSCompiler_renameProperty('selected', this), sidx, 1);\n        } else {\n          this.selected = this.selectedItem = null;\n        }\n      }\n    }\n\n    /**\n     * Deselects the given index if it is already selected.\n     *\n     * @override\n     * @param {number} idx Index from `items` array to deselect\n     * @return {void}\n     */\n    deselectIndex(idx) {\n      this.deselect(this.items[idx]);\n    }\n\n    /**\n     * Selects the given item.  When `toggle` is true, this will automatically\n     * deselect the item if already selected.\n     *\n     * @override\n     * @param {*} item Item from `items` array to select\n     * @return {void}\n     */\n    select(item) {\n      this.selectIndex(this.items.indexOf(item));\n    }\n\n    /**\n     * Selects the given index.  When `toggle` is true, this will automatically\n     * deselect the item if already selected.\n     *\n     * @override\n     * @param {number} idx Index from `items` array to select\n     * @return {void}\n     */\n    selectIndex(idx) {\n      let item = this.items[idx];\n      if (!this.isSelected(item)) {\n        if (!this.multi) {\n          this.__selectedMap.clear();\n        }\n        this.__selectedMap.set(item, idx);\n        this.__updateLinks();\n        if (this.multi) {\n          this.push(JSCompiler_renameProperty('selected', this), item);\n        } else {\n          this.selected = this.selectedItem = item;\n        }\n      } else if (this.toggle) {\n        this.deselectIndex(idx);\n      }\n    }\n\n  }\n\n  return ArraySelectorMixin;\n\n});\n\n// export mixin\nexport { ArraySelectorMixin };\n\n/**\n * @constructor\n * @extends {PolymerElement}\n * @implements {Polymer_ArraySelectorMixin}\n * @private\n */\nlet baseArraySelector = ArraySelectorMixin(PolymerElement);\n\n/**\n * Element implementing the `ArraySelector` mixin, which records\n * dynamic associations between item paths in a master `items` array and a\n * `selected` array such that path changes to the master array (at the host)\n * element or elsewhere via data-binding) are correctly propagated to items\n * in the selected array and vice-versa.\n *\n * The `items` property accepts an array of user data, and via the\n * `select(item)` and `deselect(item)` API, updates the `selected` property\n * which may be bound to other parts of the application, and any changes to\n * sub-fields of `selected` item(s) will be kept in sync with items in the\n * `items` array.  When `multi` is false, `selected` is a property\n * representing the last selected item.  When `multi` is true, `selected`\n * is an array of multiply selected items.\n *\n * Example:\n *\n * ```js\n * import {PolymerElement} from '@polymer/polymer';\n * import '@polymer/polymer/lib/elements/array-selector.js';\n *\n * class EmployeeList extends PolymerElement {\n *   static get _template() {\n *     return html`\n *         <div> Employee list: </div>\n *         <dom-repeat id=\"employeeList\" items=\"{{employees}}\">\n *           <template>\n *             <div>First name: <span>{{item.first}}</span></div>\n *               <div>Last name: <span>{{item.last}}</span></div>\n *               <button on-click=\"toggleSelection\">Select</button>\n *           </template>\n *         </dom-repeat>\n *\n *         <array-selector id=\"selector\"\n *                         items=\"{{employees}}\"\n *                         selected=\"{{selected}}\"\n *                         multi toggle></array-selector>\n *\n *         <div> Selected employees: </div>\n *         <dom-repeat items=\"{{selected}}\">\n *           <template>\n *             <div>First name: <span>{{item.first}}</span></div>\n *             <div>Last name: <span>{{item.last}}</span></div>\n *           </template>\n *         </dom-repeat>`;\n *   }\n *   static get is() { return 'employee-list'; }\n *   static get properties() {\n *     return {\n *       employees: {\n *         value() {\n *           return [\n *             {first: 'Bob', last: 'Smith'},\n *             {first: 'Sally', last: 'Johnson'},\n *             ...\n *           ];\n *         }\n *       }\n *     };\n *   }\n *   toggleSelection(e) {\n *     const item = this.$.employeeList.itemForElement(e.target);\n *     this.$.selector.select(item);\n *   }\n * }\n * ```\n *\n * @polymer\n * @customElement\n * @extends {baseArraySelector}\n * @appliesMixin ArraySelectorMixin\n * @summary Custom element that links paths between an input `items` array and\n *   an output `selected` item or array based on calls to its selection API.\n */\nclass ArraySelector extends baseArraySelector {\n  // Not needed to find template; can be removed once the analyzer\n  // can find the tag name from customElements.define call\n  static get is() { return 'array-selector'; }\n  static get template() { return null; }\n}\ncustomElements.define(ArraySelector.is, ArraySelector);\nexport { ArraySelector };\n","/**\n@license\nCopyright (c) 2017 The Polymer Project Authors. All rights reserved.\nThis code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt\nThe complete set of authors may be found at http://polymer.github.io/AUTHORS.txt\nThe complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt\nCode distributed by Google as part of the polymer project is also\nsubject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt\n*/\n\n'use strict';\n\nimport CustomStyleInterface from '../src/custom-style-interface.js';\n// prettier-ignore\nimport {getComputedStyleValue, updateNativeProperties} from '../src/common-utils.js';\n// prettier-ignore\nimport {nativeCssVariables, nativeShadow, cssBuild, disableRuntime} from '../src/style-settings.js';\n\nconst customStyleInterface = new CustomStyleInterface();\n\nif (!window.ShadyCSS) {\n  window.ShadyCSS = {\n    /**\n     * @param {!HTMLTemplateElement} template\n     * @param {string} elementName\n     * @param {string=} elementExtends\n     */\n    prepareTemplate(template, elementName, elementExtends) {}, // eslint-disable-line @typescript-eslint/no-unused-vars\n\n    /**\n     * @param {!HTMLTemplateElement} template\n     * @param {string} elementName\n     */\n    prepareTemplateDom(template, elementName) {}, // eslint-disable-line @typescript-eslint/no-unused-vars\n\n    /**\n     * @param {!HTMLTemplateElement} template\n     * @param {string} elementName\n     * @param {string=} elementExtends\n     */\n    prepareTemplateStyles(template, elementName, elementExtends) {}, // eslint-disable-line @typescript-eslint/no-unused-vars\n\n    /**\n     * @param {Element} element\n     * @param {Object=} properties\n     */\n    styleSubtree(element, properties) {\n      customStyleInterface.processStyles();\n      updateNativeProperties(element, properties);\n    },\n\n    /**\n     * @param {Element} element\n     */\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    styleElement(element) {\n      customStyleInterface.processStyles();\n    },\n\n    /**\n     * @param {Object=} properties\n     */\n    styleDocument(properties) {\n      customStyleInterface.processStyles();\n      updateNativeProperties(document.body, properties);\n    },\n\n    /**\n     * @param {Element} element\n     * @param {string} property\n     * @return {string}\n     */\n    getComputedStyleValue(element, property) {\n      return getComputedStyleValue(element, property);\n    },\n\n    flushCustomStyles() {},\n    nativeCss: nativeCssVariables,\n    nativeShadow: nativeShadow,\n    cssBuild: cssBuild,\n    disableRuntime: disableRuntime,\n  };\n}\n\nwindow.ShadyCSS.CustomStyleInterface = customStyleInterface;\n","/**\n@license\nCopyright (c) 2017 The Polymer Project Authors. All rights reserved.\nThis code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt\nThe complete set of authors may be found at http://polymer.github.io/AUTHORS.txt\nThe complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt\nCode distributed by Google as part of the polymer project is also\nsubject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt\n*/\nimport '@webcomponents/shadycss/entrypoints/custom-style-interface.js';\n\nimport { cssFromModules } from '../utils/style-gather.js';\n\nconst attr = 'include';\n\nconst CustomStyleInterface = window.ShadyCSS.CustomStyleInterface;\n\n/**\n * Custom element for defining styles in the main document that can take\n * advantage of [shady DOM](https://github.com/webcomponents/shadycss) shims\n * for style encapsulation, custom properties, and custom mixins.\n *\n * - Document styles defined in a `<custom-style>` are shimmed to ensure they\n *   do not leak into local DOM when running on browsers without native\n *   Shadow DOM.\n * - Custom properties can be defined in a `<custom-style>`. Use the `html` selector\n *   to define custom properties that apply to all custom elements.\n * - Custom mixins can be defined in a `<custom-style>`, if you import the optional\n *   [apply shim](https://github.com/webcomponents/shadycss#about-applyshim)\n *   (`shadycss/apply-shim.html`).\n *\n * To use:\n *\n * - Import `custom-style.html`.\n * - Place a `<custom-style>` element in the main document, wrapping an inline `<style>` tag that\n *   contains the CSS rules you want to shim.\n *\n * For example:\n *\n * ```html\n * <!-- import apply shim--only required if using mixins -->\n * <link rel=\"import\" href=\"bower_components/shadycss/apply-shim.html\">\n * <!-- import custom-style element -->\n * <link rel=\"import\" href=\"bower_components/polymer/lib/elements/custom-style.html\">\n *\n * <custom-style>\n *   <style>\n *     html {\n *       --custom-color: blue;\n *       --custom-mixin: {\n *         font-weight: bold;\n *         color: red;\n *       };\n *     }\n *   </style>\n * </custom-style>\n * ```\n *\n * @customElement\n * @extends HTMLElement\n * @summary Custom element for defining styles in the main document that can\n *   take advantage of Polymer's style scoping and custom properties shims.\n */\nexport class CustomStyle extends HTMLElement {\n  constructor() {\n    super();\n    this._style = null;\n    CustomStyleInterface.addCustomStyle(this);\n  }\n  /**\n   * Returns the light-DOM `<style>` child this element wraps.  Upon first\n   * call any style modules referenced via the `include` attribute will be\n   * concatenated to this element's `<style>`.\n   *\n   * @export\n   * @return {HTMLStyleElement} This element's light-DOM `<style>`\n   */\n  getStyle() {\n    if (this._style) {\n      return this._style;\n    }\n    const style = /** @type {HTMLStyleElement} */(this.querySelector('style'));\n    if (!style) {\n      return null;\n    }\n    this._style = style;\n    const include = style.getAttribute(attr);\n    if (include) {\n      style.removeAttribute(attr);\n      /** @suppress {deprecated} */\n      style.textContent = cssFromModules(include) + style.textContent;\n    }\n    /*\n    HTML Imports styling the main document are deprecated in Chrome\n    https://crbug.com/523952\n\n    If this element is not in the main document, then it must be in an HTML Import document.\n    In that case, move the custom style to the main document.\n\n    The ordering of `<custom-style>` should stay the same as when loaded by HTML Imports, but there may be odd\n    cases of ordering w.r.t the main document styles.\n    */\n    if (this.ownerDocument !== window.document) {\n      window.document.head.appendChild(this);\n    }\n    return this._style;\n  }\n}\n\nwindow.customElements.define('custom-style', CustomStyle);\n","/**\n@license\nCopyright (c) 2017 The Polymer Project Authors. All rights reserved.\nThis code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt\nThe complete set of authors may be found at http://polymer.github.io/AUTHORS.txt\nThe complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt\nCode distributed by Google as part of the polymer project is also\nsubject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt\n*/\nimport { MutableData } from '../mixins/mutable-data.js';\n\nlet mutablePropertyChange;\n/** @suppress {missingProperties} */\n(() => {\n  mutablePropertyChange = MutableData._mutablePropertyChange;\n})();\n\n/**\n * Legacy element behavior to skip strict dirty-checking for objects and arrays,\n * (always consider them to be \"dirty\") for use on legacy API Polymer elements.\n *\n * By default, `Polymer.PropertyEffects` performs strict dirty checking on\n * objects, which means that any deep modifications to an object or array will\n * not be propagated unless \"immutable\" data patterns are used (i.e. all object\n * references from the root to the mutation were changed).\n *\n * Polymer also provides a proprietary data mutation and path notification API\n * (e.g. `notifyPath`, `set`, and array mutation API's) that allow efficient\n * mutation and notification of deep changes in an object graph to all elements\n * bound to the same object graph.\n *\n * In cases where neither immutable patterns nor the data mutation API can be\n * used, applying this mixin will cause Polymer to skip dirty checking for\n * objects and arrays (always consider them to be \"dirty\").  This allows a\n * user to make a deep modification to a bound object graph, and then either\n * simply re-set the object (e.g. `this.items = this.items`) or call `notifyPath`\n * (e.g. `this.notifyPath('items')`) to update the tree.  Note that all\n * elements that wish to be updated based on deep mutations must apply this\n * mixin or otherwise skip strict dirty checking for objects/arrays.\n * Specifically, any elements in the binding tree between the source of a\n * mutation and the consumption of it must apply this behavior or enable the\n * `Polymer.OptionalMutableDataBehavior`.\n *\n * In order to make the dirty check strategy configurable, see\n * `Polymer.OptionalMutableDataBehavior`.\n *\n * Note, the performance characteristics of propagating large object graphs\n * will be worse as opposed to using strict dirty checking with immutable\n * patterns or Polymer's path notification API.\n *\n * @polymerBehavior\n * @summary Behavior to skip strict dirty-checking for objects and\n *   arrays\n */\nexport const MutableDataBehavior = {\n\n  /**\n   * Overrides `Polymer.PropertyEffects` to provide option for skipping\n   * strict equality checking for Objects and Arrays.\n   *\n   * This method pulls the value to dirty check against from the `__dataTemp`\n   * cache (rather than the normal `__data` cache) for Objects.  Since the temp\n   * cache is cleared at the end of a turn, this implementation allows\n   * side-effects of deep object changes to be processed by re-setting the\n   * same object (using the temp cache as an in-turn backstop to prevent\n   * cycles due to 2-way notification).\n   *\n   * @param {string} property Property name\n   * @param {*} value New property value\n   * @param {*} old Previous property value\n   * @return {boolean} Whether the property should be considered a change\n   * @protected\n   * @override\n   */\n  _shouldPropertyChange(property, value, old) {\n    return mutablePropertyChange(this, property, value, old, true);\n  }\n};\n\n/**\n * Legacy element behavior to add the optional ability to skip strict\n * dirty-checking for objects and arrays (always consider them to be\n * \"dirty\") by setting a `mutable-data` attribute on an element instance.\n *\n * By default, `Polymer.PropertyEffects` performs strict dirty checking on\n * objects, which means that any deep modifications to an object or array will\n * not be propagated unless \"immutable\" data patterns are used (i.e. all object\n * references from the root to the mutation were changed).\n *\n * Polymer also provides a proprietary data mutation and path notification API\n * (e.g. `notifyPath`, `set`, and array mutation API's) that allow efficient\n * mutation and notification of deep changes in an object graph to all elements\n * bound to the same object graph.\n *\n * In cases where neither immutable patterns nor the data mutation API can be\n * used, applying this mixin will allow Polymer to skip dirty checking for\n * objects and arrays (always consider them to be \"dirty\").  This allows a\n * user to make a deep modification to a bound object graph, and then either\n * simply re-set the object (e.g. `this.items = this.items`) or call `notifyPath`\n * (e.g. `this.notifyPath('items')`) to update the tree.  Note that all\n * elements that wish to be updated based on deep mutations must apply this\n * mixin or otherwise skip strict dirty checking for objects/arrays.\n * Specifically, any elements in the binding tree between the source of a\n * mutation and the consumption of it must enable this behavior or apply the\n * `Polymer.OptionalMutableDataBehavior`.\n *\n * While this behavior adds the ability to forgo Object/Array dirty checking,\n * the `mutableData` flag defaults to false and must be set on the instance.\n *\n * Note, the performance characteristics of propagating large object graphs\n * will be worse by relying on `mutableData: true` as opposed to using\n * strict dirty checking with immutable patterns or Polymer's path notification\n * API.\n *\n * @polymerBehavior\n * @summary Behavior to optionally skip strict dirty-checking for objects and\n *   arrays\n */\nexport const OptionalMutableDataBehavior = {\n\n  properties: {\n    /**\n     * Instance-level flag for configuring the dirty-checking strategy\n     * for this element.  When true, Objects and Arrays will skip dirty\n     * checking, otherwise strict equality checking will be used.\n     */\n    mutableData: Boolean\n  },\n\n  /**\n   * Overrides `Polymer.PropertyEffects` to skip strict equality checking\n   * for Objects and Arrays.\n   *\n   * Pulls the value to dirty check against from the `__dataTemp` cache\n   * (rather than the normal `__data` cache) for Objects.  Since the temp\n   * cache is cleared at the end of a turn, this implementation allows\n   * side-effects of deep object changes to be processed by re-setting the\n   * same object (using the temp cache as an in-turn backstop to prevent\n   * cycles due to 2-way notification).\n   *\n   * @param {string} property Property name\n   * @param {*} value New property value\n   * @param {*} old Previous property value\n   * @return {boolean} Whether the property should be considered a change\n   * @protected\n   * @override\n   */\n  _shouldPropertyChange(property, value, old) {\n    return mutablePropertyChange(this, property, value, old, this.mutableData);\n  }\n};\n","/**\n@license\nCopyright (c) 2017 The Polymer Project Authors. All rights reserved.\nThis code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt\nThe complete set of authors may be found at http://polymer.github.io/AUTHORS.txt\nThe complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt\nCode distributed by Google as part of the polymer project is also\nsubject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt\n*/\n\nimport { LegacyElementMixin } from './lib/legacy/legacy-element-mixin.js';\nexport { Polymer } from  './lib/legacy/polymer-fn.js';\n/* template elements */\nimport './lib/legacy/templatizer-behavior.js';\nimport './lib/elements/dom-bind.js';\nimport './lib/elements/dom-repeat.js';\nimport './lib/elements/dom-if.js';\nimport './lib/elements/array-selector.js';\n/* custom-style */\nimport './lib/elements/custom-style.js';\n/* bc behaviors */\nimport './lib/legacy/mutable-data-behavior.js';\n/* import html-tag to export html */\nexport { html } from './lib/utils/html-tag.js';\n\n// bc\nexport const Base = LegacyElementMixin(HTMLElement).prototype;\n","/**\n@license\nCopyright (c) 2016 The Polymer Project Authors. All rights reserved.\nThis code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt\nThe complete set of authors may be found at http://polymer.github.io/AUTHORS.txt\nThe complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt\nCode distributed by Google as part of the polymer project is also\nsubject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt\n*/\nimport '@polymer/polymer/polymer-legacy.js';\n\nimport {Polymer} from '@polymer/polymer/lib/legacy/polymer-fn.js';\nimport {html} from '@polymer/polymer/lib/utils/html-tag.js';\nimport {resolveUrl} from '@polymer/polymer/lib/utils/resolve-url.js';\n\n/**\n`iron-image` is an element for displaying an image that provides useful sizing and\npreloading options not found on the standard `<img>` tag.\n\nThe `sizing` option allows the image to be either cropped (`cover`) or\nletterboxed (`contain`) to fill a fixed user-size placed on the element.\n\nThe `preload` option prevents the browser from rendering the image until the\nimage is fully loaded.  In the interim, either the element's CSS `background-color`\ncan be be used as the placeholder, or the `placeholder` property can be\nset to a URL (preferably a data-URI, for instant rendering) for an\nplaceholder image.\n\nThe `fade` option (only valid when `preload` is set) will cause the placeholder\nimage/color to be faded out once the image is rendered.\n\nExamples:\n\n  Basically identical to `<img src=\"...\">` tag:\n\n    <iron-image src=\"http://lorempixel.com/400/400\"></iron-image>\n\n  Will letterbox the image to fit:\n\n    <iron-image style=\"width:400px; height:400px;\" sizing=\"contain\"\n      src=\"http://lorempixel.com/600/400\"></iron-image>\n\n  Will crop the image to fit:\n\n    <iron-image style=\"width:400px; height:400px;\" sizing=\"cover\"\n      src=\"http://lorempixel.com/600/400\"></iron-image>\n\n  Will show light-gray background until the image loads:\n\n    <iron-image style=\"width:400px; height:400px; background-color: lightgray;\"\n      sizing=\"cover\" preload src=\"http://lorempixel.com/600/400\"></iron-image>\n\n  Will show a base-64 encoded placeholder image until the image loads:\n\n    <iron-image style=\"width:400px; height:400px;\" placeholder=\"data:image/gif;base64,...\"\n      sizing=\"cover\" preload src=\"http://lorempixel.com/600/400\"></iron-image>\n\n  Will fade the light-gray background out once the image is loaded:\n\n    <iron-image style=\"width:400px; height:400px; background-color: lightgray;\"\n      sizing=\"cover\" preload fade src=\"http://lorempixel.com/600/400\"></iron-image>\n\nCustom property | Description | Default\n----------------|-------------|----------\n`--iron-image-placeholder` | Mixin applied to #placeholder | `{}`\n`--iron-image-width` | Sets the width of the wrapped image | `auto`\n`--iron-image-height` | Sets the height of the wrapped image | `auto`\n\n@group Iron Elements\n@element iron-image\n@demo demo/index.html\n*/\nPolymer({\n  _template: html`\n    <style>\n      :host {\n        display: inline-block;\n        overflow: hidden;\n        position: relative;\n      }\n\n      #baseURIAnchor {\n        display: none;\n      }\n\n      #sizedImgDiv {\n        position: absolute;\n        top: 0px;\n        right: 0px;\n        bottom: 0px;\n        left: 0px;\n\n        display: none;\n      }\n\n      #img {\n        display: block;\n        width: var(--iron-image-width, auto);\n        height: var(--iron-image-height, auto);\n      }\n\n      :host([sizing]) #sizedImgDiv {\n        display: block;\n      }\n\n      :host([sizing]) #img {\n        display: none;\n      }\n\n      #placeholder {\n        position: absolute;\n        top: 0px;\n        right: 0px;\n        bottom: 0px;\n        left: 0px;\n\n        background-color: inherit;\n        opacity: 1;\n\n        @apply --iron-image-placeholder;\n      }\n\n      #placeholder.faded-out {\n        transition: opacity 0.5s linear;\n        opacity: 0;\n      }\n    </style>\n\n    <a id=\"baseURIAnchor\" href=\"#\"></a>\n    <div id=\"sizedImgDiv\" role=\"img\" hidden$=\"[[_computeImgDivHidden(sizing)]]\" aria-hidden$=\"[[_computeImgDivARIAHidden(alt)]]\" aria-label$=\"[[_computeImgDivARIALabel(alt, src)]]\"></div>\n    <img id=\"img\" alt$=\"[[alt]]\" hidden$=\"[[_computeImgHidden(sizing)]]\" crossorigin$=\"[[crossorigin]]\" on-load=\"_imgOnLoad\" on-error=\"_imgOnError\">\n    <div id=\"placeholder\" hidden$=\"[[_computePlaceholderHidden(preload, fade, loading, loaded)]]\" class$=\"[[_computePlaceholderClassName(preload, fade, loading, loaded)]]\"></div>\n`,\n\n  is: 'iron-image',\n\n  properties: {\n    /**\n     * The URL of an image.\n     */\n    src: {type: String, value: ''},\n\n    /**\n     * A short text alternative for the image.\n     */\n    alt: {type: String, value: null},\n\n    /**\n     * CORS enabled images support:\n     * https://developer.mozilla.org/en-US/docs/Web/HTML/CORS_enabled_image\n     */\n    crossorigin: {type: String, value: null},\n\n    /**\n     * When true, the image is prevented from loading and any placeholder is\n     * shown.  This may be useful when a binding to the src property is known to\n     * be invalid, to prevent 404 requests.\n     */\n    preventLoad: {type: Boolean, value: false},\n\n    /**\n     * Sets a sizing option for the image.  Valid values are `contain` (full\n     * aspect ratio of the image is contained within the element and\n     * letterboxed) or `cover` (image is cropped in order to fully cover the\n     * bounds of the element), or `null` (default: image takes natural size).\n     */\n    sizing: {type: String, value: null, reflectToAttribute: true},\n\n    /**\n     * When a sizing option is used (`cover` or `contain`), this determines\n     * how the image is aligned within the element bounds.\n     */\n    position: {type: String, value: 'center'},\n\n    /**\n     * When `true`, any change to the `src` property will cause the\n     * `placeholder` image to be shown until the new image has loaded.\n     */\n    preload: {type: Boolean, value: false},\n\n    /**\n     * This image will be used as a background/placeholder until the src image\n     * has loaded.  Use of a data-URI for placeholder is encouraged for instant\n     * rendering.\n     */\n    placeholder: {type: String, value: null, observer: '_placeholderChanged'},\n\n    /**\n     * When `preload` is true, setting `fade` to true will cause the image to\n     * fade into place.\n     */\n    fade: {type: Boolean, value: false},\n\n    /**\n     * Read-only value that is true when the image is loaded.\n     */\n    loaded: {notify: true, readOnly: true, type: Boolean, value: false},\n\n    /**\n     * Read-only value that tracks the loading state of the image when the\n     * `preload` option is used.\n     */\n    loading: {notify: true, readOnly: true, type: Boolean, value: false},\n\n    /**\n     * Read-only value that indicates that the last set `src` failed to load.\n     */\n    error: {notify: true, readOnly: true, type: Boolean, value: false},\n\n    /**\n     * Can be used to set the width of image (e.g. via binding); size may also\n     * be set via CSS.\n     */\n    width: {observer: '_widthChanged', type: Number, value: null},\n\n    /**\n     * Can be used to set the height of image (e.g. via binding); size may also\n     * be set via CSS.\n     *\n     * @attribute height\n     * @type number\n     * @default null\n     */\n    height: {observer: '_heightChanged', type: Number, value: null},\n  },\n\n  observers: [\n    '_transformChanged(sizing, position)',\n    '_loadStateObserver(src, preventLoad)'\n  ],\n\n  created: function() {\n    this._resolvedSrc = '';\n  },\n\n  _imgOnLoad: function() {\n    if (this.$.img.src !== this._resolveSrc(this.src)) {\n      return;\n    }\n\n    this._setLoading(false);\n    this._setLoaded(true);\n    this._setError(false);\n  },\n\n  _imgOnError: function() {\n    if (this.$.img.src !== this._resolveSrc(this.src)) {\n      return;\n    }\n\n    this.$.img.removeAttribute('src');\n    this.$.sizedImgDiv.style.backgroundImage = '';\n\n    this._setLoading(false);\n    this._setLoaded(false);\n    this._setError(true);\n  },\n\n  _computePlaceholderHidden: function() {\n    return !this.preload || (!this.fade && !this.loading && this.loaded);\n  },\n\n  _computePlaceholderClassName: function() {\n    return (this.preload && this.fade && !this.loading && this.loaded) ?\n        'faded-out' :\n        '';\n  },\n\n  _computeImgDivHidden: function() {\n    return !this.sizing;\n  },\n\n  _computeImgDivARIAHidden: function() {\n    return this.alt === '' ? 'true' : undefined;\n  },\n\n  _computeImgDivARIALabel: function() {\n    if (this.alt !== null) {\n      return this.alt;\n    }\n\n    // Polymer.ResolveUrl.resolveUrl will resolve '' relative to a URL x to\n    // that URL x, but '' is the default for src.\n    if (this.src === '') {\n      return '';\n    }\n\n    // NOTE: Use of `URL` was removed here because IE11 doesn't support\n    // constructing it. If this ends up being problematic, we should\n    // consider reverting and adding the URL polyfill as a dev dependency.\n    var resolved = this._resolveSrc(this.src);\n    // Remove query parts, get file name.\n    return resolved.replace(/[?|#].*/g, '').split('/').pop();\n  },\n\n  _computeImgHidden: function() {\n    return !!this.sizing;\n  },\n\n  _widthChanged: function() {\n    this.style.width = isNaN(this.width) ? this.width : this.width + 'px';\n  },\n\n  _heightChanged: function() {\n    this.style.height = isNaN(this.height) ? this.height : this.height + 'px';\n  },\n\n  _loadStateObserver: function(src, preventLoad) {\n    var newResolvedSrc = this._resolveSrc(src);\n    if (newResolvedSrc === this._resolvedSrc) {\n      return;\n    }\n\n    this._resolvedSrc = '';\n    this.$.img.removeAttribute('src');\n    this.$.sizedImgDiv.style.backgroundImage = '';\n\n    if (src === '' || preventLoad) {\n      this._setLoading(false);\n      this._setLoaded(false);\n      this._setError(false);\n    } else {\n      this._resolvedSrc = newResolvedSrc;\n      this.$.img.src = this._resolvedSrc;\n      this.$.sizedImgDiv.style.backgroundImage =\n          'url(\"' + this._resolvedSrc + '\")';\n\n      this._setLoading(true);\n      this._setLoaded(false);\n      this._setError(false);\n    }\n  },\n\n  _placeholderChanged: function() {\n    this.$.placeholder.style.backgroundImage =\n        this.placeholder ? 'url(\"' + this.placeholder + '\")' : '';\n  },\n\n  _transformChanged: function() {\n    var sizedImgDivStyle = this.$.sizedImgDiv.style;\n    var placeholderStyle = this.$.placeholder.style;\n\n    sizedImgDivStyle.backgroundSize = placeholderStyle.backgroundSize =\n        this.sizing;\n\n    sizedImgDivStyle.backgroundPosition = placeholderStyle.backgroundPosition =\n        this.sizing ? this.position : '';\n\n    sizedImgDivStyle.backgroundRepeat = placeholderStyle.backgroundRepeat =\n        this.sizing ? 'no-repeat' : '';\n  },\n\n  _resolveSrc: function(testSrc) {\n    var resolved = resolveUrl(testSrc, this.$.baseURIAnchor.href);\n    // NOTE: Use of `URL` was removed here because IE11 doesn't support\n    // constructing it. If this ends up being problematic, we should\n    // consider reverting and adding the URL polyfill as a dev dependency.\n    if (resolved.length >= 2 && resolved[0] === '/' && resolved[1] !== '/') {\n      // In IE location.origin might not work\n      // https://connect.microsoft.com/IE/feedback/details/1763802/location-origin-is-undefined-in-ie-11-on-windows-10-but-works-on-windows-7\n      resolved = (location.origin || location.protocol + '//' + location.host) +\n          resolved;\n    }\n    return resolved;\n  }\n});\n","import { html } from 'lit';\nimport { when } from 'lit/directives/when';\nimport { map } from 'lit/directives/map';\nimport { unsafeHTML } from 'lit/directives/unsafe-html';\nimport { component, useEffect, useState } from 'haunted';\nimport { useReplicant } from '../../../hooks/use-replicant';\n\nimport '@polymer/iron-image/iron-image';\n\nconst TwitterTweet = () => {\n  const [tweet] = useReplicant('tweet', {\n    avatarUrl: '',\n    name: '',\n    screenName: '',\n    createdAt: null,\n    id: null,\n    images: [],\n  });\n  const [profileUrl, setProfileUrl] = useState('');\n  const [tweetUrl, setTweetUrl] = useState('');\n  const [imageCount, setImageCount] = useState(0);\n  const {\n    screenName,\n    id,\n    name,\n    avatarUrl,\n    body,\n    images,\n  } = tweet;\n\n  useEffect(\n    () => setProfileUrl(`https://twitter.com/${screenName}`),\n    [screenName],\n  );\n\n  useEffect(\n    () => setTweetUrl(`${profileUrl}/status/${id}`),\n    [profileUrl, id],\n  );\n\n  useEffect(\n    () => {\n      setImageCount(images.length);\n    },\n    [images],\n  );\n\n  return html`\n    <style>\n    :host {\n      display: var(--layout-vertical_-_display);\n      flex-direction: var(--layout-vertical_-_flex-direction);\n      margin-bottom: 10px;\n      margin-top: 16px;\n      position: relative;\n    }\n\n    a {\n      text-decoration: none;\n      color: black;\n    }\n\n    a:hover {\n      color: #2b7bb9;\n    }\n\n    .tweet-wrapper {\n      position: relative;\n      height: 10.5em;\n    }\n\n    .tweet {\n      display: var(--layout-vertical_-_display);\n      flex-direction: var(--layout-vertical_-_flex-direction);\n      margin-left: 58px;\n    }\n\n    .tweet header {\n      display: var(--layout-vertical_-_display);\n      margin-bottom: 0.5em;\n      height: 1.25em;\n      justify-content: var(--layout-justified_-_justify-content);\n      align-items: var(--layout-center_-_align-items);\n    }\n\n    .avatar {\n      position: absolute;\n      top: 0;\n      left: 0;\n      width: 48px;\n      height: 48px;\n      border-radius: 3px;\n    }\n\n    .tweet-link {\n      flex-shrink: 0;\n    }\n\n    .profile-link {\n      word-break: break-word;\n      word-wrap: break-word;\n      display: block;\n      white-space: nowrap;\n      overflow: hidden;\n      text-overflow: ellipsis;\n      margin-right: 0.5em;\n    }\n\n    .name {\n      font-weight: bold;\n      font-size: 16px;\n    }\n\n    .screen-name {\n      font-size: 14px;\n    }\n\n    .body {\n      height: 7em;\n      overflow-y: auto;\n    }\n\n    .media {\n      position: absolute;\n      bottom: 0;\n      text-align: center;\n      width: 100%;\n      display: flex;\n      justify-content: center;\n      align-items: baseline;\n    }\n\n    .media a {\n      font-size: 16px;\n      display: inline-block;\n      margin-bottom: -6px;\n    }\n\n    .link {\n      color: #3FC1F1;\n    }\n\n    .link.orange {\n      color: #F47425;\n    }\n\n    img.emoji {\n      height: 1em;\n      width: 1em;\n      margin: 0 .05em 0 .1em;\n      vertical-align: -0.1em;\n    }\n  </style>\n\n  <div class=\"tweet-wrapper\">\n    <div class=\"tweet\">\n    ${when(name, () => html`\n      <header>\n        <a class=\"profile-link\" href=\"${profileUrl}\" target=\"_blank\">\n          <iron-image class=\"avatar\" src=\"${avatarUrl}\" sizing=\"contain\" fade></iron-image>\n          <span class=\"name\">${name}</span>\n          <span class=\"screen-name\">@${screenName}</span>\n        </a>\n        <a class=\"tweet-link\" href=\"${tweetUrl}\" target=\"_blank\">View tweet</a>\n      </header>\n\n      <div class=\"body\">${unsafeHTML(body)}</div>\n    `, () => html`\n      <p>No tweets to show.</p>\n    `)}\n    </div>\n  </div>\n\n  ${when(imageCount > 0, () => html`\n    <div class=\"media\">\n      <b>Tweet has ${imageCount} ${imageCount > 1 ? 'photos' : 'photo'}:&nbsp;</b>\n    ${map(images, (image, index) => html`\n      <a class=\"imageLink\" href=\"${image}\" target=\"_blank\">${index + 1}</a>\n      &nbsp;\n    `)}\n    </div>\n  `)}\n  `;\n};\n\nconst DashTwitterTweet = component(TwitterTweet);\n\ncustomElements.define('dash-twitter-tweet', DashTwitterTweet);\n","/******************************************************************************\r\nCopyright (c) Microsoft Corporation.\r\n\r\nPermission to use, copy, modify, and/or distribute this software for any\r\npurpose with or without fee is hereby granted.\r\n\r\nTHE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\r\nREGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\r\nAND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\r\nINDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\r\nLOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\r\nOTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\r\nPERFORMANCE OF THIS SOFTWARE.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    if (typeof b !== \"function\" && b !== null)\r\n        throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\r\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\r\n                t[p[i]] = s[p[i]];\r\n        }\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport var __createBinding = Object.create ? (function(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    var desc = Object.getOwnPropertyDescriptor(m, k);\r\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\r\n        desc = { enumerable: true, get: function() { return m[k]; } };\r\n    }\r\n    Object.defineProperty(o, k2, desc);\r\n}) : (function(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    o[k2] = m[k];\r\n});\r\n\r\nexport function __exportStar(m, o) {\r\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(o, p)) __createBinding(o, m, p);\r\n}\r\n\r\nexport function __values(o) {\r\n    var s = typeof Symbol === \"function\" && Symbol.iterator, m = s && o[s], i = 0;\r\n    if (m) return m.call(o);\r\n    if (o && typeof o.length === \"number\") return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n    throw new TypeError(s ? \"Object is not iterable.\" : \"Symbol.iterator is not defined.\");\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\n/** @deprecated */\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\n/** @deprecated */\r\nexport function __spreadArrays() {\r\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\r\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\r\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\r\n            r[k] = a[j];\r\n    return r;\r\n}\r\n\r\nexport function __spreadArray(to, from, pack) {\r\n    if (pack || arguments.length === 2) for (var i = 0, l = from.length, ar; i < l; i++) {\r\n        if (ar || !(i in from)) {\r\n            if (!ar) ar = Array.prototype.slice.call(from, 0, i);\r\n            ar[i] = from[i];\r\n        }\r\n    }\r\n    return to.concat(ar || Array.prototype.slice.call(from));\r\n}\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nvar __setModuleDefault = Object.create ? (function(o, v) {\r\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\r\n}) : function(o, v) {\r\n    o[\"default\"] = v;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\r\n    __setModuleDefault(result, mod);\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n\r\nexport function __classPrivateFieldGet(receiver, state, kind, f) {\r\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a getter\");\r\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot read private member from an object whose class did not declare it\");\r\n    return kind === \"m\" ? f : kind === \"a\" ? f.call(receiver) : f ? f.value : state.get(receiver);\r\n}\r\n\r\nexport function __classPrivateFieldSet(receiver, state, value, kind, f) {\r\n    if (kind === \"m\") throw new TypeError(\"Private method is not writable\");\r\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a setter\");\r\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot write private member to an object whose class did not declare it\");\r\n    return (kind === \"a\" ? f.call(receiver, value) : f ? f.value = value : state.set(receiver, value)), value;\r\n}\r\n\r\nexport function __classPrivateFieldIn(state, receiver) {\r\n    if (receiver === null || (typeof receiver !== \"object\" && typeof receiver !== \"function\")) throw new TypeError(\"Cannot use 'in' operator on non-object\");\r\n    return typeof state === \"function\" ? receiver === state : state.has(receiver);\r\n}\r\n","/**\n * @license\n * Copyright 2017 Google LLC\n * SPDX-License-Identifier: BSD-3-Clause\n */\n\n/*\n * IMPORTANT: For compatibility with tsickle and the Closure JS compiler, all\n * property decorators (but not class decorators) in this file that have\n * an @ExportDecoratedItems annotation must be defined as a regular function,\n * not an arrow function.\n */\nimport {Constructor, ClassDescriptor} from './base.js';\n\n/**\n * Allow for custom element classes with private constructors\n */\ntype CustomElementClass = Omit<typeof HTMLElement, 'new'>;\n\nconst legacyCustomElement = (tagName: string, clazz: CustomElementClass) => {\n  customElements.define(tagName, clazz as CustomElementConstructor);\n  // Cast as any because TS doesn't recognize the return type as being a\n  // subtype of the decorated class when clazz is typed as\n  // `Constructor<HTMLElement>` for some reason.\n  // `Constructor<HTMLElement>` is helpful to make sure the decorator is\n  // applied to elements however.\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  return clazz as any;\n};\n\nconst standardCustomElement = (\n  tagName: string,\n  descriptor: ClassDescriptor\n) => {\n  const {kind, elements} = descriptor;\n  return {\n    kind,\n    elements,\n    // This callback is called once the class is otherwise fully defined\n    finisher(clazz: Constructor<HTMLElement>) {\n      customElements.define(tagName, clazz);\n    },\n  };\n};\n\n/**\n * Class decorator factory that defines the decorated class as a custom element.\n *\n * ```js\n * @customElement('my-element')\n * class MyElement extends LitElement {\n *   render() {\n *     return html``;\n *   }\n * }\n * ```\n * @category Decorator\n * @param tagName The tag name of the custom element to define.\n */\nexport const customElement =\n  (tagName: string) =>\n  (classOrDescriptor: CustomElementClass | ClassDescriptor) =>\n    typeof classOrDescriptor === 'function'\n      ? legacyCustomElement(tagName, classOrDescriptor)\n      : standardCustomElement(tagName, classOrDescriptor as ClassDescriptor);\n","/**\n * @license\n * Copyright 2017 Google LLC\n * SPDX-License-Identifier: BSD-3-Clause\n */\n\n/*\n * IMPORTANT: For compatibility with tsickle and the Closure JS compiler, all\n * property decorators (but not class decorators) in this file that have\n * an @ExportDecoratedItems annotation must be defined as a regular function,\n * not an arrow function.\n */\nimport {PropertyDeclaration, ReactiveElement} from '../reactive-element.js';\nimport {ClassElement} from './base.js';\n\nconst standardProperty = (\n  options: PropertyDeclaration,\n  element: ClassElement\n) => {\n  // When decorating an accessor, pass it through and add property metadata.\n  // Note, the `hasOwnProperty` check in `createProperty` ensures we don't\n  // stomp over the user's accessor.\n  if (\n    element.kind === 'method' &&\n    element.descriptor &&\n    !('value' in element.descriptor)\n  ) {\n    return {\n      ...element,\n      finisher(clazz: typeof ReactiveElement) {\n        clazz.createProperty(element.key, options);\n      },\n    };\n  } else {\n    // createProperty() takes care of defining the property, but we still\n    // must return some kind of descriptor, so return a descriptor for an\n    // unused prototype field. The finisher calls createProperty().\n    return {\n      kind: 'field',\n      key: Symbol(),\n      placement: 'own',\n      descriptor: {},\n      // store the original key so subsequent decorators have access to it.\n      originalKey: element.key,\n      // When @babel/plugin-proposal-decorators implements initializers,\n      // do this instead of the initializer below. See:\n      // https://github.com/babel/babel/issues/9260 extras: [\n      //   {\n      //     kind: 'initializer',\n      //     placement: 'own',\n      //     initializer: descriptor.initializer,\n      //   }\n      // ],\n      initializer(this: {[key: string]: unknown}) {\n        if (typeof element.initializer === 'function') {\n          this[element.key as string] = element.initializer.call(this);\n        }\n      },\n      finisher(clazz: typeof ReactiveElement) {\n        clazz.createProperty(element.key, options);\n      },\n    };\n  }\n};\n\nconst legacyProperty = (\n  options: PropertyDeclaration,\n  proto: Object,\n  name: PropertyKey\n) => {\n  (proto.constructor as typeof ReactiveElement).createProperty(name, options);\n};\n\n/**\n * A property decorator which creates a reactive property that reflects a\n * corresponding attribute value. When a decorated property is set\n * the element will update and render. A {@linkcode PropertyDeclaration} may\n * optionally be supplied to configure property features.\n *\n * This decorator should only be used for public fields. As public fields,\n * properties should be considered as primarily settable by element users,\n * either via attribute or the property itself.\n *\n * Generally, properties that are changed by the element should be private or\n * protected fields and should use the {@linkcode state} decorator.\n *\n * However, sometimes element code does need to set a public property. This\n * should typically only be done in response to user interaction, and an event\n * should be fired informing the user; for example, a checkbox sets its\n * `checked` property when clicked and fires a `changed` event. Mutating public\n * properties should typically not be done for non-primitive (object or array)\n * properties. In other cases when an element needs to manage state, a private\n * property decorated via the {@linkcode state} decorator should be used. When\n * needed, state properties can be initialized via public properties to\n * facilitate complex interactions.\n *\n * ```ts\n * class MyElement {\n *   @property({ type: Boolean })\n *   clicked = false;\n * }\n * ```\n * @category Decorator\n * @ExportDecoratedItems\n */\nexport function property(options?: PropertyDeclaration) {\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  return (protoOrDescriptor: Object | ClassElement, name?: PropertyKey): any =>\n    name !== undefined\n      ? legacyProperty(options!, protoOrDescriptor as Object, name)\n      : standardProperty(options!, protoOrDescriptor as ClassElement);\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n * SPDX-License-Identifier: BSD-3-Clause\n */\n\n/*\n * IMPORTANT: For compatibility with tsickle and the Closure JS compiler, all\n * property decorators (but not class decorators) in this file that have\n * an @ExportDecoratedItems annotation must be defined as a regular function,\n * not an arrow function.\n */\n\nimport {property} from './property.js';\n\nexport interface InternalPropertyDeclaration<Type = unknown> {\n  /**\n   * A function that indicates if a property should be considered changed when\n   * it is set. The function should take the `newValue` and `oldValue` and\n   * return `true` if an update should be requested.\n   */\n  hasChanged?(value: Type, oldValue: Type): boolean;\n}\n\n/**\n * Declares a private or protected reactive property that still triggers\n * updates to the element when it changes. It does not reflect from the\n * corresponding attribute.\n *\n * Properties declared this way must not be used from HTML or HTML templating\n * systems, they're solely for properties internal to the element. These\n * properties may be renamed by optimization tools like closure compiler.\n * @category Decorator\n */\nexport function state(options?: InternalPropertyDeclaration) {\n  return property({\n    ...options,\n    state: true,\n  });\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n * SPDX-License-Identifier: BSD-3-Clause\n */\n\nimport {ReactiveElement} from '../reactive-element.js';\n\nexport type Constructor<T> = {\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  new (...args: any[]): T;\n};\n\n// From the TC39 Decorators proposal\nexport interface ClassDescriptor {\n  kind: 'class';\n  elements: ClassElement[];\n  finisher?: <T>(clazz: Constructor<T>) => void | Constructor<T>;\n}\n\n// From the TC39 Decorators proposal\nexport interface ClassElement {\n  kind: 'field' | 'method';\n  key: PropertyKey;\n  placement: 'static' | 'prototype' | 'own';\n  initializer?: Function;\n  extras?: ClassElement[];\n  finisher?: <T>(clazz: Constructor<T>) => void | Constructor<T>;\n  descriptor?: PropertyDescriptor;\n}\n\nexport const legacyPrototypeMethod = (\n  descriptor: PropertyDescriptor,\n  proto: Object,\n  name: PropertyKey\n) => {\n  Object.defineProperty(proto, name, descriptor);\n};\n\nexport const standardPrototypeMethod = (\n  descriptor: PropertyDescriptor,\n  element: ClassElement\n) => ({\n  kind: 'method',\n  placement: 'prototype',\n  key: element.key,\n  descriptor,\n});\n\n/**\n * Helper for decorating a property that is compatible with both TypeScript\n * and Babel decorators. The optional `finisher` can be used to perform work on\n * the class. The optional `descriptor` should return a PropertyDescriptor\n * to install for the given property.\n *\n * @param finisher {function} Optional finisher method; receives the element\n * constructor and property key as arguments and has no return value.\n * @param descriptor {function} Optional descriptor method; receives the\n * property key as an argument and returns a property descriptor to define for\n * the given property.\n * @returns {ClassElement|void}\n */\nexport const decorateProperty =\n  ({\n    finisher,\n    descriptor,\n  }: {\n    finisher?:\n      | ((ctor: typeof ReactiveElement, property: PropertyKey) => void)\n      | null;\n    descriptor?: (property: PropertyKey) => PropertyDescriptor;\n  }) =>\n  (\n    protoOrDescriptor: ReactiveElement | ClassElement,\n    name?: PropertyKey\n    // Note TypeScript requires the return type to be `void|any`\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  ): void | any => {\n    // TypeScript / Babel legacy mode\n    if (name !== undefined) {\n      const ctor = (protoOrDescriptor as ReactiveElement)\n        .constructor as typeof ReactiveElement;\n      if (descriptor !== undefined) {\n        Object.defineProperty(protoOrDescriptor, name, descriptor(name));\n      }\n      finisher?.(ctor, name!);\n      // Babel standard mode\n    } else {\n      // Note, the @property decorator saves `key` as `originalKey`\n      // so try to use it here.\n      const key =\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        (protoOrDescriptor as any).originalKey ??\n        (protoOrDescriptor as ClassElement).key;\n      const info: ClassElement =\n        descriptor != undefined\n          ? {\n              kind: 'method',\n              placement: 'prototype',\n              key,\n              descriptor: descriptor((protoOrDescriptor as ClassElement).key),\n            }\n          : {...(protoOrDescriptor as ClassElement), key};\n      if (finisher != undefined) {\n        info.finisher = function <ReactiveElement>(\n          ctor: Constructor<ReactiveElement>\n        ) {\n          finisher(ctor as unknown as typeof ReactiveElement, key);\n        };\n      }\n      return info;\n    }\n  };\n","/**\n * @license\n * Copyright 2017 Google LLC\n * SPDX-License-Identifier: BSD-3-Clause\n */\n\n/*\n * IMPORTANT: For compatibility with tsickle and the Closure JS compiler, all\n * property decorators (but not class decorators) in this file that have\n * an @ExportDecoratedItems annotation must be defined as a regular function,\n * not an arrow function.\n */\n\nimport {ReactiveElement} from '../reactive-element.js';\nimport {decorateProperty} from './base.js';\n\n/**\n * A property decorator that converts a class property into a getter that\n * executes a querySelector on the element's renderRoot.\n *\n * @param selector A DOMString containing one or more selectors to match.\n * @param cache An optional boolean which when true performs the DOM query only\n *     once and caches the result.\n *\n * See: https://developer.mozilla.org/en-US/docs/Web/API/Document/querySelector\n *\n * ```ts\n * class MyElement {\n *   @query('#first')\n *   first: HTMLDivElement;\n *\n *   render() {\n *     return html`\n *       <div id=\"first\"></div>\n *       <div id=\"second\"></div>\n *     `;\n *   }\n * }\n * ```\n * @category Decorator\n */\nexport function query(selector: string, cache?: boolean) {\n  return decorateProperty({\n    descriptor: (name: PropertyKey) => {\n      const descriptor = {\n        get(this: ReactiveElement) {\n          return this.renderRoot?.querySelector(selector) ?? null;\n        },\n        enumerable: true,\n        configurable: true,\n      };\n      if (cache) {\n        const key = typeof name === 'symbol' ? Symbol() : `__${name}`;\n        descriptor.get = function (this: ReactiveElement) {\n          if (\n            (this as unknown as {[key: string]: Element | null})[\n              key as string\n            ] === undefined\n          ) {\n            (this as unknown as {[key: string]: Element | null})[\n              key as string\n            ] = this.renderRoot?.querySelector(selector) ?? null;\n          }\n          return (this as unknown as {[key: string]: Element | null})[\n            key as string\n          ];\n        };\n      }\n      return descriptor;\n    },\n  });\n}\n","/**\n * @license\n * Copyright 2021 Google LLC\n * SPDX-License-Identifier: BSD-3-Clause\n */\n\n/*\n * IMPORTANT: For compatibility with tsickle and the Closure JS compiler, all\n * property decorators (but not class decorators) in this file that have\n * an @ExportDecoratedItems annotation must be defined as a regular function,\n * not an arrow function.\n */\n\nimport {decorateProperty} from './base.js';\n\nimport type {ReactiveElement} from '../reactive-element.js';\nimport type {QueryAssignedNodesOptions} from './query-assigned-nodes.js';\n\nconst NODE_MODE = false;\nconst global = NODE_MODE ? globalThis : window;\n\n/**\n * A tiny module scoped polyfill for HTMLSlotElement.assignedElements.\n */\nconst slotAssignedElements =\n  global.HTMLSlotElement?.prototype.assignedElements != null\n    ? (slot: HTMLSlotElement, opts?: AssignedNodesOptions) =>\n        slot.assignedElements(opts)\n    : (slot: HTMLSlotElement, opts?: AssignedNodesOptions) =>\n        slot\n          .assignedNodes(opts)\n          .filter(\n            (node): node is Element => node.nodeType === Node.ELEMENT_NODE\n          );\n\n/**\n * Options for the {@linkcode queryAssignedElements} decorator. Extends the\n * options that can be passed into\n * [HTMLSlotElement.assignedElements](https://developer.mozilla.org/en-US/docs/Web/API/HTMLSlotElement/assignedElements).\n */\nexport interface QueryAssignedElementsOptions\n  extends QueryAssignedNodesOptions {\n  /**\n   * CSS selector used to filter the elements returned. For example, a selector\n   * of `\".item\"` will only include elements with the `item` class.\n   */\n  selector?: string;\n}\n\n/**\n * A property decorator that converts a class property into a getter that\n * returns the `assignedElements` of the given `slot`. Provides a declarative\n * way to use\n * [`HTMLSlotElement.assignedElements`](https://developer.mozilla.org/en-US/docs/Web/API/HTMLSlotElement/assignedElements).\n *\n * Can be passed an optional {@linkcode QueryAssignedElementsOptions} object.\n *\n * Example usage:\n * ```ts\n * class MyElement {\n *   @queryAssignedElements({ slot: 'list' })\n *   listItems!: Array<HTMLElement>;\n *   @queryAssignedElements()\n *   unnamedSlotEls!: Array<HTMLElement>;\n *\n *   render() {\n *     return html`\n *       <slot name=\"list\"></slot>\n *       <slot></slot>\n *     `;\n *   }\n * }\n * ```\n *\n * Note, the type of this property should be annotated as `Array<HTMLElement>`.\n *\n * @category Decorator\n */\nexport function queryAssignedElements(options?: QueryAssignedElementsOptions) {\n  const {slot, selector} = options ?? {};\n  return decorateProperty({\n    descriptor: (_name: PropertyKey) => ({\n      get(this: ReactiveElement) {\n        const slotSelector = `slot${slot ? `[name=${slot}]` : ':not([name])'}`;\n        const slotEl =\n          this.renderRoot?.querySelector<HTMLSlotElement>(slotSelector);\n        const elements =\n          slotEl != null ? slotAssignedElements(slotEl, options) : [];\n        if (selector) {\n          return elements.filter((node) => node.matches(selector));\n        }\n        return elements;\n      },\n      enumerable: true,\n      configurable: true,\n    }),\n  });\n}\n","/**\n * @license\n * Copyright 2021 Google LLC\n * SPDX-LIcense-Identifier: Apache-2.0\n */\nimport {css} from 'lit';\nexport const styles = css`:host{font-family:var(--mdc-icon-font, \"Material Icons\");font-weight:normal;font-style:normal;font-size:var(--mdc-icon-size, 24px);line-height:1;letter-spacing:normal;text-transform:none;display:inline-block;white-space:nowrap;word-wrap:normal;direction:ltr;-webkit-font-smoothing:antialiased;text-rendering:optimizeLegibility;-moz-osx-font-smoothing:grayscale;font-feature-settings:\"liga\"}`;\n","/**\n * @license\n * Copyright 2018 Google LLC\n * SPDX-License-Identifier: Apache-2.0\n */\n\n// Style preference for leading underscores.\n// tslint:disable:strip-private-property-underscore\n\nimport {html, LitElement, TemplateResult} from 'lit';\nimport {customElement} from 'lit/decorators.js';\n\nimport {styles} from './mwc-icon-host.css.js';\n\n/** @soyCompatible */\n@customElement('mwc-icon')\nexport class Icon extends LitElement {\n  static override styles = [styles];\n\n  /** @soyTemplate */\n  protected override render(): TemplateResult {\n    return html`<span><slot></slot></span>`;\n  }\n}\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    'mwc-icon': Icon;\n  }\n}\n",null,"/**\n * @license\n * Copyright 2018 Google LLC\n * SPDX-License-Identifier: Apache-2.0\n */\n\n// Style preference for leading underscores.\n// tslint:disable:strip-private-property-underscore\n\n/**\n * Determines whether a node is an element.\n *\n * @param node Node to check\n */\nexport const isNodeElement = (node: Node): node is Element => {\n  return node.nodeType === Node.ELEMENT_NODE;\n};\n\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nexport type Constructor<T> = new (...args: any[]) => T;\n\nexport function addHasRemoveClass(element: HTMLElement) {\n  return {\n    addClass: (className: string) => {\n      element.classList.add(className);\n    },\n    removeClass: (className: string) => {\n      element.classList.remove(className);\n    },\n    hasClass: (className: string) => element.classList.contains(className),\n  };\n}\n\nlet supportsPassive = false;\nconst fn = () => { /* empty listener */ };\nconst optionsBlock: AddEventListenerOptions = {\n  get passive() {\n    supportsPassive = true;\n    return false;\n  }\n};\ndocument.addEventListener('x', fn, optionsBlock);\ndocument.removeEventListener('x', fn);\n/**\n * Do event listeners suport the `passive` option?\n */\nexport const supportsPassiveEventListener = supportsPassive;\n\nexport const deepActiveElementPath = (doc = window.document): Element[] => {\n  let activeElement = doc.activeElement;\n  const path: Element[] = [];\n\n  if (!activeElement) {\n    return path;\n  }\n\n  while (activeElement) {\n    path.push(activeElement);\n    if (activeElement.shadowRoot) {\n      activeElement = activeElement.shadowRoot.activeElement;\n    } else {\n      break;\n    }\n  }\n\n  return path;\n};\n\nexport const doesElementContainFocus = (element: HTMLElement): boolean => {\n  const activePath = deepActiveElementPath();\n\n  if (!activePath.length) {\n    return false;\n  }\n\n  const deepActiveElement = activePath[activePath.length - 1];\n  const focusEv =\n      new Event('check-if-focused', {bubbles: true, composed: true});\n  let composedPath: EventTarget[] = [];\n  const listener = (ev: Event) => {\n    composedPath = ev.composedPath();\n  };\n\n  document.body.addEventListener('check-if-focused', listener);\n  deepActiveElement.dispatchEvent(focusEv);\n  document.body.removeEventListener('check-if-focused', listener);\n\n  return composedPath.indexOf(element) !== -1;\n};\n\nexport interface RippleInterface {\n  startPress: (e?: Event) => void;\n  endPress: () => void;\n  startFocus: () => void;\n  endFocus: () => void;\n  startHover: () => void;\n  endHover: () => void;\n}\n","/**\n * @license\n * Copyright 2018 Google LLC\n * SPDX-License-Identifier: Apache-2.0\n */\n\n// Style preference for leading underscores.\n// tslint:disable:strip-private-property-underscore\n\n\nimport {MDCFoundation} from '@material/base/foundation.js';\nimport {LitElement} from 'lit';\n\nimport {Constructor} from './utils.js';\n\nexport {CustomEventListener, EventType, SpecificEventListener} from '@material/base/types.js';\nexport {addHasRemoveClass} from './utils.js';\n\n/** @soyCompatible */\nexport abstract class BaseElement extends LitElement {\n  /**\n   * Root element for MDC Foundation usage.\n   *\n   * Define in your component with the `@query` decorator\n   */\n  protected abstract mdcRoot: HTMLElement;\n\n  /**\n   * Return the foundation class for this component\n   */\n  protected abstract readonly mdcFoundationClass?: Constructor<MDCFoundation>;\n\n  /**\n   * An instance of the MDC Foundation class to attach to the root element\n   */\n  protected abstract mdcFoundation?: MDCFoundation;\n\n  /**\n   * Create the adapter for the `mdcFoundation`.\n   *\n   * Override and return an object with the Adapter's functions implemented:\n   *\n   *    {\n   *      addClass: () => {},\n   *      removeClass: () => {},\n   *      ...\n   *    }\n   */\n  protected abstract createAdapter(): unknown;\n\n  override click() {\n    if (this.mdcRoot) {\n      this.mdcRoot.focus();\n      this.mdcRoot.click();\n      return;\n    }\n\n    super.click();\n  }\n\n  /**\n   * Create and attach the MDC Foundation to the instance\n   */\n  protected createFoundation() {\n    if (this.mdcFoundation !== undefined) {\n      this.mdcFoundation.destroy();\n    }\n    if (this.mdcFoundationClass) {\n      this.mdcFoundation = new this.mdcFoundationClass(this.createAdapter());\n      this.mdcFoundation.init();\n    }\n  }\n\n  protected override firstUpdated() {\n    this.createFoundation();\n  }\n}\n",null,null,null,null,"/**\n * @license\n * Copyright 2018 Google LLC\n * SPDX-License-Identifier: BSD-3-Clause\n */\n\nimport {AttributePart, noChange} from '../lit-html.js';\nimport {\n  directive,\n  Directive,\n  DirectiveParameters,\n  PartInfo,\n  PartType,\n} from '../directive.js';\n\n/**\n * A key-value set of CSS properties and values.\n *\n * The key should be either a valid CSS property name string, like\n * `'background-color'`, or a valid JavaScript camel case property name\n * for CSSStyleDeclaration like `backgroundColor`.\n */\nexport interface StyleInfo {\n  [name: string]: string | undefined | null;\n}\n\nclass StyleMapDirective extends Directive {\n  _previousStyleProperties?: Set<string>;\n\n  constructor(partInfo: PartInfo) {\n    super(partInfo);\n    if (\n      partInfo.type !== PartType.ATTRIBUTE ||\n      partInfo.name !== 'style' ||\n      (partInfo.strings?.length as number) > 2\n    ) {\n      throw new Error(\n        'The `styleMap` directive must be used in the `style` attribute ' +\n          'and must be the only part in the attribute.'\n      );\n    }\n  }\n\n  render(styleInfo: Readonly<StyleInfo>) {\n    return Object.keys(styleInfo).reduce((style, prop) => {\n      const value = styleInfo[prop];\n      if (value == null) {\n        return style;\n      }\n      // Convert property names from camel-case to dash-case, i.e.:\n      //  `backgroundColor` -> `background-color`\n      // Vendor-prefixed names need an extra `-` appended to front:\n      //  `webkitAppearance` -> `-webkit-appearance`\n      // Exception is any property name containing a dash, including\n      // custom properties; we assume these are already dash-cased i.e.:\n      //  `--my-button-color` --> `--my-button-color`\n      prop = prop\n        .replace(/(?:^(webkit|moz|ms|o)|)(?=[A-Z])/g, '-$&')\n        .toLowerCase();\n      return style + `${prop}:${value};`;\n    }, '');\n  }\n\n  override update(part: AttributePart, [styleInfo]: DirectiveParameters<this>) {\n    const {style} = part.element as HTMLElement;\n\n    if (this._previousStyleProperties === undefined) {\n      this._previousStyleProperties = new Set();\n      for (const name in styleInfo) {\n        this._previousStyleProperties.add(name);\n      }\n      return this.render(styleInfo);\n    }\n\n    // Remove old properties that no longer exist in styleInfo\n    // We use forEach() instead of for-of so that re don't require down-level\n    // iteration.\n    this._previousStyleProperties!.forEach((name) => {\n      // If the name isn't in styleInfo or it's null/undefined\n      if (styleInfo[name] == null) {\n        this._previousStyleProperties!.delete(name);\n        if (name.includes('-')) {\n          style.removeProperty(name);\n        } else {\n          // Note reset using empty string (vs null) as IE11 does not always\n          // reset via null (https://developer.mozilla.org/en-US/docs/Web/API/ElementCSSInlineStyle/style#setting_styles)\n          // eslint-disable-next-line @typescript-eslint/no-explicit-any\n          (style as any)[name] = '';\n        }\n      }\n    });\n\n    // Add or update properties\n    for (const name in styleInfo) {\n      const value = styleInfo[name];\n      if (value != null) {\n        this._previousStyleProperties.add(name);\n        if (name.includes('-')) {\n          style.setProperty(name, value);\n        } else {\n          // eslint-disable-next-line @typescript-eslint/no-explicit-any\n          (style as any)[name] = value;\n        }\n      }\n    }\n    return noChange;\n  }\n}\n\n/**\n * A directive that applies CSS properties to an element.\n *\n * `styleMap` can only be used in the `style` attribute and must be the only\n * expression in the attribute. It takes the property names in the\n * {@link StyleInfo styleInfo} object and adds the property values as CSS\n * properties. Property names with dashes (`-`) are assumed to be valid CSS\n * property names and set on the element's style object using `setProperty()`.\n * Names without dashes are assumed to be camelCased JavaScript property names\n * and set on the element's style object using property assignment, allowing the\n * style object to translate JavaScript-style names to CSS property names.\n *\n * For example `styleMap({backgroundColor: 'red', 'border-top': '5px', '--size':\n * '0'})` sets the `background-color`, `border-top` and `--size` properties.\n *\n * @param styleInfo\n * @see {@link https://lit.dev/docs/templates/directives/#stylemap styleMap code samples on Lit.dev}\n */\nexport const styleMap = directive(StyleMapDirective);\n\n/**\n * The type of the class that powers this directive. Necessary for naming the\n * directive's return type.\n */\nexport type {StyleMapDirective};\n","/**\n * @license\n * Copyright 2018 Google LLC\n * SPDX-License-Identifier: Apache-2.0\n */\n\n// Style preference for leading underscores.\n// tslint:disable:strip-private-property-underscore\n\nimport {matches} from '@material/dom/ponyfill.js';\nimport {BaseElement} from '@material/mwc-base/base-element.js';\nimport {RippleInterface} from '@material/mwc-base/utils.js';\nimport {MDCRippleAdapter} from '@material/ripple/adapter.js';\nimport MDCRippleFoundation from '@material/ripple/foundation.js';\nimport {html, PropertyValues, TemplateResult} from 'lit';\nimport {property, query, state} from 'lit/decorators.js';\nimport {classMap} from 'lit/directives/class-map.js';\nimport {styleMap} from 'lit/directives/style-map.js';\n\n/** @soyCompatible */\nexport class RippleBase extends BaseElement implements RippleInterface {\n  @query('.mdc-ripple-surface') mdcRoot!: HTMLElement;\n\n  @property({type: Boolean}) primary = false;\n\n  @property({type: Boolean}) accent = false;\n\n  @property({type: Boolean}) unbounded = false;\n\n  @property({type: Boolean}) disabled = false;\n\n  @property({type: Boolean}) activated = false;\n\n  @property({type: Boolean}) selected = false;\n\n  @property({type: Boolean}) internalUseStateLayerCustomProperties = false;\n\n  @state() protected hovering = false;\n\n  @state() protected bgFocused = false;\n\n  @state() protected fgActivation = false;\n\n  @state() protected fgDeactivation = false;\n\n  @state() protected fgScale = '';\n\n  @state() protected fgSize = '';\n\n  @state() protected translateStart = '';\n\n  @state() protected translateEnd = '';\n\n  @state() protected leftPos = '';\n\n  @state() protected topPos = '';\n\n  protected mdcFoundationClass = MDCRippleFoundation;\n\n  protected mdcFoundation!: MDCRippleFoundation;\n\n  get isActive(): any {\n    return matches(this.parentElement || this, ':active');\n  }\n\n  createAdapter(): MDCRippleAdapter {\n    return {\n      browserSupportsCssVars: () => true,\n      isUnbounded: () => this.unbounded,\n      isSurfaceActive: () => this.isActive,\n      isSurfaceDisabled: () => this.disabled,\n      addClass: (className: string) => {\n        switch (className) {\n          case 'mdc-ripple-upgraded--background-focused':\n            this.bgFocused = true;\n            break;\n          case 'mdc-ripple-upgraded--foreground-activation':\n            this.fgActivation = true;\n            break;\n          case 'mdc-ripple-upgraded--foreground-deactivation':\n            this.fgDeactivation = true;\n            break;\n          default:\n            break;\n        }\n      },\n      removeClass: (className: string) => {\n        switch (className) {\n          case 'mdc-ripple-upgraded--background-focused':\n            this.bgFocused = false;\n            break;\n          case 'mdc-ripple-upgraded--foreground-activation':\n            this.fgActivation = false;\n            break;\n          case 'mdc-ripple-upgraded--foreground-deactivation':\n            this.fgDeactivation = false;\n            break;\n          default:\n            break;\n        }\n      },\n      containsEventTarget: () => true,\n      registerInteractionHandler: () => undefined,\n      deregisterInteractionHandler: () => undefined,\n      registerDocumentInteractionHandler: () => undefined,\n      deregisterDocumentInteractionHandler: () => undefined,\n      registerResizeHandler: () => undefined,\n      deregisterResizeHandler: () => undefined,\n      updateCssVariable: (varName: string, value: string) => {\n        switch (varName) {\n          case '--mdc-ripple-fg-scale':\n            this.fgScale = value;\n            break;\n          case '--mdc-ripple-fg-size':\n            this.fgSize = value;\n            break;\n          case '--mdc-ripple-fg-translate-end':\n            this.translateEnd = value;\n            break;\n          case '--mdc-ripple-fg-translate-start':\n            this.translateStart = value;\n            break;\n          case '--mdc-ripple-left':\n            this.leftPos = value;\n            break;\n          case '--mdc-ripple-top':\n            this.topPos = value;\n            break;\n          default:\n            break;\n        }\n      },\n      computeBoundingRect: () =>\n          (this.parentElement || this).getBoundingClientRect(),\n      getWindowPageOffset: () =>\n          ({x: window.pageXOffset, y: window.pageYOffset}),\n    };\n  }\n\n  startPress(ev?: Event) {\n    this.waitForFoundation(() => {\n      this.mdcFoundation.activate(ev);\n    });\n  }\n\n  endPress() {\n    this.waitForFoundation(() => {\n      this.mdcFoundation.deactivate();\n    });\n  }\n\n  startFocus() {\n    this.waitForFoundation(() => {\n      this.mdcFoundation.handleFocus();\n    });\n  }\n\n  endFocus() {\n    this.waitForFoundation(() => {\n      this.mdcFoundation.handleBlur();\n    });\n  }\n\n  startHover() {\n    this.hovering = true;\n  }\n\n  endHover() {\n    this.hovering = false;\n  }\n\n  /**\n   * Wait for the MDCFoundation to be created by `firstUpdated`\n   */\n  protected waitForFoundation(fn: () => void) {\n    if (this.mdcFoundation) {\n      fn();\n    } else {\n      this.updateComplete.then(fn);\n    }\n  }\n\n  protected override update(changedProperties: PropertyValues<this>) {\n    if (changedProperties.has('disabled')) {\n      // stop hovering when ripple is disabled to prevent a stuck \"hover\" state\n      // When re-enabled, the outer component will get a `mouseenter` event on\n      // the first movement, which will call `startHover()`\n      if (this.disabled) {\n        this.endHover();\n      }\n    }\n    super.update(changedProperties);\n  }\n\n  /** @soyTemplate */\n  protected override render(): TemplateResult {\n    const shouldActivateInPrimary =\n        this.activated && (this.primary || !this.accent);\n    const shouldSelectInPrimary =\n        this.selected && (this.primary || !this.accent);\n\n    /** @classMap */\n    const classes = {\n      'mdc-ripple-surface--accent': this.accent,\n      'mdc-ripple-surface--primary--activated': shouldActivateInPrimary,\n      'mdc-ripple-surface--accent--activated': this.accent && this.activated,\n      'mdc-ripple-surface--primary--selected': shouldSelectInPrimary,\n      'mdc-ripple-surface--accent--selected': this.accent && this.selected,\n      'mdc-ripple-surface--disabled': this.disabled,\n      'mdc-ripple-surface--hover': this.hovering,\n      'mdc-ripple-surface--primary': this.primary,\n      'mdc-ripple-surface--selected': this.selected,\n      'mdc-ripple-upgraded--background-focused': this.bgFocused,\n      'mdc-ripple-upgraded--foreground-activation': this.fgActivation,\n      'mdc-ripple-upgraded--foreground-deactivation': this.fgDeactivation,\n      'mdc-ripple-upgraded--unbounded': this.unbounded,\n      'mdc-ripple-surface--internal-use-state-layer-custom-properties':\n          this.internalUseStateLayerCustomProperties,\n    };\n    return html`\n        <div class=\"mdc-ripple-surface mdc-ripple-upgraded ${classMap(classes)}\"\n          style=\"${styleMap({\n      '--mdc-ripple-fg-scale': this.fgScale,\n      '--mdc-ripple-fg-size': this.fgSize,\n      '--mdc-ripple-fg-translate-end': this.translateEnd,\n      '--mdc-ripple-fg-translate-start': this.translateStart,\n      '--mdc-ripple-left': this.leftPos,\n      '--mdc-ripple-top': this.topPos,\n    })}\"></div>`;\n  }\n}\n","/**\n * @license\n * Copyright 2021 Google LLC\n * SPDX-LIcense-Identifier: Apache-2.0\n */\nimport {css} from 'lit';\nexport const styles = css`.mdc-ripple-surface{--mdc-ripple-fg-size: 0;--mdc-ripple-left: 0;--mdc-ripple-top: 0;--mdc-ripple-fg-scale: 1;--mdc-ripple-fg-translate-end: 0;--mdc-ripple-fg-translate-start: 0;-webkit-tap-highlight-color:rgba(0,0,0,0);will-change:transform,opacity;position:relative;outline:none;overflow:hidden}.mdc-ripple-surface::before,.mdc-ripple-surface::after{position:absolute;border-radius:50%;opacity:0;pointer-events:none;content:\"\"}.mdc-ripple-surface::before{transition:opacity 15ms linear,background-color 15ms linear;z-index:1;z-index:var(--mdc-ripple-z-index, 1)}.mdc-ripple-surface::after{z-index:0;z-index:var(--mdc-ripple-z-index, 0)}.mdc-ripple-surface.mdc-ripple-upgraded::before{transform:scale(var(--mdc-ripple-fg-scale, 1))}.mdc-ripple-surface.mdc-ripple-upgraded::after{top:0;left:0;transform:scale(0);transform-origin:center center}.mdc-ripple-surface.mdc-ripple-upgraded--unbounded::after{top:var(--mdc-ripple-top, 0);left:var(--mdc-ripple-left, 0)}.mdc-ripple-surface.mdc-ripple-upgraded--foreground-activation::after{animation:mdc-ripple-fg-radius-in 225ms forwards,mdc-ripple-fg-opacity-in 75ms forwards}.mdc-ripple-surface.mdc-ripple-upgraded--foreground-deactivation::after{animation:mdc-ripple-fg-opacity-out 150ms;transform:translate(var(--mdc-ripple-fg-translate-end, 0)) scale(var(--mdc-ripple-fg-scale, 1))}.mdc-ripple-surface::before,.mdc-ripple-surface::after{top:calc(50% - 100%);left:calc(50% - 100%);width:200%;height:200%}.mdc-ripple-surface.mdc-ripple-upgraded::after{width:var(--mdc-ripple-fg-size, 100%);height:var(--mdc-ripple-fg-size, 100%)}.mdc-ripple-surface[data-mdc-ripple-is-unbounded],.mdc-ripple-upgraded--unbounded{overflow:visible}.mdc-ripple-surface[data-mdc-ripple-is-unbounded]::before,.mdc-ripple-surface[data-mdc-ripple-is-unbounded]::after,.mdc-ripple-upgraded--unbounded::before,.mdc-ripple-upgraded--unbounded::after{top:calc(50% - 50%);left:calc(50% - 50%);width:100%;height:100%}.mdc-ripple-surface[data-mdc-ripple-is-unbounded].mdc-ripple-upgraded::before,.mdc-ripple-surface[data-mdc-ripple-is-unbounded].mdc-ripple-upgraded::after,.mdc-ripple-upgraded--unbounded.mdc-ripple-upgraded::before,.mdc-ripple-upgraded--unbounded.mdc-ripple-upgraded::after{top:var(--mdc-ripple-top, calc(50% - 50%));left:var(--mdc-ripple-left, calc(50% - 50%));width:var(--mdc-ripple-fg-size, 100%);height:var(--mdc-ripple-fg-size, 100%)}.mdc-ripple-surface[data-mdc-ripple-is-unbounded].mdc-ripple-upgraded::after,.mdc-ripple-upgraded--unbounded.mdc-ripple-upgraded::after{width:var(--mdc-ripple-fg-size, 100%);height:var(--mdc-ripple-fg-size, 100%)}.mdc-ripple-surface::before,.mdc-ripple-surface::after{background-color:#000;background-color:var(--mdc-ripple-color, #000)}.mdc-ripple-surface:hover::before,.mdc-ripple-surface.mdc-ripple-surface--hover::before{opacity:0.04;opacity:var(--mdc-ripple-hover-opacity, 0.04)}.mdc-ripple-surface.mdc-ripple-upgraded--background-focused::before,.mdc-ripple-surface:not(.mdc-ripple-upgraded):focus::before{transition-duration:75ms;opacity:0.12;opacity:var(--mdc-ripple-focus-opacity, 0.12)}.mdc-ripple-surface:not(.mdc-ripple-upgraded)::after{transition:opacity 150ms linear}.mdc-ripple-surface:not(.mdc-ripple-upgraded):active::after{transition-duration:75ms;opacity:0.12;opacity:var(--mdc-ripple-press-opacity, 0.12)}.mdc-ripple-surface.mdc-ripple-upgraded{--mdc-ripple-fg-opacity:var(--mdc-ripple-press-opacity, 0.12)}@keyframes mdc-ripple-fg-radius-in{from{animation-timing-function:cubic-bezier(0.4, 0, 0.2, 1);transform:translate(var(--mdc-ripple-fg-translate-start, 0)) scale(1)}to{transform:translate(var(--mdc-ripple-fg-translate-end, 0)) scale(var(--mdc-ripple-fg-scale, 1))}}@keyframes mdc-ripple-fg-opacity-in{from{animation-timing-function:linear;opacity:0}to{opacity:var(--mdc-ripple-fg-opacity, 0)}}@keyframes mdc-ripple-fg-opacity-out{from{animation-timing-function:linear;opacity:var(--mdc-ripple-fg-opacity, 0)}to{opacity:0}}:host{position:absolute;top:0;left:0;width:100%;height:100%;pointer-events:none;display:block}:host .mdc-ripple-surface{position:absolute;top:0;left:0;width:100%;height:100%;pointer-events:none;will-change:unset}.mdc-ripple-surface--primary::before,.mdc-ripple-surface--primary::after{background-color:#6200ee;background-color:var(--mdc-ripple-color, var(--mdc-theme-primary, #6200ee))}.mdc-ripple-surface--primary:hover::before,.mdc-ripple-surface--primary.mdc-ripple-surface--hover::before{opacity:0.04;opacity:var(--mdc-ripple-hover-opacity, 0.04)}.mdc-ripple-surface--primary.mdc-ripple-upgraded--background-focused::before,.mdc-ripple-surface--primary:not(.mdc-ripple-upgraded):focus::before{transition-duration:75ms;opacity:0.12;opacity:var(--mdc-ripple-focus-opacity, 0.12)}.mdc-ripple-surface--primary:not(.mdc-ripple-upgraded)::after{transition:opacity 150ms linear}.mdc-ripple-surface--primary:not(.mdc-ripple-upgraded):active::after{transition-duration:75ms;opacity:0.12;opacity:var(--mdc-ripple-press-opacity, 0.12)}.mdc-ripple-surface--primary.mdc-ripple-upgraded{--mdc-ripple-fg-opacity:var(--mdc-ripple-press-opacity, 0.12)}.mdc-ripple-surface--primary--activated::before{opacity:0.12;opacity:var(--mdc-ripple-activated-opacity, 0.12)}.mdc-ripple-surface--primary--activated::before,.mdc-ripple-surface--primary--activated::after{background-color:#6200ee;background-color:var(--mdc-ripple-color, var(--mdc-theme-primary, #6200ee))}.mdc-ripple-surface--primary--activated:hover::before,.mdc-ripple-surface--primary--activated.mdc-ripple-surface--hover::before{opacity:0.16;opacity:var(--mdc-ripple-hover-opacity, 0.16)}.mdc-ripple-surface--primary--activated.mdc-ripple-upgraded--background-focused::before,.mdc-ripple-surface--primary--activated:not(.mdc-ripple-upgraded):focus::before{transition-duration:75ms;opacity:0.24;opacity:var(--mdc-ripple-focus-opacity, 0.24)}.mdc-ripple-surface--primary--activated:not(.mdc-ripple-upgraded)::after{transition:opacity 150ms linear}.mdc-ripple-surface--primary--activated:not(.mdc-ripple-upgraded):active::after{transition-duration:75ms;opacity:0.24;opacity:var(--mdc-ripple-press-opacity, 0.24)}.mdc-ripple-surface--primary--activated.mdc-ripple-upgraded{--mdc-ripple-fg-opacity:var(--mdc-ripple-press-opacity, 0.24)}.mdc-ripple-surface--primary--selected::before{opacity:0.08;opacity:var(--mdc-ripple-selected-opacity, 0.08)}.mdc-ripple-surface--primary--selected::before,.mdc-ripple-surface--primary--selected::after{background-color:#6200ee;background-color:var(--mdc-ripple-color, var(--mdc-theme-primary, #6200ee))}.mdc-ripple-surface--primary--selected:hover::before,.mdc-ripple-surface--primary--selected.mdc-ripple-surface--hover::before{opacity:0.12;opacity:var(--mdc-ripple-hover-opacity, 0.12)}.mdc-ripple-surface--primary--selected.mdc-ripple-upgraded--background-focused::before,.mdc-ripple-surface--primary--selected:not(.mdc-ripple-upgraded):focus::before{transition-duration:75ms;opacity:0.2;opacity:var(--mdc-ripple-focus-opacity, 0.2)}.mdc-ripple-surface--primary--selected:not(.mdc-ripple-upgraded)::after{transition:opacity 150ms linear}.mdc-ripple-surface--primary--selected:not(.mdc-ripple-upgraded):active::after{transition-duration:75ms;opacity:0.2;opacity:var(--mdc-ripple-press-opacity, 0.2)}.mdc-ripple-surface--primary--selected.mdc-ripple-upgraded{--mdc-ripple-fg-opacity:var(--mdc-ripple-press-opacity, 0.2)}.mdc-ripple-surface--accent::before,.mdc-ripple-surface--accent::after{background-color:#018786;background-color:var(--mdc-ripple-color, var(--mdc-theme-secondary, #018786))}.mdc-ripple-surface--accent:hover::before,.mdc-ripple-surface--accent.mdc-ripple-surface--hover::before{opacity:0.04;opacity:var(--mdc-ripple-hover-opacity, 0.04)}.mdc-ripple-surface--accent.mdc-ripple-upgraded--background-focused::before,.mdc-ripple-surface--accent:not(.mdc-ripple-upgraded):focus::before{transition-duration:75ms;opacity:0.12;opacity:var(--mdc-ripple-focus-opacity, 0.12)}.mdc-ripple-surface--accent:not(.mdc-ripple-upgraded)::after{transition:opacity 150ms linear}.mdc-ripple-surface--accent:not(.mdc-ripple-upgraded):active::after{transition-duration:75ms;opacity:0.12;opacity:var(--mdc-ripple-press-opacity, 0.12)}.mdc-ripple-surface--accent.mdc-ripple-upgraded{--mdc-ripple-fg-opacity:var(--mdc-ripple-press-opacity, 0.12)}.mdc-ripple-surface--accent--activated::before{opacity:0.12;opacity:var(--mdc-ripple-activated-opacity, 0.12)}.mdc-ripple-surface--accent--activated::before,.mdc-ripple-surface--accent--activated::after{background-color:#018786;background-color:var(--mdc-ripple-color, var(--mdc-theme-secondary, #018786))}.mdc-ripple-surface--accent--activated:hover::before,.mdc-ripple-surface--accent--activated.mdc-ripple-surface--hover::before{opacity:0.16;opacity:var(--mdc-ripple-hover-opacity, 0.16)}.mdc-ripple-surface--accent--activated.mdc-ripple-upgraded--background-focused::before,.mdc-ripple-surface--accent--activated:not(.mdc-ripple-upgraded):focus::before{transition-duration:75ms;opacity:0.24;opacity:var(--mdc-ripple-focus-opacity, 0.24)}.mdc-ripple-surface--accent--activated:not(.mdc-ripple-upgraded)::after{transition:opacity 150ms linear}.mdc-ripple-surface--accent--activated:not(.mdc-ripple-upgraded):active::after{transition-duration:75ms;opacity:0.24;opacity:var(--mdc-ripple-press-opacity, 0.24)}.mdc-ripple-surface--accent--activated.mdc-ripple-upgraded{--mdc-ripple-fg-opacity:var(--mdc-ripple-press-opacity, 0.24)}.mdc-ripple-surface--accent--selected::before{opacity:0.08;opacity:var(--mdc-ripple-selected-opacity, 0.08)}.mdc-ripple-surface--accent--selected::before,.mdc-ripple-surface--accent--selected::after{background-color:#018786;background-color:var(--mdc-ripple-color, var(--mdc-theme-secondary, #018786))}.mdc-ripple-surface--accent--selected:hover::before,.mdc-ripple-surface--accent--selected.mdc-ripple-surface--hover::before{opacity:0.12;opacity:var(--mdc-ripple-hover-opacity, 0.12)}.mdc-ripple-surface--accent--selected.mdc-ripple-upgraded--background-focused::before,.mdc-ripple-surface--accent--selected:not(.mdc-ripple-upgraded):focus::before{transition-duration:75ms;opacity:0.2;opacity:var(--mdc-ripple-focus-opacity, 0.2)}.mdc-ripple-surface--accent--selected:not(.mdc-ripple-upgraded)::after{transition:opacity 150ms linear}.mdc-ripple-surface--accent--selected:not(.mdc-ripple-upgraded):active::after{transition-duration:75ms;opacity:0.2;opacity:var(--mdc-ripple-press-opacity, 0.2)}.mdc-ripple-surface--accent--selected.mdc-ripple-upgraded{--mdc-ripple-fg-opacity:var(--mdc-ripple-press-opacity, 0.2)}.mdc-ripple-surface--disabled{opacity:0}.mdc-ripple-surface--internal-use-state-layer-custom-properties::before,.mdc-ripple-surface--internal-use-state-layer-custom-properties::after{background-color:#000;background-color:var(--mdc-ripple-hover-state-layer-color, #000)}.mdc-ripple-surface--internal-use-state-layer-custom-properties:hover::before,.mdc-ripple-surface--internal-use-state-layer-custom-properties.mdc-ripple-surface--hover::before{opacity:0.04;opacity:var(--mdc-ripple-hover-state-layer-opacity, 0.04)}.mdc-ripple-surface--internal-use-state-layer-custom-properties.mdc-ripple-upgraded--background-focused::before,.mdc-ripple-surface--internal-use-state-layer-custom-properties:not(.mdc-ripple-upgraded):focus::before{transition-duration:75ms;opacity:0.12;opacity:var(--mdc-ripple-focus-state-layer-opacity, 0.12)}.mdc-ripple-surface--internal-use-state-layer-custom-properties:not(.mdc-ripple-upgraded)::after{transition:opacity 150ms linear}.mdc-ripple-surface--internal-use-state-layer-custom-properties:not(.mdc-ripple-upgraded):active::after{transition-duration:75ms;opacity:0.12;opacity:var(--mdc-ripple-pressed-state-layer-opacity, 0.12)}.mdc-ripple-surface--internal-use-state-layer-custom-properties.mdc-ripple-upgraded{--mdc-ripple-fg-opacity:var(--mdc-ripple-pressed-state-layer-opacity, 0.12)}`;\n","/**\n * @license\n * Copyright 2018 Google LLC\n * SPDX-License-Identifier: Apache-2.0\n */\n\n// Style preference for leading underscores.\n// tslint:disable:strip-private-property-underscore\n\nimport {customElement} from 'lit/decorators.js';\n\nimport {RippleBase} from './mwc-ripple-base.js';\nimport {styles} from './mwc-ripple.css.js';\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    'mwc-ripple': Ripple;\n  }\n}\n\n/** @soyCompatible */\n@customElement('mwc-ripple')\nexport class Ripple extends RippleBase {\n  static override styles = [styles];\n}\n","/**\n * @license\n * Copyright 2020 Google LLC\n * SPDX-License-Identifier: Apache-2.0\n */\n\n// Style preference for leading underscores.\n// tslint:disable:strip-private-property-underscore\n\n\nimport {RippleInterface} from '@material/mwc-base/utils.js';\n\n/**\n * Class that encapsulates the events handlers for `mwc-ripple`\n *\n *\n * Example:\n * ```\n * class XFoo extends LitElement {\n *   async getRipple() {\n *     this.renderRipple = true;\n *     await this.updateComplete;\n *     return this.renderRoot.querySelector('mwc-ripple');\n *   }\n *   rippleHandlers = new RippleHandlers(() => this.getRipple());\n *\n *   render() {\n *     return html`\n *       <div @mousedown=${this.rippleHandlers.startPress}></div>\n *       ${this.renderRipple ? html`<mwc-ripple></mwc-ripple>` : ''}\n *     `;\n *   }\n * }\n * ```\n */\nexport class RippleHandlers implements RippleInterface {\n  startPress: (ev?: Event) => void;\n  endPress: () => void;\n  startFocus: () => void;\n  endFocus: () => void;\n  startHover: () => void;\n  endHover: () => void;\n\n  constructor(\n      /** Function that returns a `mwc-ripple` */\n      rippleFn: () => Promise<RippleInterface|null>) {\n    this.startPress = (ev?: Event) => {\n      rippleFn().then((r) => {\n        r && r.startPress(ev);\n      });\n    };\n    this.endPress = () => {\n      rippleFn().then((r) => {\n        r && r.endPress();\n      });\n    };\n    this.startFocus = () => {\n      rippleFn().then((r) => {\n        r && r.startFocus();\n      });\n    };\n    this.endFocus = () => {\n      rippleFn().then((r) => {\n        r && r.endFocus();\n      });\n    };\n    this.startHover = () => {\n      rippleFn().then((r) => {\n        r && r.startHover();\n      });\n    };\n    this.endHover = () => {\n      rippleFn().then((r) => {\n        r && r.endHover();\n      });\n    };\n  }\n}\n","/**\n * @license\n * Copyright 2019 Google LLC\n * SPDX-License-Identifier: Apache-2.0\n */\n\n// Style preference for leading underscores.\n// tslint:disable:strip-private-property-underscore\n\nimport '@material/mwc-icon/mwc-icon.js';\nimport '@material/mwc-ripple/mwc-ripple.js';\n\nimport {AriaHasPopup, ariaProperty} from '@material/mwc-base/aria-property.js';\nimport {Ripple} from '@material/mwc-ripple/mwc-ripple.js';\nimport {RippleHandlers} from '@material/mwc-ripple/ripple-handlers.js';\nimport {html, LitElement, TemplateResult} from 'lit';\nimport {eventOptions, property, query, queryAsync, state} from 'lit/decorators.js';\nimport {ClassInfo, classMap} from 'lit/directives/class-map.js';\nimport {ifDefined} from 'lit/directives/if-defined.js';\n\n/** @soyCompatible */\nexport class ButtonBase extends LitElement {\n  static override shadowRootOptions:\n      ShadowRootInit = {mode: 'open', delegatesFocus: true};\n\n  /** @soyPrefixAttribute */\n  @ariaProperty\n  @property({type: String, attribute: 'aria-haspopup'})\n  override ariaHasPopup!: AriaHasPopup;\n\n  @property({type: Boolean, reflect: true}) raised = false;\n\n  @property({type: Boolean, reflect: true}) unelevated = false;\n\n  @property({type: Boolean, reflect: true}) outlined = false;\n\n  @property({type: Boolean}) dense = false;\n\n  @property({type: Boolean, reflect: true}) disabled = false;\n\n  @property({type: Boolean, attribute: 'trailingicon'}) trailingIcon = false;\n\n  @property({type: Boolean, reflect: true}) fullwidth = false;\n\n  @property({type: String}) icon = '';\n\n  @property({type: String}) label = '';\n\n  @property({type: Boolean}) expandContent = false;\n\n  @query('#button') buttonElement!: HTMLElement;\n\n  @queryAsync('mwc-ripple') ripple!: Promise<Ripple|null>;\n\n  @state() protected shouldRenderRipple = false;\n\n  protected rippleHandlers = new RippleHandlers(() => {\n    this.shouldRenderRipple = true;\n    return this.ripple;\n  });\n\n  /** @soyTemplate */\n  protected renderOverlay(): TemplateResult {\n    return html``;\n  }\n\n  /** @soyTemplate */\n  protected renderRipple(): TemplateResult|string {\n    const filled = this.raised || this.unelevated;\n    return this.shouldRenderRipple ?\n        html`<mwc-ripple class=\"ripple\" .primary=\"${!filled}\" .disabled=\"${\n            this.disabled}\"></mwc-ripple>` :\n        '';\n  }\n\n  override focus() {\n    const buttonElement = this.buttonElement;\n    if (buttonElement) {\n      this.rippleHandlers.startFocus();\n      buttonElement.focus();\n    }\n  }\n\n  override blur() {\n    const buttonElement = this.buttonElement;\n    if (buttonElement) {\n      this.rippleHandlers.endFocus();\n      buttonElement.blur();\n    }\n  }\n\n  /** @soyTemplate */\n  protected getRenderClasses(): ClassInfo {\n    return {\n      'mdc-button--raised': this.raised,\n      'mdc-button--unelevated': this.unelevated,\n      'mdc-button--outlined': this.outlined,\n      'mdc-button--dense': this.dense,\n    };\n  }\n\n  /**\n   * @soyTemplate\n   * @soyAttributes buttonAttributes: #button\n   * @soyClasses buttonClasses: #button\n   */\n  protected override render(): TemplateResult {\n    return html`\n      <button\n          id=\"button\"\n          class=\"mdc-button ${classMap(this.getRenderClasses())}\"\n          ?disabled=\"${this.disabled}\"\n          aria-label=\"${this.label || this.icon}\"\n          aria-haspopup=\"${ifDefined(this.ariaHasPopup)}\"\n          @focus=\"${this.handleRippleFocus}\"\n          @blur=\"${this.handleRippleBlur}\"\n          @mousedown=\"${this.handleRippleActivate}\"\n          @mouseenter=\"${this.handleRippleMouseEnter}\"\n          @mouseleave=\"${this.handleRippleMouseLeave}\"\n          @touchstart=\"${this.handleRippleActivate}\"\n          @touchend=\"${this.handleRippleDeactivate}\"\n          @touchcancel=\"${this.handleRippleDeactivate}\">\n        ${this.renderOverlay()}\n        ${this.renderRipple()}\n        <span class=\"leading-icon\">\n          <slot name=\"icon\">\n            ${this.icon && !this.trailingIcon ? this.renderIcon() : ''}\n          </slot>\n        </span>\n        <span class=\"mdc-button__label\">${this.label}</span>\n        <span class=\"slot-container ${classMap({\n      flex: this.expandContent\n    })}\">\n          <slot></slot>\n        </span>\n        <span class=\"trailing-icon\">\n          <slot name=\"trailingIcon\">\n            ${this.icon && this.trailingIcon ? this.renderIcon() : ''}\n          </slot>\n        </span>\n      </button>`;\n  }\n\n  /** @soyTemplate */\n  protected renderIcon(): TemplateResult {\n    return html`\n    <mwc-icon class=\"mdc-button__icon\">\n      ${this.icon}\n    </mwc-icon>`;\n  }\n\n  @eventOptions({passive: true})\n  protected handleRippleActivate(evt?: Event) {\n    const onUp = () => {\n      window.removeEventListener('mouseup', onUp);\n\n      this.handleRippleDeactivate();\n    };\n\n    window.addEventListener('mouseup', onUp);\n    this.rippleHandlers.startPress(evt);\n  }\n\n  protected handleRippleDeactivate() {\n    this.rippleHandlers.endPress();\n  }\n\n  protected handleRippleMouseEnter() {\n    this.rippleHandlers.startHover();\n  }\n\n  protected handleRippleMouseLeave() {\n    this.rippleHandlers.endHover();\n  }\n\n  protected handleRippleFocus() {\n    this.rippleHandlers.startFocus();\n  }\n\n  protected handleRippleBlur() {\n    this.rippleHandlers.endFocus();\n  }\n}\n","/**\n * @license\n * Copyright 2018 Google LLC\n * SPDX-License-Identifier: BSD-3-Clause\n */\n\nimport {nothing} from '../lit-html.js';\n\n/**\n * For AttributeParts, sets the attribute if the value is defined and removes\n * the attribute if the value is undefined.\n *\n * For other part types, this directive is a no-op.\n */\nexport const ifDefined = <T>(value: T) => value ?? nothing;\n","/**\n * @license\n * Copyright 2017 Google LLC\n * SPDX-License-Identifier: BSD-3-Clause\n */\n\n/*\n * IMPORTANT: For compatibility with tsickle and the Closure JS compiler, all\n * property decorators (but not class decorators) in this file that have\n * an @ExportDecoratedItems annotation must be defined as a regular function,\n * not an arrow function.\n */\n\nimport {ReactiveElement} from '../reactive-element.js';\nimport {decorateProperty} from './base.js';\n\n// Note, in the future, we may extend this decorator to support the use case\n// where the queried element may need to do work to become ready to interact\n// with (e.g. load some implementation code). If so, we might elect to\n// add a second argument defining a function that can be run to make the\n// queried element loaded/updated/ready.\n/**\n * A property decorator that converts a class property into a getter that\n * returns a promise that resolves to the result of a querySelector on the\n * element's renderRoot done after the element's `updateComplete` promise\n * resolves. When the queried property may change with element state, this\n * decorator can be used instead of requiring users to await the\n * `updateComplete` before accessing the property.\n *\n * @param selector A DOMString containing one or more selectors to match.\n *\n * See: https://developer.mozilla.org/en-US/docs/Web/API/Document/querySelector\n *\n * ```ts\n * class MyElement {\n *   @queryAsync('#first')\n *   first: Promise<HTMLDivElement>;\n *\n *   render() {\n *     return html`\n *       <div id=\"first\"></div>\n *       <div id=\"second\"></div>\n *     `;\n *   }\n * }\n *\n * // external usage\n * async doSomethingWithFirst() {\n *  (await aMyElement.first).doSomething();\n * }\n * ```\n * @category Decorator\n */\nexport function queryAsync(selector: string) {\n  return decorateProperty({\n    descriptor: (_name: PropertyKey) => ({\n      async get(this: ReactiveElement) {\n        await this.updateComplete;\n        return this.renderRoot?.querySelector(selector);\n      },\n      enumerable: true,\n      configurable: true,\n    }),\n  });\n}\n","/**\n * @license\n * Copyright 2021 Google LLC\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport {PropertyDeclaration, ReactiveElement} from '@lit/reactive-element';\n\n/**\n * A value for the `aria-haspopup` ARIA attribute.\n */\nexport type AriaHasPopup =\n    'false'|'true'|'menu'|'listbox'|'tree'|'grid'|'dialog';\n\n/**\n * Expose protected statics on ReactiveElement\n */\ninterface ReactiveElementInternals {\n  getPropertyDescriptor(name: PropertyKey, key: string): PropertyDescriptor;\n  getPropertyOptions(name: PropertyKey): PropertyDeclaration;\n}\n\n/**\n * TypeScript version of the decorator\n * @see https://www.typescriptlang.org/docs/handbook/decorators.html#property-decorators\n */\nfunction tsDecorator(\n    prototype: {}, name: string, descriptor?: PropertyDescriptor) {\n  const constructor =\n      (prototype.constructor as unknown as ReactiveElementInternals);\n  if (!descriptor) {\n    /**\n     * lit uses internal properties with two leading underscores to\n     * provide storage for accessors\n     */\n    const litInternalPropertyKey = `__${name}`;\n    descriptor =\n        constructor.getPropertyDescriptor(name, litInternalPropertyKey);\n    if (!descriptor) {\n      throw new Error('@ariaProperty must be used after a @property decorator');\n    }\n  }\n\n  // descriptor must exist at this point, reassign so typescript understands\n  const propDescriptor = descriptor;\n  let attribute = '';\n\n  if (!propDescriptor.set) {\n    throw new Error(`@ariaProperty requires a setter for ${name}`);\n  }\n\n\n  // TODO(b/202853219): Remove this check when internal tooling is\n  // compatible\n  // tslint:disable-next-line:no-any bail if applied to internal generated class\n  if ((prototype as any).dispatchWizEvent) {\n    return descriptor;\n  }\n\n  const wrappedDescriptor: PropertyDescriptor = {\n    configurable: true,\n    enumerable: true,\n    set(this: ReactiveElement, value: unknown) {\n      if (attribute === '') {\n        const options = constructor.getPropertyOptions(name);\n        // if attribute is not a string, use `name` instead\n        attribute =\n            typeof options.attribute === 'string' ? options.attribute : name;\n      }\n      if (this.hasAttribute(attribute)) {\n        this.removeAttribute(attribute);\n      }\n      propDescriptor.set!.call(this, value);\n    }\n  };\n\n  if (propDescriptor.get) {\n    wrappedDescriptor.get = function(this: ReactiveElement) {\n      return propDescriptor.get!.call(this);\n    };\n  }\n\n  return wrappedDescriptor;\n}\n\n/**\n * A property decorator proxies an aria attribute to an internal node\n *\n * This decorator is only intended for use with ARIA attributes, such as `role`\n * and `aria-label` due to screenreader needs.\n *\n * Upon first render, `@ariaProperty` will remove the attribute from the host\n * element to prevent screenreaders from reading the host instead of the\n * internal node.\n *\n * This decorator should only be used for non-Symbol public fields decorated\n * with `@property`, or on a setter with an optional getter.\n *\n * @example\n * ```ts\n * class MyElement {\n *   @ariaProperty\n *   @property({ type: String, attribute: 'aria-label' })\n *   ariaLabel!: string;\n * }\n * ```\n * @category Decorator\n * @ExportDecoratedItems\n */\nexport function ariaProperty(\n    protoOrDescriptor: {}, name?: string,\n    // tslint:disable-next-line:no-any any is required as a return type from decorators\n    descriptor?: PropertyDescriptor): any {\n  if (name !== undefined) {\n    return tsDecorator(protoOrDescriptor, name, descriptor);\n  } else {\n    throw new Error('@ariaProperty only supports TypeScript Decorators');\n  }\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n * SPDX-License-Identifier: BSD-3-Clause\n */\n\n/*\n * IMPORTANT: For compatibility with tsickle and the Closure JS compiler, all\n * property decorators (but not class decorators) in this file that have\n * an @ExportDecoratedItems annotation must be defined as a regular function,\n * not an arrow function.\n */\n\nimport {ReactiveElement} from '../reactive-element.js';\nimport {decorateProperty} from './base.js';\n\n/**\n * Adds event listener options to a method used as an event listener in a\n * lit-html template.\n *\n * @param options An object that specifies event listener options as accepted by\n * `EventTarget#addEventListener` and `EventTarget#removeEventListener`.\n *\n * Current browsers support the `capture`, `passive`, and `once` options. See:\n * https://developer.mozilla.org/en-US/docs/Web/API/EventTarget/addEventListener#Parameters\n *\n * ```ts\n * class MyElement {\n *   clicked = false;\n *\n *   render() {\n *     return html`\n *       <div @click=${this._onClick}>\n *         <button></button>\n *       </div>\n *     `;\n *   }\n *\n *   @eventOptions({capture: true})\n *   _onClick(e) {\n *     this.clicked = true;\n *   }\n * }\n * ```\n * @category Decorator\n */\nexport function eventOptions(options: AddEventListenerOptions) {\n  return decorateProperty({\n    finisher: (ctor: typeof ReactiveElement, name: PropertyKey) => {\n      Object.assign(\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        ctor.prototype[name as keyof ReactiveElement] as any,\n        options\n      );\n    },\n  });\n}\n","/**\n * @license\n * Copyright 2021 Google LLC\n * SPDX-LIcense-Identifier: Apache-2.0\n */\nimport {css} from 'lit';\nexport const styles = css`.mdc-button{-moz-osx-font-smoothing:grayscale;-webkit-font-smoothing:antialiased;font-family:Roboto, sans-serif;font-family:var(--mdc-typography-button-font-family, var(--mdc-typography-font-family, Roboto, sans-serif));font-size:0.875rem;font-size:var(--mdc-typography-button-font-size, 0.875rem);line-height:2.25rem;line-height:var(--mdc-typography-button-line-height, 2.25rem);font-weight:500;font-weight:var(--mdc-typography-button-font-weight, 500);letter-spacing:0.0892857143em;letter-spacing:var(--mdc-typography-button-letter-spacing, 0.0892857143em);text-decoration:none;text-decoration:var(--mdc-typography-button-text-decoration, none);text-transform:uppercase;text-transform:var(--mdc-typography-button-text-transform, uppercase)}.mdc-touch-target-wrapper{display:inline}.mdc-elevation-overlay{position:absolute;border-radius:inherit;pointer-events:none;opacity:0;opacity:var(--mdc-elevation-overlay-opacity, 0);transition:opacity 280ms cubic-bezier(0.4, 0, 0.2, 1);background-color:#fff;background-color:var(--mdc-elevation-overlay-color, #fff)}.mdc-button{position:relative;display:inline-flex;align-items:center;justify-content:center;box-sizing:border-box;min-width:64px;border:none;outline:none;line-height:inherit;user-select:none;-webkit-appearance:none;overflow:visible;vertical-align:middle;background:transparent}.mdc-button .mdc-elevation-overlay{width:100%;height:100%;top:0;left:0}.mdc-button::-moz-focus-inner{padding:0;border:0}.mdc-button:active{outline:none}.mdc-button:hover{cursor:pointer}.mdc-button:disabled{cursor:default;pointer-events:none}.mdc-button .mdc-button__icon{margin-left:0;margin-right:8px;display:inline-block;position:relative;vertical-align:top}[dir=rtl] .mdc-button .mdc-button__icon,.mdc-button .mdc-button__icon[dir=rtl]{margin-left:8px;margin-right:0}.mdc-button .mdc-button__label{position:relative}.mdc-button .mdc-button__focus-ring{display:none}@media screen and (forced-colors: active){.mdc-button.mdc-ripple-upgraded--background-focused .mdc-button__focus-ring,.mdc-button:not(.mdc-ripple-upgraded):focus .mdc-button__focus-ring{pointer-events:none;border:2px solid transparent;border-radius:6px;box-sizing:content-box;position:absolute;top:50%;left:50%;transform:translate(-50%, -50%);height:calc( 100% + 4px );width:calc( 100% + 4px );display:block}}@media screen and (forced-colors: active)and (forced-colors: active){.mdc-button.mdc-ripple-upgraded--background-focused .mdc-button__focus-ring,.mdc-button:not(.mdc-ripple-upgraded):focus .mdc-button__focus-ring{border-color:CanvasText}}@media screen and (forced-colors: active){.mdc-button.mdc-ripple-upgraded--background-focused .mdc-button__focus-ring::after,.mdc-button:not(.mdc-ripple-upgraded):focus .mdc-button__focus-ring::after{content:\"\";border:2px solid transparent;border-radius:8px;display:block;position:absolute;top:50%;left:50%;transform:translate(-50%, -50%);height:calc(100% + 4px);width:calc(100% + 4px)}}@media screen and (forced-colors: active)and (forced-colors: active){.mdc-button.mdc-ripple-upgraded--background-focused .mdc-button__focus-ring::after,.mdc-button:not(.mdc-ripple-upgraded):focus .mdc-button__focus-ring::after{border-color:CanvasText}}.mdc-button .mdc-button__touch{position:absolute;top:50%;height:48px;left:0;right:0;transform:translateY(-50%)}.mdc-button__label+.mdc-button__icon{margin-left:8px;margin-right:0}[dir=rtl] .mdc-button__label+.mdc-button__icon,.mdc-button__label+.mdc-button__icon[dir=rtl]{margin-left:0;margin-right:8px}svg.mdc-button__icon{fill:currentColor}.mdc-button--touch{margin-top:6px;margin-bottom:6px}.mdc-button{padding:0 8px 0 8px}.mdc-button--unelevated{transition:box-shadow 280ms cubic-bezier(0.4, 0, 0.2, 1);padding:0 16px 0 16px}.mdc-button--unelevated.mdc-button--icon-trailing{padding:0 12px 0 16px}.mdc-button--unelevated.mdc-button--icon-leading{padding:0 16px 0 12px}.mdc-button--raised{transition:box-shadow 280ms cubic-bezier(0.4, 0, 0.2, 1);padding:0 16px 0 16px}.mdc-button--raised.mdc-button--icon-trailing{padding:0 12px 0 16px}.mdc-button--raised.mdc-button--icon-leading{padding:0 16px 0 12px}.mdc-button--outlined{border-style:solid;transition:border 280ms cubic-bezier(0.4, 0, 0.2, 1)}.mdc-button--outlined .mdc-button__ripple{border-style:solid;border-color:transparent}.mdc-button{height:36px;border-radius:4px;border-radius:var(--mdc-shape-small, 4px)}.mdc-button:not(:disabled){color:#6200ee;color:var(--mdc-theme-primary, #6200ee)}.mdc-button:disabled{color:rgba(0, 0, 0, 0.38)}.mdc-button .mdc-button__icon{font-size:1.125rem;width:1.125rem;height:1.125rem}.mdc-button .mdc-button__ripple{border-radius:4px;border-radius:var(--mdc-shape-small, 4px)}.mdc-button--raised,.mdc-button--unelevated{height:36px;border-radius:4px;border-radius:var(--mdc-shape-small, 4px)}.mdc-button--raised:not(:disabled),.mdc-button--unelevated:not(:disabled){background-color:#6200ee;background-color:var(--mdc-theme-primary, #6200ee)}.mdc-button--raised:disabled,.mdc-button--unelevated:disabled{background-color:rgba(0, 0, 0, 0.12)}.mdc-button--raised:not(:disabled),.mdc-button--unelevated:not(:disabled){color:#fff;color:var(--mdc-theme-on-primary, #fff)}.mdc-button--raised:disabled,.mdc-button--unelevated:disabled{color:rgba(0, 0, 0, 0.38)}.mdc-button--raised .mdc-button__icon,.mdc-button--unelevated .mdc-button__icon{font-size:1.125rem;width:1.125rem;height:1.125rem}.mdc-button--raised .mdc-button__ripple,.mdc-button--unelevated .mdc-button__ripple{border-radius:4px;border-radius:var(--mdc-shape-small, 4px)}.mdc-button--outlined{height:36px;border-radius:4px;border-radius:var(--mdc-shape-small, 4px);padding:0 15px 0 15px;border-width:1px}.mdc-button--outlined:not(:disabled){color:#6200ee;color:var(--mdc-theme-primary, #6200ee)}.mdc-button--outlined:disabled{color:rgba(0, 0, 0, 0.38)}.mdc-button--outlined .mdc-button__icon{font-size:1.125rem;width:1.125rem;height:1.125rem}.mdc-button--outlined .mdc-button__ripple{border-radius:4px;border-radius:var(--mdc-shape-small, 4px)}.mdc-button--outlined:not(:disabled){border-color:rgba(0, 0, 0, 0.12)}.mdc-button--outlined:disabled{border-color:rgba(0, 0, 0, 0.12)}.mdc-button--outlined.mdc-button--icon-trailing{padding:0 11px 0 15px}.mdc-button--outlined.mdc-button--icon-leading{padding:0 15px 0 11px}.mdc-button--outlined .mdc-button__ripple{top:-1px;left:-1px;bottom:-1px;right:-1px;border-width:1px}.mdc-button--outlined .mdc-button__touch{left:calc(-1 * 1px);width:calc(100% + 2 * 1px)}.mdc-button--raised{box-shadow:0px 3px 1px -2px rgba(0, 0, 0, 0.2),0px 2px 2px 0px rgba(0, 0, 0, 0.14),0px 1px 5px 0px rgba(0,0,0,.12);transition:box-shadow 280ms cubic-bezier(0.4, 0, 0.2, 1)}.mdc-button--raised:hover,.mdc-button--raised:focus{box-shadow:0px 2px 4px -1px rgba(0, 0, 0, 0.2),0px 4px 5px 0px rgba(0, 0, 0, 0.14),0px 1px 10px 0px rgba(0,0,0,.12)}.mdc-button--raised:active{box-shadow:0px 5px 5px -3px rgba(0, 0, 0, 0.2),0px 8px 10px 1px rgba(0, 0, 0, 0.14),0px 3px 14px 2px rgba(0,0,0,.12)}.mdc-button--raised:disabled{box-shadow:0px 0px 0px 0px rgba(0, 0, 0, 0.2),0px 0px 0px 0px rgba(0, 0, 0, 0.14),0px 0px 0px 0px rgba(0,0,0,.12)}:host{display:inline-flex;outline:none;-webkit-tap-highlight-color:transparent;vertical-align:top}:host([fullwidth]){width:100%}:host([raised]),:host([unelevated]){--mdc-ripple-color:#fff;--mdc-ripple-focus-opacity:0.24;--mdc-ripple-hover-opacity:0.08;--mdc-ripple-press-opacity:0.24}.trailing-icon ::slotted(*),.trailing-icon .mdc-button__icon,.leading-icon ::slotted(*),.leading-icon .mdc-button__icon{margin-left:0;margin-right:8px;display:inline-block;position:relative;vertical-align:top;font-size:1.125rem;height:1.125rem;width:1.125rem}[dir=rtl] .trailing-icon ::slotted(*),[dir=rtl] .trailing-icon .mdc-button__icon,[dir=rtl] .leading-icon ::slotted(*),[dir=rtl] .leading-icon .mdc-button__icon,.trailing-icon ::slotted(*[dir=rtl]),.trailing-icon .mdc-button__icon[dir=rtl],.leading-icon ::slotted(*[dir=rtl]),.leading-icon .mdc-button__icon[dir=rtl]{margin-left:8px;margin-right:0}.trailing-icon ::slotted(*),.trailing-icon .mdc-button__icon{margin-left:8px;margin-right:0}[dir=rtl] .trailing-icon ::slotted(*),[dir=rtl] .trailing-icon .mdc-button__icon,.trailing-icon ::slotted(*[dir=rtl]),.trailing-icon .mdc-button__icon[dir=rtl]{margin-left:0;margin-right:8px}.slot-container{display:inline-flex;align-items:center;justify-content:center}.slot-container.flex{flex:auto}.mdc-button{flex:auto;overflow:hidden;padding-left:8px;padding-left:var(--mdc-button-horizontal-padding, 8px);padding-right:8px;padding-right:var(--mdc-button-horizontal-padding, 8px)}.mdc-button--raised{box-shadow:0px 3px 1px -2px rgba(0, 0, 0, 0.2), 0px 2px 2px 0px rgba(0, 0, 0, 0.14), 0px 1px 5px 0px rgba(0, 0, 0, 0.12);box-shadow:var(--mdc-button-raised-box-shadow, 0px 3px 1px -2px rgba(0, 0, 0, 0.2), 0px 2px 2px 0px rgba(0, 0, 0, 0.14), 0px 1px 5px 0px rgba(0, 0, 0, 0.12))}.mdc-button--raised:focus{box-shadow:0px 2px 4px -1px rgba(0, 0, 0, 0.2), 0px 4px 5px 0px rgba(0, 0, 0, 0.14), 0px 1px 10px 0px rgba(0, 0, 0, 0.12);box-shadow:var(--mdc-button-raised-box-shadow-focus, var(--mdc-button-raised-box-shadow-hover, 0px 2px 4px -1px rgba(0, 0, 0, 0.2), 0px 4px 5px 0px rgba(0, 0, 0, 0.14), 0px 1px 10px 0px rgba(0, 0, 0, 0.12)))}.mdc-button--raised:hover{box-shadow:0px 2px 4px -1px rgba(0, 0, 0, 0.2), 0px 4px 5px 0px rgba(0, 0, 0, 0.14), 0px 1px 10px 0px rgba(0, 0, 0, 0.12);box-shadow:var(--mdc-button-raised-box-shadow-hover, 0px 2px 4px -1px rgba(0, 0, 0, 0.2), 0px 4px 5px 0px rgba(0, 0, 0, 0.14), 0px 1px 10px 0px rgba(0, 0, 0, 0.12))}.mdc-button--raised:active{box-shadow:0px 5px 5px -3px rgba(0, 0, 0, 0.2), 0px 8px 10px 1px rgba(0, 0, 0, 0.14), 0px 3px 14px 2px rgba(0, 0, 0, 0.12);box-shadow:var(--mdc-button-raised-box-shadow-active, 0px 5px 5px -3px rgba(0, 0, 0, 0.2), 0px 8px 10px 1px rgba(0, 0, 0, 0.14), 0px 3px 14px 2px rgba(0, 0, 0, 0.12))}.mdc-button--raised:disabled{box-shadow:0px 0px 0px 0px rgba(0, 0, 0, 0.2), 0px 0px 0px 0px rgba(0, 0, 0, 0.14), 0px 0px 0px 0px rgba(0, 0, 0, 0.12);box-shadow:var(--mdc-button-raised-box-shadow-disabled, 0px 0px 0px 0px rgba(0, 0, 0, 0.2), 0px 0px 0px 0px rgba(0, 0, 0, 0.14), 0px 0px 0px 0px rgba(0, 0, 0, 0.12))}.mdc-button--raised,.mdc-button--unelevated{padding-left:16px;padding-left:var(--mdc-button-horizontal-padding, 16px);padding-right:16px;padding-right:var(--mdc-button-horizontal-padding, 16px)}.mdc-button--outlined{border-width:1px;border-width:var(--mdc-button-outline-width, 1px);padding-left:calc(16px - 1px);padding-left:calc(var(--mdc-button-horizontal-padding, 16px) - var(--mdc-button-outline-width, 1px));padding-right:calc(16px - 1px);padding-right:calc(var(--mdc-button-horizontal-padding, 16px) - var(--mdc-button-outline-width, 1px))}.mdc-button--outlined:not(:disabled){border-color:rgba(0, 0, 0, 0.12);border-color:var(--mdc-button-outline-color, rgba(0, 0, 0, 0.12))}.mdc-button--outlined .ripple{top:calc(-1 * 1px);top:calc(-1 * var(--mdc-button-outline-width, 1px));left:calc(-1 * 1px);left:calc(-1 * var(--mdc-button-outline-width, 1px));right:initial;right:initial;border-width:1px;border-width:var(--mdc-button-outline-width, 1px);border-style:solid;border-color:transparent}[dir=rtl] .mdc-button--outlined .ripple,.mdc-button--outlined .ripple[dir=rtl]{left:initial;left:initial;right:calc(-1 * 1px);right:calc(-1 * var(--mdc-button-outline-width, 1px))}.mdc-button--dense{height:28px;margin-top:0;margin-bottom:0}.mdc-button--dense .mdc-button__touch{height:100%}:host([disabled]){pointer-events:none}:host([disabled]) .mdc-button{color:rgba(0, 0, 0, 0.38);color:var(--mdc-button-disabled-ink-color, rgba(0, 0, 0, 0.38))}:host([disabled]) .mdc-button--raised,:host([disabled]) .mdc-button--unelevated{background-color:rgba(0, 0, 0, 0.12);background-color:var(--mdc-button-disabled-fill-color, rgba(0, 0, 0, 0.12))}:host([disabled]) .mdc-button--outlined{border-color:rgba(0, 0, 0, 0.12);border-color:var(--mdc-button-disabled-outline-color, rgba(0, 0, 0, 0.12))}`;\n","/**\n * @license\n * Copyright 2018 Google LLC\n * SPDX-License-Identifier: Apache-2.0\n */\n\n// Style preference for leading underscores.\n// tslint:disable:strip-private-property-underscore\n\nimport {customElement} from 'lit/decorators.js';\n\nimport {ButtonBase} from './mwc-button-base.js';\nimport {styles} from './styles.css.js';\n\n/** @soyCompatible */\n@customElement('mwc-button')\nexport class Button extends ButtonBase {\n  static override styles = [styles];\n}\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    'mwc-button': Button;\n  }\n}\n","import { html } from 'lit';\nimport { component, useCallback } from 'haunted';\nimport { classMap } from 'lit/directives/class-map';\nimport { useReplicant } from '../../../hooks/use-replicant';\nimport './dash-twitter-tweet';\nimport '@material/mwc-button';\n\n/**\n * @customElement\n * @polymer\n */\nconst Twitter = () => {\n  const [isConnected] = useReplicant('streamConnected', false);\n  const [isPaused] = useReplicant('streamPaused', false);\n  const [onHold] = useReplicant('tweetHold', false);\n  const [tweetDuration, setDuration] = useReplicant('tweetDuration', 10);\n\n  const stream = useCallback(() => {\n    nodecg.sendMessage('startTweetStream');\n  }, []);\n\n  const stop = useCallback(() => {\n    nodecg.sendMessage('stopTweetStream');\n  }, []);\n\n  const pause = useCallback(() => {\n    nodecg.sendMessage('pauseTweetStream');\n  }, []);\n\n  const resume = useCallback(() => {\n    nodecg.sendMessage('resumeTweetStream');\n  }, []);\n\n  const hold = useCallback(() => {\n    nodecg.sendMessage('holdTweetToggle', !onHold);\n  }, [onHold]);\n\n  const duration = useCallback((e) => {\n    setDuration(parseInt(e.target.getAttribute('data-duration'), 10));\n  }, []);\n\n  return html`\n    <style>\n      :host {\n        display: block;\n      }\n\n      .row {\n        display: var(--layout_-_display);\n      }\n\n      .row :last-child {\n        margin-right: 0;\n      }\n\n      .row-bottom {\n        margin-top: 0.5em;\n      }\n\n      mwc-button {\n        flex: 1;\n        min-width: 1px;\n        --mdc-theme-on-primary: white;\n        --mdc-ripple-focus-opacity: 0;\n        margin-right: 0.5em;\n      }\n\n      .resume {\n        --mdc-theme-primary: #5ba664;\n      }\n\n      .pause,\n      .stop {\n        --mdc-theme-primary: #c9513e;\n      }\n\n      .stream,\n      .hold,\n      .row-bottom {\n        --mdc-theme-primary: #645ba6;\n      }\n\n      .toggle.active {\n        --mdc-theme-primary: #928bc1;\n      }\n\n      img.emoji {\n        height: 1em;\n        width: 1em;\n        margin: 0 .05em 0 .1em;\n        vertical-align: -0.1em;\n      }\n    </style>\n\n    <div class=\"row\">\n      <mwc-button class=\"stream\" ?disabled=\"${isConnected}\" raised @click=\"${() => stream()}\" label=\"Stream\"></mwc-button>\n      <mwc-button class=\"stop\" ?disabled=\"${!isConnected}\" raised @click=\"${() => stop()}\" label=\"Stop\"></mwc-button>\n    </div>\n\n    <dash-twitter-tweet></dash-twitter-tweet>\n\n    <div class=\"row\">\n      <mwc-button class=\"pause\" ?disabled=\"${isPaused || onHold}\" raised @click=\"${() => pause()}\" label=\"Pause\"></mwc-button>\n      <mwc-button class=\"resume\" ?disabled=\"${!isPaused || onHold}\" raised @click=\"${() => resume()}\" label=\"Resume\"></mwc-button>\n      <mwc-button class=\"hold toggle ${classMap({ active: onHold })}\" raised @click=\"${() => hold()}\" label=\"Hold\"></mwc-button>\n    </div>\n\n    <div class=\"row-bottom row\">\n      <mwc-button class=\"ten toggle ${classMap({ active: tweetDuration === 10 })}\" ?disabled=\"${!onHold && !isPaused}\" raised data-duration=\"10\" @click=\"${(e) => duration(e)}\" label=\"10 Seconds\"></mwc-button>\n      <mwc-button class=\"fifteen toggle ${classMap({ active: tweetDuration === 15 })}\" ?disabled=\"${!onHold && !isPaused}\" raised data-duration=\"15\" @click=\"${(e) => duration(e)}\" label=\"15 Seconds\"></mwc-button>\n      <mwc-button class=\"thirty toggle ${classMap({ active: tweetDuration === 30 })}\" ?disabled=\"${!onHold && !isPaused}\" raised data-duration=\"30\" @click=\"${(e) => duration(e)}\" label=\"30 Seconds\"></mwc-button>\n    </div>\n  `;\n};\n\nconst DashTwitter = component(Twitter);\n\ncustomElements.define('dash-twitter', DashTwitter);\n","import { html } from 'lit';\nimport {\n  component, useCallback, useEffect, useState,\n} from 'haunted';\nimport { classMap } from 'lit/directives/class-map';\nimport { useReplicant } from '../../../hooks/use-replicant';\nimport '@material/mwc-button';\n\nconst getRandomIntInclusive = (minVal, maxVal) => {\n  const min = Math.ceil(minVal);\n  const max = Math.floor(maxVal);\n  return Math.floor(Math.random() * (max - min + 1) + min);\n  // The maximum is inclusive and the minimum is inclusive\n};\n\n/**\n * @customElement\n * @polymer\n */\nconst Nowplaying = () => {\n  const [currentSong] = useReplicant('nowPlaying', {\n    artUrl: '',\n    title: '',\n    artist: '',\n    album: '',\n  });\n  const [isPaused] = useReplicant('nowPlayingPaused', false);\n  const [title, setTitle] = useState('Waiting for data...');\n\n  useEffect(() => {\n    if (currentSong.title === '') {\n      return;\n    }\n\n    setTitle(currentSong.title);\n  }, [currentSong.title]);\n\n  const toggle = useCallback(\n    () => nodecg.sendMessage('toggleNowPlaying', !isPaused),\n    [isPaused],\n  );\n\n  const test = useCallback(() => {\n    const random = getRandomIntInclusive(1, 50);\n    nodecg.sendMessage('nowPlaying', {\n      title: `Test title ${random}`,\n      artist: `Test artist ${random}`,\n      album: `Test album ${random}`,\n    });\n  }, []);\n\n  return html`\n  <style>\n    :host {\n      display: var(--layout-vertical_-_display);\n      flex-direction: var(--layout-vertical_-_flex-direction);\n    }\n\n    .marquee {\n      font-weight: 500;\n      font-size: 24px;\n      flex-grow: 1;\n      word-break: break-word;\n      word-wrap: break-word;\n      margin-bottom: 0.5em;\n    }\n\n    .row {\n      display: var(--layout-horizontal_-_display);\n      justify-content: var(--layout-end-justified_-_justify-content);\n    }\n\n    .row :last-child {\n      margin-right: 0;\n    }\n\n    mwc-button {\n      width: 152px;\n      margin-right: 1em;\n      --mdc-theme-on-primary: white;\n      --mdc-theme-primary: #645ba6;\n      --mdc-ripple-focus-opacity: 0;\n    }\n\n    .toggle.active {\n      --mdc-theme-primary: #928bc1;\n    }\n  </style>\n\n  <div class=\"marquee\">${title}</div>\n  <div class=\"row\">\n    <mwc-button class=\"toggle ${classMap({ active: isPaused })}\" raised @click=\"${() => toggle()}\" label=\"Pause\"></mwc-button>\n    <mwc-button raised @click=\"${() => test()}\" label=\"Test\"></mwc-button>\n  </div>\n  `;\n};\n\nconst DashNowplaying = component(Nowplaying);\n\ncustomElements.define('dash-nowplaying', DashNowplaying);\n","/**\n@license\nCopyright (c) 2015 The Polymer Project Authors. All rights reserved.\nThis code may only be used under the BSD style license found at\nhttp://polymer.github.io/LICENSE.txt The complete set of authors may be found at\nhttp://polymer.github.io/AUTHORS.txt The complete set of contributors may be\nfound at http://polymer.github.io/CONTRIBUTORS.txt Code distributed by Google as\npart of the polymer project is also subject to an additional IP rights grant\nfound at http://polymer.github.io/PATENTS.txt\n*/\nimport '@polymer/polymer/polymer-legacy.js';\nimport {html} from '@polymer/polymer/lib/utils/html-tag.js';\n\n/**\nThe `<iron-flex-layout>` component provides simple ways to use\n[CSS flexible box\nlayout](https://developer.mozilla.org/en-US/docs/Web/Guide/CSS/Flexible_boxes),\nalso known as flexbox. Note that this is an old element, that was written\nbefore all modern browsers had non-prefixed flex styles. As such, nowadays you\ndon't really need to use this element anymore, and can use CSS flex styles\ndirectly in your code.\n\nThis component provides two different ways to use flexbox:\n\n1. [Layout\nclasses](https://github.com/PolymerElements/iron-flex-layout/tree/master/iron-flex-layout-classes.html).\nThe layout class stylesheet provides a simple set of class-based flexbox rules,\nthat let you specify layout properties directly in markup. You must include this\nfile in every element that needs to use them.\n\n    Sample use:\n\n    ```\n    <custom-element-demo>\n      <template>\n        <script src=\"../webcomponentsjs/webcomponents-lite.js\"></script>\n        <next-code-block></next-code-block>\n      </template>\n    </custom-element-demo>\n    ```\n\n    ```js\n    import {html} from '@polymer/polymer/lib/utils/html-tag.js';\n    import '@polymer/iron-flex-layout/iron-flex-layout-classes.js';\n\n    const template = html`\n      <style is=\"custom-style\" include=\"iron-flex iron-flex-alignment\"></style>\n      <style>\n        .test { width: 100px; }\n      </style>\n      <div class=\"layout horizontal center-center\">\n        <div class=\"test\">horizontal layout center alignment</div>\n      </div>\n    `;\n    document.body.appendChild(template.content);\n    ```\n\n2. [Custom CSS\nmixins](https://github.com/PolymerElements/iron-flex-layout/blob/master/iron-flex-layout.html).\nThe mixin stylesheet includes custom CSS mixins that can be applied inside a CSS\nrule using the `@apply` function.\n\nPlease note that the old [/deep/ layout\nclasses](https://github.com/PolymerElements/iron-flex-layout/tree/master/classes)\nare deprecated, and should not be used. To continue using layout properties\ndirectly in markup, please switch to using the new `dom-module`-based\n[layout\nclasses](https://github.com/PolymerElements/iron-flex-layout/tree/master/iron-flex-layout-classes.html).\nPlease note that the new version does not use `/deep/`, and therefore requires\nyou to import the `dom-modules` in every element that needs to use them.\n\n@group Iron Elements\n@pseudoElement iron-flex-layout\n@demo demo/index.html\n*/\nconst template = html`\n<custom-style>\n  <style is=\"custom-style\">\n    [hidden] {\n      display: none !important;\n    }\n  </style>\n</custom-style>\n<custom-style>\n  <style is=\"custom-style\">\n    html {\n\n      --layout: {\n        display: -ms-flexbox;\n        display: -webkit-flex;\n        display: flex;\n      };\n\n      --layout-inline: {\n        display: -ms-inline-flexbox;\n        display: -webkit-inline-flex;\n        display: inline-flex;\n      };\n\n      --layout-horizontal: {\n        @apply --layout;\n\n        -ms-flex-direction: row;\n        -webkit-flex-direction: row;\n        flex-direction: row;\n      };\n\n      --layout-horizontal-reverse: {\n        @apply --layout;\n\n        -ms-flex-direction: row-reverse;\n        -webkit-flex-direction: row-reverse;\n        flex-direction: row-reverse;\n      };\n\n      --layout-vertical: {\n        @apply --layout;\n\n        -ms-flex-direction: column;\n        -webkit-flex-direction: column;\n        flex-direction: column;\n      };\n\n      --layout-vertical-reverse: {\n        @apply --layout;\n\n        -ms-flex-direction: column-reverse;\n        -webkit-flex-direction: column-reverse;\n        flex-direction: column-reverse;\n      };\n\n      --layout-wrap: {\n        -ms-flex-wrap: wrap;\n        -webkit-flex-wrap: wrap;\n        flex-wrap: wrap;\n      };\n\n      --layout-wrap-reverse: {\n        -ms-flex-wrap: wrap-reverse;\n        -webkit-flex-wrap: wrap-reverse;\n        flex-wrap: wrap-reverse;\n      };\n\n      --layout-flex-auto: {\n        -ms-flex: 1 1 auto;\n        -webkit-flex: 1 1 auto;\n        flex: 1 1 auto;\n      };\n\n      --layout-flex-none: {\n        -ms-flex: none;\n        -webkit-flex: none;\n        flex: none;\n      };\n\n      --layout-flex: {\n        -ms-flex: 1 1 0.000000001px;\n        -webkit-flex: 1;\n        flex: 1;\n        -webkit-flex-basis: 0.000000001px;\n        flex-basis: 0.000000001px;\n      };\n\n      --layout-flex-2: {\n        -ms-flex: 2;\n        -webkit-flex: 2;\n        flex: 2;\n      };\n\n      --layout-flex-3: {\n        -ms-flex: 3;\n        -webkit-flex: 3;\n        flex: 3;\n      };\n\n      --layout-flex-4: {\n        -ms-flex: 4;\n        -webkit-flex: 4;\n        flex: 4;\n      };\n\n      --layout-flex-5: {\n        -ms-flex: 5;\n        -webkit-flex: 5;\n        flex: 5;\n      };\n\n      --layout-flex-6: {\n        -ms-flex: 6;\n        -webkit-flex: 6;\n        flex: 6;\n      };\n\n      --layout-flex-7: {\n        -ms-flex: 7;\n        -webkit-flex: 7;\n        flex: 7;\n      };\n\n      --layout-flex-8: {\n        -ms-flex: 8;\n        -webkit-flex: 8;\n        flex: 8;\n      };\n\n      --layout-flex-9: {\n        -ms-flex: 9;\n        -webkit-flex: 9;\n        flex: 9;\n      };\n\n      --layout-flex-10: {\n        -ms-flex: 10;\n        -webkit-flex: 10;\n        flex: 10;\n      };\n\n      --layout-flex-11: {\n        -ms-flex: 11;\n        -webkit-flex: 11;\n        flex: 11;\n      };\n\n      --layout-flex-12: {\n        -ms-flex: 12;\n        -webkit-flex: 12;\n        flex: 12;\n      };\n\n      /* alignment in cross axis */\n\n      --layout-start: {\n        -ms-flex-align: start;\n        -webkit-align-items: flex-start;\n        align-items: flex-start;\n      };\n\n      --layout-center: {\n        -ms-flex-align: center;\n        -webkit-align-items: center;\n        align-items: center;\n      };\n\n      --layout-end: {\n        -ms-flex-align: end;\n        -webkit-align-items: flex-end;\n        align-items: flex-end;\n      };\n\n      --layout-baseline: {\n        -ms-flex-align: baseline;\n        -webkit-align-items: baseline;\n        align-items: baseline;\n      };\n\n      /* alignment in main axis */\n\n      --layout-start-justified: {\n        -ms-flex-pack: start;\n        -webkit-justify-content: flex-start;\n        justify-content: flex-start;\n      };\n\n      --layout-center-justified: {\n        -ms-flex-pack: center;\n        -webkit-justify-content: center;\n        justify-content: center;\n      };\n\n      --layout-end-justified: {\n        -ms-flex-pack: end;\n        -webkit-justify-content: flex-end;\n        justify-content: flex-end;\n      };\n\n      --layout-around-justified: {\n        -ms-flex-pack: distribute;\n        -webkit-justify-content: space-around;\n        justify-content: space-around;\n      };\n\n      --layout-justified: {\n        -ms-flex-pack: justify;\n        -webkit-justify-content: space-between;\n        justify-content: space-between;\n      };\n\n      --layout-center-center: {\n        @apply --layout-center;\n        @apply --layout-center-justified;\n      };\n\n      /* self alignment */\n\n      --layout-self-start: {\n        -ms-align-self: flex-start;\n        -webkit-align-self: flex-start;\n        align-self: flex-start;\n      };\n\n      --layout-self-center: {\n        -ms-align-self: center;\n        -webkit-align-self: center;\n        align-self: center;\n      };\n\n      --layout-self-end: {\n        -ms-align-self: flex-end;\n        -webkit-align-self: flex-end;\n        align-self: flex-end;\n      };\n\n      --layout-self-stretch: {\n        -ms-align-self: stretch;\n        -webkit-align-self: stretch;\n        align-self: stretch;\n      };\n\n      --layout-self-baseline: {\n        -ms-align-self: baseline;\n        -webkit-align-self: baseline;\n        align-self: baseline;\n      };\n\n      /* multi-line alignment in main axis */\n\n      --layout-start-aligned: {\n        -ms-flex-line-pack: start;  /* IE10 */\n        -ms-align-content: flex-start;\n        -webkit-align-content: flex-start;\n        align-content: flex-start;\n      };\n\n      --layout-end-aligned: {\n        -ms-flex-line-pack: end;  /* IE10 */\n        -ms-align-content: flex-end;\n        -webkit-align-content: flex-end;\n        align-content: flex-end;\n      };\n\n      --layout-center-aligned: {\n        -ms-flex-line-pack: center;  /* IE10 */\n        -ms-align-content: center;\n        -webkit-align-content: center;\n        align-content: center;\n      };\n\n      --layout-between-aligned: {\n        -ms-flex-line-pack: justify;  /* IE10 */\n        -ms-align-content: space-between;\n        -webkit-align-content: space-between;\n        align-content: space-between;\n      };\n\n      --layout-around-aligned: {\n        -ms-flex-line-pack: distribute;  /* IE10 */\n        -ms-align-content: space-around;\n        -webkit-align-content: space-around;\n        align-content: space-around;\n      };\n\n      /*******************************\n                Other Layout\n      *******************************/\n\n      --layout-block: {\n        display: block;\n      };\n\n      --layout-invisible: {\n        visibility: hidden !important;\n      };\n\n      --layout-relative: {\n        position: relative;\n      };\n\n      --layout-fit: {\n        position: absolute;\n        top: 0;\n        right: 0;\n        bottom: 0;\n        left: 0;\n      };\n\n      --layout-scroll: {\n        -webkit-overflow-scrolling: touch;\n        overflow: auto;\n      };\n\n      --layout-fullbleed: {\n        margin: 0;\n        height: 100vh;\n      };\n\n      /* fixed position */\n\n      --layout-fixed-top: {\n        position: fixed;\n        top: 0;\n        left: 0;\n        right: 0;\n      };\n\n      --layout-fixed-right: {\n        position: fixed;\n        top: 0;\n        right: 0;\n        bottom: 0;\n      };\n\n      --layout-fixed-bottom: {\n        position: fixed;\n        right: 0;\n        bottom: 0;\n        left: 0;\n      };\n\n      --layout-fixed-left: {\n        position: fixed;\n        top: 0;\n        bottom: 0;\n        left: 0;\n      };\n\n    }\n  </style>\n</custom-style>`;\n\ntemplate.setAttribute('style', 'display: none;');\ndocument.head.appendChild(template.content);\n\nvar style = document.createElement('style');\nstyle.textContent = '[hidden] { display: none !important; }';\ndocument.head.appendChild(style);\n","/**\n@license\nCopyright (c) 2015 The Polymer Project Authors. All rights reserved.\nThis code may only be used under the BSD style license found at\nhttp://polymer.github.io/LICENSE.txt The complete set of authors may be found at\nhttp://polymer.github.io/AUTHORS.txt The complete set of contributors may be\nfound at http://polymer.github.io/CONTRIBUTORS.txt Code distributed by Google as\npart of the polymer project is also subject to an additional IP rights grant\nfound at http://polymer.github.io/PATENTS.txt\n*/\nimport '@polymer/polymer/polymer-legacy.js';\n\nimport {Polymer} from '@polymer/polymer/lib/legacy/polymer-fn.js';\n\nexport class IronMeta {\n  /**\n   * @param {{\n   *   type: (string|null|undefined),\n   *   key: (string|null|undefined),\n   *   value: *,\n   * }=} options\n   */\n  constructor(options) {\n    IronMeta[' '](options);\n\n    /** @type {string} */\n    this.type = (options && options.type) || 'default';\n    /** @type {string|null|undefined} */\n    this.key = options && options.key;\n    if (options && 'value' in options) {\n      /** @type {*} */\n      this.value = options.value;\n    }\n  }\n\n  /** @return {*} */\n  get value() {\n    var type = this.type;\n    var key = this.key;\n\n    if (type && key) {\n      return IronMeta.types[type] && IronMeta.types[type][key];\n    }\n  }\n\n  /** @param {*} value */\n  set value(value) {\n    var type = this.type;\n    var key = this.key;\n\n    if (type && key) {\n      type = IronMeta.types[type] = IronMeta.types[type] || {};\n      if (value == null) {\n        delete type[key];\n      } else {\n        type[key] = value;\n      }\n    }\n  }\n\n  /** @return {!Array<*>} */\n  get list() {\n    var type = this.type;\n\n    if (type) {\n      var items = IronMeta.types[this.type];\n      if (!items) {\n        return [];\n      }\n\n      return Object.keys(items).map(function(key) {\n        return metaDatas[this.type][key];\n      }, this);\n    }\n  }\n\n  /**\n   * @param {string} key\n   * @return {*}\n   */\n  byKey(key) {\n    this.key = key;\n    return this.value;\n  }\n};\n\n// This function is used to convince Closure not to remove constructor calls\n// for instances that are not held anywhere. For example, when\n// `new IronMeta({...})` is used only for the side effect of adding a value.\nIronMeta[' '] = function() {};\n\nIronMeta.types = {};\n\nvar metaDatas = IronMeta.types;\n\n/**\n`iron-meta` is a generic element you can use for sharing information across the\nDOM tree. It uses [monostate pattern](http://c2.com/cgi/wiki?MonostatePattern)\nsuch that any instance of iron-meta has access to the shared information. You\ncan use `iron-meta` to share whatever you want (or create an extension [like\nx-meta] for enhancements).\n\nThe `iron-meta` instances containing your actual data can be loaded in an\nimport, or constructed in any way you see fit. The only requirement is that you\ncreate them before you try to access them.\n\nExamples:\n\nIf I create an instance like this:\n\n    <iron-meta key=\"info\" value=\"foo/bar\"></iron-meta>\n\nNote that value=\"foo/bar\" is the metadata I've defined. I could define more\nattributes or use child nodes to define additional metadata.\n\nNow I can access that element (and it's metadata) from any iron-meta instance\nvia the byKey method, e.g.\n\n    meta.byKey('info');\n\nPure imperative form would be like:\n\n    document.createElement('iron-meta').byKey('info');\n\nOr, in a Polymer element, you can include a meta in your template:\n\n    <iron-meta id=\"meta\"></iron-meta>\n    ...\n    this.$.meta.byKey('info');\n\n@group Iron Elements\n@demo demo/index.html\n@element iron-meta\n*/\nPolymer({\n\n  is: 'iron-meta',\n\n  properties: {\n\n    /**\n     * The type of meta-data.  All meta-data of the same type is stored\n     * together.\n     * @type {string}\n     */\n    type: {\n      type: String,\n      value: 'default',\n    },\n\n    /**\n     * The key used to store `value` under the `type` namespace.\n     * @type {?string}\n     */\n    key: {\n      type: String,\n    },\n\n    /**\n     * The meta-data to store or retrieve.\n     * @type {*}\n     */\n    value: {\n      type: String,\n      notify: true,\n    },\n\n    /**\n     * If true, `value` is set to the iron-meta instance itself.\n     */\n    self: {type: Boolean, observer: '_selfChanged'},\n\n    __meta: {type: Boolean, computed: '__computeMeta(type, key, value)'}\n  },\n\n  hostAttributes: {hidden: true},\n\n  __computeMeta: function(type, key, value) {\n    var meta = new IronMeta({type: type, key: key});\n\n    if (value !== undefined && value !== meta.value) {\n      meta.value = value;\n    } else if (this.value !== meta.value) {\n      this.value = meta.value;\n    }\n\n    return meta;\n  },\n\n  get list() {\n    return this.__meta && this.__meta.list;\n  },\n\n  _selfChanged: function(self) {\n    if (self) {\n      this.value = this;\n    }\n  },\n\n  /**\n   * Retrieves meta data value by key.\n   *\n   * @method byKey\n   * @param {string} key The key of the meta-data to be returned.\n   * @return {*}\n   */\n  byKey: function(key) {\n    return new IronMeta({type: this.type, key: key}).value;\n  }\n});\n","/**\n@license\nCopyright (c) 2015 The Polymer Project Authors. All rights reserved.\nThis code may only be used under the BSD style license found at\nhttp://polymer.github.io/LICENSE.txt The complete set of authors may be found at\nhttp://polymer.github.io/AUTHORS.txt The complete set of contributors may be\nfound at http://polymer.github.io/CONTRIBUTORS.txt Code distributed by Google as\npart of the polymer project is also subject to an additional IP rights grant\nfound at http://polymer.github.io/PATENTS.txt\n*/\nimport '@polymer/iron-flex-layout/iron-flex-layout.js';\n\nimport {IronMeta} from '@polymer/iron-meta/iron-meta.js';\nimport {Polymer} from '@polymer/polymer/lib/legacy/polymer-fn.js';\nimport {dom} from '@polymer/polymer/lib/legacy/polymer.dom.js';\nimport {html} from '@polymer/polymer/lib/utils/html-tag.js';\nimport {Base} from '@polymer/polymer/polymer-legacy.js';\n\n/**\n\nThe `iron-icon` element displays an icon. By default an icon renders as a 24px\nsquare.\n\nExample using src:\n\n    <iron-icon src=\"star.png\"></iron-icon>\n\nExample setting size to 32px x 32px:\n\n    <iron-icon class=\"big\" src=\"big_star.png\"></iron-icon>\n\n    <style is=\"custom-style\">\n      .big {\n        --iron-icon-height: 32px;\n        --iron-icon-width: 32px;\n      }\n    </style>\n\nThe iron elements include several sets of icons. To use the default set of\nicons, import `iron-icons.js` and use the `icon` attribute to specify an icon:\n\n    <script type=\"module\">\n      import \"@polymer/iron-icons/iron-icons.js\";\n    </script>\n\n    <iron-icon icon=\"menu\"></iron-icon>\n\nTo use a different built-in set of icons, import the specific\n`iron-icons/<iconset>-icons.js`, and specify the icon as `<iconset>:<icon>`.\nFor example, to use a communication icon, you would use:\n\n    <script type=\"module\">\n      import \"@polymer/iron-icons/communication-icons.js\";\n    </script>\n\n    <iron-icon icon=\"communication:email\"></iron-icon>\n\nYou can also create custom icon sets of bitmap or SVG icons.\n\nExample of using an icon named `cherry` from a custom iconset with the ID\n`fruit`:\n\n    <iron-icon icon=\"fruit:cherry\"></iron-icon>\n\nSee `<iron-iconset>` and `<iron-iconset-svg>` for more information about how to\ncreate a custom iconset.\n\nSee the `iron-icons` demo to see the icons available in the various iconsets.\n\n### Styling\n\nThe following custom properties are available for styling:\n\nCustom property | Description | Default\n----------------|-------------|----------\n`--iron-icon` | Mixin applied to the icon | {}\n`--iron-icon-width` | Width of the icon | `24px`\n`--iron-icon-height` | Height of the icon | `24px`\n`--iron-icon-fill-color` | Fill color of the svg icon | `currentcolor`\n`--iron-icon-stroke-color` | Stroke color of the svg icon | none\n\n@group Iron Elements\n@element iron-icon\n@demo demo/index.html\n@hero hero.svg\n@homepage polymer.github.io\n*/\nPolymer({\n  _template: html`\n    <style>\n      :host {\n        @apply --layout-inline;\n        @apply --layout-center-center;\n        position: relative;\n\n        vertical-align: middle;\n\n        fill: var(--iron-icon-fill-color, currentcolor);\n        stroke: var(--iron-icon-stroke-color, none);\n\n        width: var(--iron-icon-width, 24px);\n        height: var(--iron-icon-height, 24px);\n        @apply --iron-icon;\n      }\n\n      :host([hidden]) {\n        display: none;\n      }\n    </style>\n`,\n\n  is: 'iron-icon',\n\n  properties: {\n\n    /**\n     * The name of the icon to use. The name should be of the form:\n     * `iconset_name:icon_name`.\n     */\n    icon: {type: String},\n\n    /**\n     * The name of the theme to used, if one is specified by the\n     * iconset.\n     */\n    theme: {type: String},\n\n    /**\n     * If using iron-icon without an iconset, you can set the src to be\n     * the URL of an individual icon image file. Note that this will take\n     * precedence over a given icon attribute.\n     */\n    src: {type: String},\n\n    /**\n     * @type {!IronMeta}\n     */\n    _meta: {value: Base.create('iron-meta', {type: 'iconset'})}\n\n  },\n\n  observers: [\n    '_updateIcon(_meta, isAttached)',\n    '_updateIcon(theme, isAttached)',\n    '_srcChanged(src, isAttached)',\n    '_iconChanged(icon, isAttached)'\n  ],\n\n  _DEFAULT_ICONSET: 'icons',\n\n  _iconChanged: function(icon) {\n    var parts = (icon || '').split(':');\n    this._iconName = parts.pop();\n    this._iconsetName = parts.pop() || this._DEFAULT_ICONSET;\n    this._updateIcon();\n  },\n\n  _srcChanged: function(src) {\n    this._updateIcon();\n  },\n\n  _usesIconset: function() {\n    return this.icon || !this.src;\n  },\n\n  /** @suppress {visibility} */\n  _updateIcon: function() {\n    if (this._usesIconset()) {\n      if (this._img && this._img.parentNode) {\n        dom(this.root).removeChild(this._img);\n      }\n      if (this._iconName === '') {\n        if (this._iconset) {\n          this._iconset.removeIcon(this);\n        }\n      } else if (this._iconsetName && this._meta) {\n        this._iconset = /** @type {?Polymer.Iconset} */ (\n            this._meta.byKey(this._iconsetName));\n        if (this._iconset) {\n          this._iconset.applyIcon(this, this._iconName, this.theme);\n          this.unlisten(window, 'iron-iconset-added', '_updateIcon');\n        } else {\n          this.listen(window, 'iron-iconset-added', '_updateIcon');\n        }\n      }\n    } else {\n      if (this._iconset) {\n        this._iconset.removeIcon(this);\n      }\n      if (!this._img) {\n        this._img = document.createElement('img');\n        this._img.style.width = '100%';\n        this._img.style.height = '100%';\n        this._img.draggable = false;\n      }\n      this._img.src = this.src;\n      dom(this.root).appendChild(this._img);\n    }\n  }\n});\n","/**\n@license\nCopyright (c) 2015 The Polymer Project Authors. All rights reserved.\nThis code may only be used under the BSD style license found at\nhttp://polymer.github.io/LICENSE.txt The complete set of authors may be found at\nhttp://polymer.github.io/AUTHORS.txt The complete set of contributors may be\nfound at http://polymer.github.io/CONTRIBUTORS.txt Code distributed by Google as\npart of the polymer project is also subject to an additional IP rights grant\nfound at http://polymer.github.io/PATENTS.txt\n*/\nimport '@polymer/polymer/polymer-legacy.js';\n\nimport {IronMeta} from '@polymer/iron-meta/iron-meta.js';\nimport {Polymer} from '@polymer/polymer/lib/legacy/polymer-fn.js';\nimport {dom} from '@polymer/polymer/lib/legacy/polymer.dom.js';\n/**\n * The `iron-iconset-svg` element allows users to define their own icon sets\n * that contain svg icons. The svg icon elements should be children of the\n * `iron-iconset-svg` element. Multiple icons should be given distinct id's.\n *\n * Using svg elements to create icons has a few advantages over traditional\n * bitmap graphics like jpg or png. Icons that use svg are vector based so\n * they are resolution independent and should look good on any device. They\n * are stylable via css. Icons can be themed, colorized, and even animated.\n *\n * Example:\n *\n *     <iron-iconset-svg name=\"my-svg-icons\" size=\"24\">\n *       <svg>\n *         <defs>\n *           <g id=\"shape\">\n *             <rect x=\"12\" y=\"0\" width=\"12\" height=\"24\" />\n *             <circle cx=\"12\" cy=\"12\" r=\"12\" />\n *           </g>\n *         </defs>\n *       </svg>\n *     </iron-iconset-svg>\n *\n * This will automatically register the icon set \"my-svg-icons\" to the iconset\n * database.  To use these icons from within another element, make a\n * `iron-iconset` element and call the `byId` method\n * to retrieve a given iconset. To apply a particular icon inside an\n * element use the `applyIcon` method. For example:\n *\n *     iconset.applyIcon(iconNode, 'car');\n *\n * @element iron-iconset-svg\n * @demo demo/index.html\n * @implements {Polymer.Iconset}\n */\nPolymer({\n  is: 'iron-iconset-svg',\n\n  properties: {\n\n    /**\n     * The name of the iconset.\n     */\n    name: {type: String, observer: '_nameChanged'},\n\n    /**\n     * The size of an individual icon. Note that icons must be square.\n     */\n    size: {type: Number, value: 24},\n\n    /**\n     * Set to true to enable mirroring of icons where specified when they are\n     * stamped. Icons that should be mirrored should be decorated with a\n     * `mirror-in-rtl` attribute.\n     *\n     * NOTE: For performance reasons, direction will be resolved once per\n     * document per iconset, so moving icons in and out of RTL subtrees will\n     * not cause their mirrored state to change.\n     */\n    rtlMirroring: {type: Boolean, value: false},\n\n    /**\n     * Set to true to measure RTL based on the dir attribute on the body or\n     * html elements (measured on document.body or document.documentElement as\n     * available).\n     */\n    useGlobalRtlAttribute: {type: Boolean, value: false}\n  },\n\n  created: function() {\n    this._meta = new IronMeta({type: 'iconset', key: null, value: null});\n  },\n\n  attached: function() {\n    this.style.display = 'none';\n  },\n\n  /**\n   * Construct an array of all icon names in this iconset.\n   *\n   * @return {!Array} Array of icon names.\n   */\n  getIconNames: function() {\n    this._icons = this._createIconMap();\n    return Object.keys(this._icons).map(function(n) {\n      return this.name + ':' + n;\n    }, this);\n  },\n\n  /**\n   * Applies an icon to the given element.\n   *\n   * An svg icon is prepended to the element's shadowRoot if it exists,\n   * otherwise to the element itself.\n   *\n   * If RTL mirroring is enabled, and the icon is marked to be mirrored in\n   * RTL, the element will be tested (once and only once ever for each\n   * iconset) to determine the direction of the subtree the element is in.\n   * This direction will apply to all future icon applications, although only\n   * icons marked to be mirrored will be affected.\n   *\n   * @method applyIcon\n   * @param {Element} element Element to which the icon is applied.\n   * @param {string} iconName Name of the icon to apply.\n   * @return {?Element} The svg element which renders the icon.\n   */\n  applyIcon: function(element, iconName) {\n    // Remove old svg element\n    this.removeIcon(element);\n    // install new svg element\n    var svg = this._cloneIcon(\n        iconName, this.rtlMirroring && this._targetIsRTL(element));\n    if (svg) {\n      // insert svg element into shadow root, if it exists\n      var pde = dom(element.root || element);\n      pde.insertBefore(svg, pde.childNodes[0]);\n      return element._svgIcon = svg;\n    }\n    return null;\n  },\n\n  /**\n   * Remove an icon from the given element by undoing the changes effected\n   * by `applyIcon`.\n   *\n   * @param {Element} element The element from which the icon is removed.\n   */\n  removeIcon: function(element) {\n    // Remove old svg element\n    if (element._svgIcon) {\n      dom(element.root || element).removeChild(element._svgIcon);\n      element._svgIcon = null;\n    }\n  },\n\n  /**\n   * Measures and memoizes the direction of the element. Note that this\n   * measurement is only done once and the result is memoized for future\n   * invocations.\n   */\n  _targetIsRTL: function(target) {\n    if (this.__targetIsRTL == null) {\n      if (this.useGlobalRtlAttribute) {\n        var globalElement =\n            (document.body && document.body.hasAttribute('dir')) ?\n            document.body :\n            document.documentElement;\n\n        this.__targetIsRTL = globalElement.getAttribute('dir') === 'rtl';\n      } else {\n        if (target && target.nodeType !== Node.ELEMENT_NODE) {\n          target = target.host;\n        }\n\n        this.__targetIsRTL =\n            target && window.getComputedStyle(target)['direction'] === 'rtl';\n      }\n    }\n\n    return this.__targetIsRTL;\n  },\n\n  /**\n   *\n   * When name is changed, register iconset metadata\n   *\n   */\n  _nameChanged: function() {\n    this._meta.value = null;\n    this._meta.key = this.name;\n    this._meta.value = this;\n\n    this.async(function() {\n      this.fire('iron-iconset-added', this, {node: window});\n    });\n  },\n\n  /**\n   * Create a map of child SVG elements by id.\n   *\n   * @return {!Object} Map of id's to SVG elements.\n   */\n  _createIconMap: function() {\n    // Objects chained to Object.prototype (`{}`) have members. Specifically,\n    // on FF there is a `watch` method that confuses the icon map, so we\n    // need to use a null-based object here.\n    var icons = Object.create(null);\n    dom(this).querySelectorAll('[id]').forEach(function(icon) {\n      icons[icon.id] = icon;\n    });\n    return icons;\n  },\n\n  /**\n   * Produce installable clone of the SVG element matching `id` in this\n   * iconset, or `undefined` if there is no matching element.\n   *\n   * @return {Element} Returns an installable clone of the SVG element\n   * matching `id`.\n   */\n  _cloneIcon: function(id, mirrorAllowed) {\n    // create the icon map on-demand, since the iconset itself has no discrete\n    // signal to know when it's children are fully parsed\n    this._icons = this._icons || this._createIconMap();\n    return this._prepareSvgClone(this._icons[id], this.size, mirrorAllowed);\n  },\n\n  /**\n   * @param {Element} sourceSvg\n   * @param {number} size\n   * @param {Boolean} mirrorAllowed\n   * @return {Element}\n   */\n  _prepareSvgClone: function(sourceSvg, size, mirrorAllowed) {\n    if (sourceSvg) {\n      var content = sourceSvg.cloneNode(true),\n          svg = document.createElementNS('http://www.w3.org/2000/svg', 'svg'),\n          viewBox =\n              content.getAttribute('viewBox') || '0 0 ' + size + ' ' + size,\n          cssText =\n              'pointer-events: none; display: block; width: 100%; height: 100%;';\n\n      if (mirrorAllowed && content.hasAttribute('mirror-in-rtl')) {\n        cssText +=\n            '-webkit-transform:scale(-1,1);transform:scale(-1,1);transform-origin:center;';\n      }\n\n      svg.setAttribute('viewBox', viewBox);\n      svg.setAttribute('preserveAspectRatio', 'xMidYMid meet');\n      svg.setAttribute('focusable', 'false');\n      // TODO(dfreedm): `pointer-events: none` works around\n      // https://crbug.com/370136\n      // TODO(sjmiles): inline style may not be ideal, but avoids requiring a\n      // shadow-root\n      svg.style.cssText = cssText;\n      svg.appendChild(content).removeAttribute('id');\n      return svg;\n    }\n    return null;\n  }\n\n});\n","/**\n@license\nCopyright (c) 2014 The Polymer Project Authors. All rights reserved.\nThis code may only be used under the BSD style license found at\nhttp://polymer.github.io/LICENSE.txt The complete set of authors may be found at\nhttp://polymer.github.io/AUTHORS.txt The complete set of contributors may be\nfound at http://polymer.github.io/CONTRIBUTORS.txt Code distributed by Google as\npart of the polymer project is also subject to an additional IP rights grant\nfound at http://polymer.github.io/PATENTS.txt\n*/\nimport '@polymer/iron-icon/iron-icon.js';\nimport '@polymer/iron-iconset-svg/iron-iconset-svg.js';\n\nimport {html} from '@polymer/polymer/lib/utils/html-tag.js';\n\nconst template = html`<iron-iconset-svg name=\"social\" size=\"24\">\n<svg><defs>\n<g id=\"cake\"><path d=\"M12 6c1.11 0 2-.9 2-2 0-.38-.1-.73-.29-1.03L12 0l-1.71 2.97c-.19.3-.29.65-.29 1.03 0 1.1.9 2 2 2zm4.6 9.99l-1.07-1.07-1.08 1.07c-1.3 1.3-3.58 1.31-4.89 0l-1.07-1.07-1.09 1.07C6.75 16.64 5.88 17 4.96 17c-.73 0-1.4-.23-1.96-.61V21c0 .55.45 1 1 1h16c.55 0 1-.45 1-1v-4.61c-.56.38-1.23.61-1.96.61-.92 0-1.79-.36-2.44-1.01zM18 9h-5V7h-2v2H6c-1.66 0-3 1.34-3 3v1.54c0 1.08.88 1.96 1.96 1.96.52 0 1.02-.2 1.38-.57l2.14-2.13 2.13 2.13c.74.74 2.03.74 2.77 0l2.14-2.13 2.13 2.13c.37.37.86.57 1.38.57 1.08 0 1.96-.88 1.96-1.96V12C21 10.34 19.66 9 18 9z\"></path></g>\n<g id=\"domain\"><path d=\"M12 7V3H2v18h20V7H12zM6 19H4v-2h2v2zm0-4H4v-2h2v2zm0-4H4V9h2v2zm0-4H4V5h2v2zm4 12H8v-2h2v2zm0-4H8v-2h2v2zm0-4H8V9h2v2zm0-4H8V5h2v2zm10 12h-8v-2h2v-2h-2v-2h2v-2h-2V9h8v10zm-2-8h-2v2h2v-2zm0 4h-2v2h2v-2z\"></path></g>\n<g id=\"group\"><path d=\"M16 11c1.66 0 2.99-1.34 2.99-3S17.66 5 16 5c-1.66 0-3 1.34-3 3s1.34 3 3 3zm-8 0c1.66 0 2.99-1.34 2.99-3S9.66 5 8 5C6.34 5 5 6.34 5 8s1.34 3 3 3zm0 2c-2.33 0-7 1.17-7 3.5V19h14v-2.5c0-2.33-4.67-3.5-7-3.5zm8 0c-.29 0-.62.02-.97.05 1.16.84 1.97 1.97 1.97 3.45V19h6v-2.5c0-2.33-4.67-3.5-7-3.5z\"></path></g>\n<g id=\"group-add\"><path d=\"M8 10H5V7H3v3H0v2h3v3h2v-3h3v-2zm10 1c1.66 0 2.99-1.34 2.99-3S19.66 5 18 5c-.32 0-.63.05-.91.14.57.81.9 1.79.9 2.86s-.34 2.04-.9 2.86c.28.09.59.14.91.14zm-5 0c1.66 0 2.99-1.34 2.99-3S14.66 5 13 5c-1.66 0-3 1.34-3 3s1.34 3 3 3zm6.62 2.16c.83.73 1.38 1.66 1.38 2.84v2h3v-2c0-1.54-2.37-2.49-4.38-2.84zM13 13c-2 0-6 1-6 3v2h12v-2c0-2-4-3-6-3z\"></path></g>\n<g id=\"location-city\"><path d=\"M15 11V5l-3-3-3 3v2H3v14h18V11h-6zm-8 8H5v-2h2v2zm0-4H5v-2h2v2zm0-4H5V9h2v2zm6 8h-2v-2h2v2zm0-4h-2v-2h2v2zm0-4h-2V9h2v2zm0-4h-2V5h2v2zm6 12h-2v-2h2v2zm0-4h-2v-2h2v2z\"></path></g>\n<g id=\"mood\"><path d=\"M11.99 2C6.47 2 2 6.48 2 12s4.47 10 9.99 10C17.52 22 22 17.52 22 12S17.52 2 11.99 2zM12 20c-4.42 0-8-3.58-8-8s3.58-8 8-8 8 3.58 8 8-3.58 8-8 8zm3.5-9c.83 0 1.5-.67 1.5-1.5S16.33 8 15.5 8 14 8.67 14 9.5s.67 1.5 1.5 1.5zm-7 0c.83 0 1.5-.67 1.5-1.5S9.33 8 8.5 8 7 8.67 7 9.5 7.67 11 8.5 11zm3.5 6.5c2.33 0 4.31-1.46 5.11-3.5H6.89c.8 2.04 2.78 3.5 5.11 3.5z\"></path></g>\n<g id=\"mood-bad\"><path d=\"M11.99 2C6.47 2 2 6.48 2 12s4.47 10 9.99 10C17.52 22 22 17.52 22 12S17.52 2 11.99 2zM12 20c-4.42 0-8-3.58-8-8s3.58-8 8-8 8 3.58 8 8-3.58 8-8 8zm3.5-9c.83 0 1.5-.67 1.5-1.5S16.33 8 15.5 8 14 8.67 14 9.5s.67 1.5 1.5 1.5zm-7 0c.83 0 1.5-.67 1.5-1.5S9.33 8 8.5 8 7 8.67 7 9.5 7.67 11 8.5 11zm3.5 3c-2.33 0-4.31 1.46-5.11 3.5h10.22c-.8-2.04-2.78-3.5-5.11-3.5z\"></path></g>\n<g id=\"notifications\"><path d=\"M12 22c1.1 0 2-.9 2-2h-4c0 1.1.89 2 2 2zm6-6v-5c0-3.07-1.64-5.64-4.5-6.32V4c0-.83-.67-1.5-1.5-1.5s-1.5.67-1.5 1.5v.68C7.63 5.36 6 7.92 6 11v5l-2 2v1h16v-1l-2-2z\"></path></g>\n<g id=\"notifications-active\"><path d=\"M7.58 4.08L6.15 2.65C3.75 4.48 2.17 7.3 2.03 10.5h2c.15-2.65 1.51-4.97 3.55-6.42zm12.39 6.42h2c-.15-3.2-1.73-6.02-4.12-7.85l-1.42 1.43c2.02 1.45 3.39 3.77 3.54 6.42zM18 11c0-3.07-1.64-5.64-4.5-6.32V4c0-.83-.67-1.5-1.5-1.5s-1.5.67-1.5 1.5v.68C7.63 5.36 6 7.92 6 11v5l-2 2v1h16v-1l-2-2v-5zm-6 11c.14 0 .27-.01.4-.04.65-.14 1.18-.58 1.44-1.18.1-.24.15-.5.15-.78h-4c.01 1.1.9 2 2.01 2z\"></path></g>\n<g id=\"notifications-none\"><path d=\"M12 22c1.1 0 2-.9 2-2h-4c0 1.1.9 2 2 2zm6-6v-5c0-3.07-1.63-5.64-4.5-6.32V4c0-.83-.67-1.5-1.5-1.5s-1.5.67-1.5 1.5v.68C7.64 5.36 6 7.92 6 11v5l-2 2v1h16v-1l-2-2zm-2 1H8v-6c0-2.48 1.51-4.5 4-4.5s4 2.02 4 4.5v6z\"></path></g>\n<g id=\"notifications-off\"><path d=\"M20 18.69L7.84 6.14 5.27 3.49 4 4.76l2.8 2.8v.01c-.52.99-.8 2.16-.8 3.42v5l-2 2v1h13.73l2 2L21 19.72l-1-1.03zM12 22c1.11 0 2-.89 2-2h-4c0 1.11.89 2 2 2zm6-7.32V11c0-3.08-1.64-5.64-4.5-6.32V4c0-.83-.67-1.5-1.5-1.5s-1.5.67-1.5 1.5v.68c-.15.03-.29.08-.42.12-.1.03-.2.07-.3.11h-.01c-.01 0-.01 0-.02.01-.23.09-.46.2-.68.31 0 0-.01 0-.01.01L18 14.68z\"></path></g>\n<g id=\"notifications-paused\"><path d=\"M12 22c1.1 0 2-.9 2-2h-4c0 1.1.89 2 2 2zm6-6v-5c0-3.07-1.64-5.64-4.5-6.32V4c0-.83-.67-1.5-1.5-1.5s-1.5.67-1.5 1.5v.68C7.63 5.36 6 7.93 6 11v5l-2 2v1h16v-1l-2-2zm-3.5-6.2l-2.8 3.4h2.8V15h-5v-1.8l2.8-3.4H9.5V8h5v1.8z\"></path></g>\n<g id=\"pages\"><path d=\"M3 5v6h5L7 7l4 1V3H5c-1.1 0-2 .9-2 2zm5 8H3v6c0 1.1.9 2 2 2h6v-5l-4 1 1-4zm9 4l-4-1v5h6c1.1 0 2-.9 2-2v-6h-5l1 4zm2-14h-6v5l4-1-1 4h5V5c0-1.1-.9-2-2-2z\"></path></g>\n<g id=\"party-mode\"><path d=\"M20 4h-3.17L15 2H9L7.17 4H4c-1.1 0-2 .9-2 2v12c0 1.1.9 2 2 2h16c1.1 0 2-.9 2-2V6c0-1.1-.9-2-2-2zm-8 3c1.63 0 3.06.79 3.98 2H12c-1.66 0-3 1.34-3 3 0 .35.07.69.18 1H7.1c-.06-.32-.1-.66-.1-1 0-2.76 2.24-5 5-5zm0 10c-1.63 0-3.06-.79-3.98-2H12c1.66 0 3-1.34 3-3 0-.35-.07-.69-.18-1h2.08c.07.32.1.66.1 1 0 2.76-2.24 5-5 5z\"></path></g>\n<g id=\"people\"><path d=\"M16 11c1.66 0 2.99-1.34 2.99-3S17.66 5 16 5c-1.66 0-3 1.34-3 3s1.34 3 3 3zm-8 0c1.66 0 2.99-1.34 2.99-3S9.66 5 8 5C6.34 5 5 6.34 5 8s1.34 3 3 3zm0 2c-2.33 0-7 1.17-7 3.5V19h14v-2.5c0-2.33-4.67-3.5-7-3.5zm8 0c-.29 0-.62.02-.97.05 1.16.84 1.97 1.97 1.97 3.45V19h6v-2.5c0-2.33-4.67-3.5-7-3.5z\"></path></g>\n<g id=\"people-outline\"><path d=\"M16.5 13c-1.2 0-3.07.34-4.5 1-1.43-.67-3.3-1-4.5-1C5.33 13 1 14.08 1 16.25V19h22v-2.75c0-2.17-4.33-3.25-6.5-3.25zm-4 4.5h-10v-1.25c0-.54 2.56-1.75 5-1.75s5 1.21 5 1.75v1.25zm9 0H14v-1.25c0-.46-.2-.86-.52-1.22.88-.3 1.96-.53 3.02-.53 2.44 0 5 1.21 5 1.75v1.25zM7.5 12c1.93 0 3.5-1.57 3.5-3.5S9.43 5 7.5 5 4 6.57 4 8.5 5.57 12 7.5 12zm0-5.5c1.1 0 2 .9 2 2s-.9 2-2 2-2-.9-2-2 .9-2 2-2zm9 5.5c1.93 0 3.5-1.57 3.5-3.5S18.43 5 16.5 5 13 6.57 13 8.5s1.57 3.5 3.5 3.5zm0-5.5c1.1 0 2 .9 2 2s-.9 2-2 2-2-.9-2-2 .9-2 2-2z\"></path></g>\n<g id=\"person\"><path d=\"M12 12c2.21 0 4-1.79 4-4s-1.79-4-4-4-4 1.79-4 4 1.79 4 4 4zm0 2c-2.67 0-8 1.34-8 4v2h16v-2c0-2.66-5.33-4-8-4z\"></path></g>\n<g id=\"person-add\"><path d=\"M15 12c2.21 0 4-1.79 4-4s-1.79-4-4-4-4 1.79-4 4 1.79 4 4 4zm-9-2V7H4v3H1v2h3v3h2v-3h3v-2H6zm9 4c-2.67 0-8 1.34-8 4v2h16v-2c0-2.66-5.33-4-8-4z\"></path></g>\n<g id=\"person-outline\"><path d=\"M12 5.9c1.16 0 2.1.94 2.1 2.1s-.94 2.1-2.1 2.1S9.9 9.16 9.9 8s.94-2.1 2.1-2.1m0 9c2.97 0 6.1 1.46 6.1 2.1v1.1H5.9V17c0-.64 3.13-2.1 6.1-2.1M12 4C9.79 4 8 5.79 8 8s1.79 4 4 4 4-1.79 4-4-1.79-4-4-4zm0 9c-2.67 0-8 1.34-8 4v3h16v-3c0-2.66-5.33-4-8-4z\"></path></g>\n<g id=\"plus-one\"><path d=\"M10 8H8v4H4v2h4v4h2v-4h4v-2h-4zm4.5-1.92V7.9l2.5-.5V18h2V5z\"></path></g>\n<g id=\"poll\"><path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"></path></g>\n<g id=\"public\"><path d=\"M12 2C6.48 2 2 6.48 2 12s4.48 10 10 10 10-4.48 10-10S17.52 2 12 2zm-1 17.93c-3.95-.49-7-3.85-7-7.93 0-.62.08-1.21.21-1.79L9 15v1c0 1.1.9 2 2 2v1.93zm6.9-2.54c-.26-.81-1-1.39-1.9-1.39h-1v-3c0-.55-.45-1-1-1H8v-2h2c.55 0 1-.45 1-1V7h2c1.1 0 2-.9 2-2v-.41c2.93 1.19 5 4.06 5 7.41 0 2.08-.8 3.97-2.1 5.39z\"></path></g>\n<g id=\"school\"><path d=\"M5 13.18v4L12 21l7-3.82v-4L12 17l-7-3.82zM12 3L1 9l11 6 9-4.91V17h2V9L12 3z\"></path></g>\n<g id=\"sentiment-dissatisfied\"><circle cx=\"15.5\" cy=\"9.5\" r=\"1.5\"></circle><circle cx=\"8.5\" cy=\"9.5\" r=\"1.5\"></circle><path d=\"M11.99 2C6.47 2 2 6.48 2 12s4.47 10 9.99 10C17.52 22 22 17.52 22 12S17.52 2 11.99 2zM12 20c-4.42 0-8-3.58-8-8s3.58-8 8-8 8 3.58 8 8-3.58 8-8 8zm0-6c-2.33 0-4.32 1.45-5.12 3.5h1.67c.69-1.19 1.97-2 3.45-2s2.75.81 3.45 2h1.67c-.8-2.05-2.79-3.5-5.12-3.5z\"></path></g>\n<g id=\"sentiment-neutral\"><path d=\"M9 14h6v1.5H9z\"></path><circle cx=\"15.5\" cy=\"9.5\" r=\"1.5\"></circle><circle cx=\"8.5\" cy=\"9.5\" r=\"1.5\"></circle><path d=\"M11.99 2C6.47 2 2 6.48 2 12s4.47 10 9.99 10C17.52 22 22 17.52 22 12S17.52 2 11.99 2zM12 20c-4.42 0-8-3.58-8-8s3.58-8 8-8 8 3.58 8 8-3.58 8-8 8z\"></path></g>\n<g id=\"sentiment-satisfied\"><circle cx=\"15.5\" cy=\"9.5\" r=\"1.5\"></circle><circle cx=\"8.5\" cy=\"9.5\" r=\"1.5\"></circle><path d=\"M11.99 2C6.47 2 2 6.48 2 12s4.47 10 9.99 10C17.52 22 22 17.52 22 12S17.52 2 11.99 2zM12 20c-4.42 0-8-3.58-8-8s3.58-8 8-8 8 3.58 8 8-3.58 8-8 8zm0-4c-1.48 0-2.75-.81-3.45-2H6.88c.8 2.05 2.79 3.5 5.12 3.5s4.32-1.45 5.12-3.5h-1.67c-.7 1.19-1.97 2-3.45 2z\"></path></g>\n<g id=\"sentiment-very-dissatisfied\"><path d=\"M11.99 2C6.47 2 2 6.47 2 12s4.47 10 9.99 10S22 17.53 22 12 17.52 2 11.99 2zM12 20c-4.42 0-8-3.58-8-8s3.58-8 8-8 8 3.58 8 8-3.58 8-8 8zm4.18-12.24l-1.06 1.06-1.06-1.06L13 8.82l1.06 1.06L13 10.94 14.06 12l1.06-1.06L16.18 12l1.06-1.06-1.06-1.06 1.06-1.06zM7.82 12l1.06-1.06L9.94 12 11 10.94 9.94 9.88 11 8.82 9.94 7.76 8.88 8.82 7.82 7.76 6.76 8.82l1.06 1.06-1.06 1.06zM12 14c-2.33 0-4.31 1.46-5.11 3.5h10.22c-.8-2.04-2.78-3.5-5.11-3.5z\"></path></g>\n<g id=\"sentiment-very-satisfied\"><path d=\"M11.99 2C6.47 2 2 6.47 2 12s4.47 10 9.99 10S22 17.53 22 12 17.52 2 11.99 2zM12 20c-4.42 0-8-3.58-8-8s3.58-8 8-8 8 3.58 8 8-3.58 8-8 8zm1-10.06L14.06 11l1.06-1.06L16.18 11l1.06-1.06-2.12-2.12zm-4.12 0L9.94 11 11 9.94 8.88 7.82 6.76 9.94 7.82 11zM12 17.5c2.33 0 4.31-1.46 5.11-3.5H6.89c.8 2.04 2.78 3.5 5.11 3.5z\"></path></g>\n<g id=\"share\"><path d=\"M18 16.08c-.76 0-1.44.3-1.96.77L8.91 12.7c.05-.23.09-.46.09-.7s-.04-.47-.09-.7l7.05-4.11c.54.5 1.25.81 2.04.81 1.66 0 3-1.34 3-3s-1.34-3-3-3-3 1.34-3 3c0 .24.04.47.09.7L8.04 9.81C7.5 9.31 6.79 9 6 9c-1.66 0-3 1.34-3 3s1.34 3 3 3c.79 0 1.5-.31 2.04-.81l7.12 4.16c-.05.21-.08.43-.08.65 0 1.61 1.31 2.92 2.92 2.92 1.61 0 2.92-1.31 2.92-2.92s-1.31-2.92-2.92-2.92z\"></path></g>\n<g id=\"whatshot\"><path d=\"M13.5.67s.74 2.65.74 4.8c0 2.06-1.35 3.73-3.41 3.73-2.07 0-3.63-1.67-3.63-3.73l.03-.36C5.21 7.51 4 10.62 4 14c0 4.42 3.58 8 8 8s8-3.58 8-8C20 8.61 17.41 3.8 13.5.67zM11.71 19c-1.78 0-3.22-1.4-3.22-3.14 0-1.62 1.05-2.76 2.81-3.12 1.77-.36 3.6-1.21 4.62-2.58.39 1.29.59 2.65.59 4.04 0 2.65-2.15 4.8-4.8 4.8z\"></path></g>\n</defs></svg>\n</iron-iconset-svg>`;\n\ndocument.head.appendChild(template.content);\n","/**\n@license\nCopyright (c) 2014 The Polymer Project Authors. All rights reserved.\nThis code may only be used under the BSD style license found at\nhttp://polymer.github.io/LICENSE.txt The complete set of authors may be found at\nhttp://polymer.github.io/AUTHORS.txt The complete set of contributors may be\nfound at http://polymer.github.io/CONTRIBUTORS.txt Code distributed by Google as\npart of the polymer project is also subject to an additional IP rights grant\nfound at http://polymer.github.io/PATENTS.txt\n*/\nimport '@polymer/iron-icon/iron-icon.js';\nimport '@polymer/iron-iconset-svg/iron-iconset-svg.js';\n\nimport {html} from '@polymer/polymer/lib/utils/html-tag.js';\n\nconst template = html`<iron-iconset-svg name=\"av\" size=\"24\">\n<svg><defs>\n<g id=\"add-to-queue\"><path d=\"M21 3H3c-1.11 0-2 .89-2 2v12c0 1.1.89 2 2 2h5v2h8v-2h5c1.1 0 1.99-.9 1.99-2L23 5c0-1.11-.9-2-2-2zm0 14H3V5h18v12zm-5-7v2h-3v3h-2v-3H8v-2h3V7h2v3h3z\"></path></g>\n<g id=\"airplay\"><path d=\"M6 22h12l-6-6zM21 3H3c-1.1 0-2 .9-2 2v12c0 1.1.9 2 2 2h4v-2H3V5h18v12h-4v2h4c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2z\"></path></g>\n<g id=\"album\"><path d=\"M12 2C6.48 2 2 6.48 2 12s4.48 10 10 10 10-4.48 10-10S17.52 2 12 2zm0 14.5c-2.49 0-4.5-2.01-4.5-4.5S9.51 7.5 12 7.5s4.5 2.01 4.5 4.5-2.01 4.5-4.5 4.5zm0-5.5c-.55 0-1 .45-1 1s.45 1 1 1 1-.45 1-1-.45-1-1-1z\"></path></g>\n<g id=\"art-track\"><path d=\"M22 13h-8v-2h8v2zm0-6h-8v2h8V7zm-8 10h8v-2h-8v2zm-2-8v6c0 1.1-.9 2-2 2H4c-1.1 0-2-.9-2-2V9c0-1.1.9-2 2-2h6c1.1 0 2 .9 2 2zm-1.5 6l-2.25-3-1.75 2.26-1.25-1.51L3.5 15h7z\"></path></g>\n<g id=\"av-timer\"><path d=\"M11 17c0 .55.45 1 1 1s1-.45 1-1-.45-1-1-1-1 .45-1 1zm0-14v4h2V5.08c3.39.49 6 3.39 6 6.92 0 3.87-3.13 7-7 7s-7-3.13-7-7c0-1.68.59-3.22 1.58-4.42L12 13l1.41-1.41-6.8-6.8v.02C4.42 6.45 3 9.05 3 12c0 4.97 4.02 9 9 9 4.97 0 9-4.03 9-9s-4.03-9-9-9h-1zm7 9c0-.55-.45-1-1-1s-1 .45-1 1 .45 1 1 1 1-.45 1-1zM6 12c0 .55.45 1 1 1s1-.45 1-1-.45-1-1-1-1 .45-1 1z\"></path></g>\n<g id=\"branding-watermark\"><path d=\"M21 3H3c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h18c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zm0 16h-9v-6h9v6z\"></path></g>\n<g id=\"call-to-action\"><path d=\"M21 3H3c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h18c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zm0 16H3v-3h18v3z\"></path></g>\n<g id=\"closed-caption\"><path d=\"M19 4H5c-1.11 0-2 .9-2 2v12c0 1.1.89 2 2 2h14c1.1 0 2-.9 2-2V6c0-1.1-.9-2-2-2zm-8 7H9.5v-.5h-2v3h2V13H11v1c0 .55-.45 1-1 1H7c-.55 0-1-.45-1-1v-4c0-.55.45-1 1-1h3c.55 0 1 .45 1 1v1zm7 0h-1.5v-.5h-2v3h2V13H18v1c0 .55-.45 1-1 1h-3c-.55 0-1-.45-1-1v-4c0-.55.45-1 1-1h3c.55 0 1 .45 1 1v1z\"></path></g>\n<g id=\"equalizer\"><path d=\"M10 20h4V4h-4v16zm-6 0h4v-8H4v8zM16 9v11h4V9h-4z\"></path></g>\n<g id=\"explicit\"><path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zm-4 6h-4v2h4v2h-4v2h4v2H9V7h6v2z\"></path></g>\n<g id=\"fast-forward\"><path d=\"M4 18l8.5-6L4 6v12zm9-12v12l8.5-6L13 6z\"></path></g>\n<g id=\"fast-rewind\"><path d=\"M11 18V6l-8.5 6 8.5 6zm.5-6l8.5 6V6l-8.5 6z\"></path></g>\n<g id=\"featured-play-list\"><path d=\"M21 3H3c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h18c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zm-9 8H3V9h9v2zm0-4H3V5h9v2z\"></path></g>\n<g id=\"featured-video\"><path d=\"M21 3H3c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h18c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zm-9 9H3V5h9v7z\"></path></g>\n<g id=\"fiber-dvr\"><path d=\"M17.5 10.5h2v1h-2zm-13 0h2v3h-2zM21 3H3c-1.11 0-2 .89-2 2v14c0 1.1.89 2 2 2h18c1.11 0 2-.9 2-2V5c0-1.11-.89-2-2-2zM8 13.5c0 .85-.65 1.5-1.5 1.5H3V9h3.5c.85 0 1.5.65 1.5 1.5v3zm4.62 1.5h-1.5L9.37 9h1.5l1 3.43 1-3.43h1.5l-1.75 6zM21 11.5c0 .6-.4 1.15-.9 1.4L21 15h-1.5l-.85-2H17.5v2H16V9h3.5c.85 0 1.5.65 1.5 1.5v1z\"></path></g>\n<g id=\"fiber-manual-record\"><circle cx=\"12\" cy=\"12\" r=\"8\"></circle></g>\n<g id=\"fiber-new\"><path d=\"M20 4H4c-1.11 0-1.99.89-1.99 2L2 18c0 1.11.89 2 2 2h16c1.11 0 2-.89 2-2V6c0-1.11-.89-2-2-2zM8.5 15H7.3l-2.55-3.5V15H3.5V9h1.25l2.5 3.5V9H8.5v6zm5-4.74H11v1.12h2.5v1.26H11v1.11h2.5V15h-4V9h4v1.26zm7 3.74c0 .55-.45 1-1 1h-4c-.55 0-1-.45-1-1V9h1.25v4.51h1.13V9.99h1.25v3.51h1.12V9h1.25v5z\"></path></g>\n<g id=\"fiber-pin\"><path d=\"M5.5 10.5h2v1h-2zM20 4H4c-1.11 0-1.99.89-1.99 2L2 18c0 1.11.89 2 2 2h16c1.11 0 2-.89 2-2V6c0-1.11-.89-2-2-2zM9 11.5c0 .85-.65 1.5-1.5 1.5h-2v2H4V9h3.5c.85 0 1.5.65 1.5 1.5v1zm3.5 3.5H11V9h1.5v6zm7.5 0h-1.2l-2.55-3.5V15H15V9h1.25l2.5 3.5V9H20v6z\"></path></g>\n<g id=\"fiber-smart-record\"><g><circle cx=\"9\" cy=\"12\" r=\"8\"></circle><path d=\"M17 4.26v2.09c2.33.82 4 3.04 4 5.65s-1.67 4.83-4 5.65v2.09c3.45-.89 6-4.01 6-7.74s-2.55-6.85-6-7.74z\"></path></g></g>\n<g id=\"forward-10\"><path d=\"M4 13c0 4.4 3.6 8 8 8s8-3.6 8-8h-2c0 3.3-2.7 6-6 6s-6-2.7-6-6 2.7-6 6-6v4l5-5-5-5v4c-4.4 0-8 3.6-8 8zm6.8 3H10v-3.3L9 13v-.7l1.8-.6h.1V16zm4.3-1.8c0 .3 0 .6-.1.8l-.3.6s-.3.3-.5.3-.4.1-.6.1-.4 0-.6-.1-.3-.2-.5-.3-.2-.3-.3-.6-.1-.5-.1-.8v-.7c0-.3 0-.6.1-.8l.3-.6s.3-.3.5-.3.4-.1.6-.1.4 0 .6.1.3.2.5.3.2.3.3.6.1.5.1.8v.7zm-.8-.8v-.5s-.1-.2-.1-.3-.1-.1-.2-.2-.2-.1-.3-.1-.2 0-.3.1l-.2.2s-.1.2-.1.3v2s.1.2.1.3.1.1.2.2.2.1.3.1.2 0 .3-.1l.2-.2s.1-.2.1-.3v-1.5z\"></path></g>\n<g id=\"forward-30\"><path d=\"M9.6 13.5h.4c.2 0 .4-.1.5-.2s.2-.2.2-.4v-.2s-.1-.1-.1-.2-.1-.1-.2-.1h-.5s-.1.1-.2.1-.1.1-.1.2v.2h-1c0-.2 0-.3.1-.5s.2-.3.3-.4.3-.2.4-.2.4-.1.5-.1c.2 0 .4 0 .6.1s.3.1.5.2.2.2.3.4.1.3.1.5v.3s-.1.2-.1.3-.1.2-.2.2-.2.1-.3.2c.2.1.4.2.5.4s.2.4.2.6c0 .2 0 .4-.1.5s-.2.3-.3.4-.3.2-.5.2-.4.1-.6.1c-.2 0-.4 0-.5-.1s-.3-.1-.5-.2-.2-.2-.3-.4-.1-.4-.1-.6h.8v.2s.1.1.1.2.1.1.2.1h.5s.1-.1.2-.1.1-.1.1-.2v-.5s-.1-.1-.1-.2-.1-.1-.2-.1h-.6v-.7zm5.7.7c0 .3 0 .6-.1.8l-.3.6s-.3.3-.5.3-.4.1-.6.1-.4 0-.6-.1-.3-.2-.5-.3-.2-.3-.3-.6-.1-.5-.1-.8v-.7c0-.3 0-.6.1-.8l.3-.6s.3-.3.5-.3.4-.1.6-.1.4 0 .6.1.3.2.5.3.2.3.3.6.1.5.1.8v.7zm-.9-.8v-.5s-.1-.2-.1-.3-.1-.1-.2-.2-.2-.1-.3-.1-.2 0-.3.1l-.2.2s-.1.2-.1.3v2s.1.2.1.3.1.1.2.2.2.1.3.1.2 0 .3-.1l.2-.2s.1-.2.1-.3v-1.5zM4 13c0 4.4 3.6 8 8 8s8-3.6 8-8h-2c0 3.3-2.7 6-6 6s-6-2.7-6-6 2.7-6 6-6v4l5-5-5-5v4c-4.4 0-8 3.6-8 8z\"></path></g>\n<g id=\"forward-5\"><path d=\"M4 13c0 4.4 3.6 8 8 8s8-3.6 8-8h-2c0 3.3-2.7 6-6 6s-6-2.7-6-6 2.7-6 6-6v4l5-5-5-5v4c-4.4 0-8 3.6-8 8zm6.7.9l.2-2.2h2.4v.7h-1.7l-.1.9s.1 0 .1-.1.1 0 .1-.1.1 0 .2 0h.2c.2 0 .4 0 .5.1s.3.2.4.3.2.3.3.5.1.4.1.6c0 .2 0 .4-.1.5s-.1.3-.3.5-.3.2-.5.3-.4.1-.6.1c-.2 0-.4 0-.5-.1s-.3-.1-.5-.2-.2-.2-.3-.4-.1-.3-.1-.5h.8c0 .2.1.3.2.4s.2.1.4.1c.1 0 .2 0 .3-.1l.2-.2s.1-.2.1-.3v-.6l-.1-.2-.2-.2s-.2-.1-.3-.1h-.2s-.1 0-.2.1-.1 0-.1.1-.1.1-.1.1h-.6z\"></path></g>\n<g id=\"games\"><path d=\"M15 7.5V2H9v5.5l3 3 3-3zM7.5 9H2v6h5.5l3-3-3-3zM9 16.5V22h6v-5.5l-3-3-3 3zM16.5 9l-3 3 3 3H22V9h-5.5z\"></path></g>\n<g id=\"hd\"><path d=\"M19 3H5c-1.11 0-2 .9-2 2v14c0 1.1.89 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zm-8 12H9.5v-2h-2v2H6V9h1.5v2.5h2V9H11v6zm2-6h4c.55 0 1 .45 1 1v4c0 .55-.45 1-1 1h-4V9zm1.5 4.5h2v-3h-2v3z\"></path></g>\n<g id=\"hearing\"><path d=\"M17 20c-.29 0-.56-.06-.76-.15-.71-.37-1.21-.88-1.71-2.38-.51-1.56-1.47-2.29-2.39-3-.79-.61-1.61-1.24-2.32-2.53C9.29 10.98 9 9.93 9 9c0-2.8 2.2-5 5-5s5 2.2 5 5h2c0-3.93-3.07-7-7-7S7 5.07 7 9c0 1.26.38 2.65 1.07 3.9.91 1.65 1.98 2.48 2.85 3.15.81.62 1.39 1.07 1.71 2.05.6 1.82 1.37 2.84 2.73 3.55.51.23 1.07.35 1.64.35 2.21 0 4-1.79 4-4h-2c0 1.1-.9 2-2 2zM7.64 2.64L6.22 1.22C4.23 3.21 3 5.96 3 9s1.23 5.79 3.22 7.78l1.41-1.41C6.01 13.74 5 11.49 5 9s1.01-4.74 2.64-6.36zM11.5 9c0 1.38 1.12 2.5 2.5 2.5s2.5-1.12 2.5-2.5-1.12-2.5-2.5-2.5-2.5 1.12-2.5 2.5z\"></path></g>\n<g id=\"high-quality\"><path d=\"M19 4H5c-1.11 0-2 .9-2 2v12c0 1.1.89 2 2 2h14c1.1 0 2-.9 2-2V6c0-1.1-.9-2-2-2zm-8 11H9.5v-2h-2v2H6V9h1.5v2.5h2V9H11v6zm7-1c0 .55-.45 1-1 1h-.75v1.5h-1.5V15H14c-.55 0-1-.45-1-1v-4c0-.55.45-1 1-1h3c.55 0 1 .45 1 1v4zm-3.5-.5h2v-3h-2v3z\"></path></g>\n<g id=\"library-add\"><path d=\"M4 6H2v14c0 1.1.9 2 2 2h14v-2H4V6zm16-4H8c-1.1 0-2 .9-2 2v12c0 1.1.9 2 2 2h12c1.1 0 2-.9 2-2V4c0-1.1-.9-2-2-2zm-1 9h-4v4h-2v-4H9V9h4V5h2v4h4v2z\"></path></g>\n<g id=\"library-books\"><path d=\"M4 6H2v14c0 1.1.9 2 2 2h14v-2H4V6zm16-4H8c-1.1 0-2 .9-2 2v12c0 1.1.9 2 2 2h12c1.1 0 2-.9 2-2V4c0-1.1-.9-2-2-2zm-1 9H9V9h10v2zm-4 4H9v-2h6v2zm4-8H9V5h10v2z\"></path></g>\n<g id=\"library-music\"><path d=\"M20 2H8c-1.1 0-2 .9-2 2v12c0 1.1.9 2 2 2h12c1.1 0 2-.9 2-2V4c0-1.1-.9-2-2-2zm-2 5h-3v5.5c0 1.38-1.12 2.5-2.5 2.5S10 13.88 10 12.5s1.12-2.5 2.5-2.5c.57 0 1.08.19 1.5.51V5h4v2zM4 6H2v14c0 1.1.9 2 2 2h14v-2H4V6z\"></path></g>\n<g id=\"loop\"><path d=\"M12 4V1L8 5l4 4V6c3.31 0 6 2.69 6 6 0 1.01-.25 1.97-.7 2.8l1.46 1.46C19.54 15.03 20 13.57 20 12c0-4.42-3.58-8-8-8zm0 14c-3.31 0-6-2.69-6-6 0-1.01.25-1.97.7-2.8L5.24 7.74C4.46 8.97 4 10.43 4 12c0 4.42 3.58 8 8 8v3l4-4-4-4v3z\"></path></g>\n<g id=\"mic\"><path d=\"M12 14c1.66 0 2.99-1.34 2.99-3L15 5c0-1.66-1.34-3-3-3S9 3.34 9 5v6c0 1.66 1.34 3 3 3zm5.3-3c0 3-2.54 5.1-5.3 5.1S6.7 14 6.7 11H5c0 3.41 2.72 6.23 6 6.72V21h2v-3.28c3.28-.48 6-3.3 6-6.72h-1.7z\"></path></g>\n<g id=\"mic-none\"><path d=\"M12 14c1.66 0 2.99-1.34 2.99-3L15 5c0-1.66-1.34-3-3-3S9 3.34 9 5v6c0 1.66 1.34 3 3 3zm-1.2-9.1c0-.66.54-1.2 1.2-1.2.66 0 1.2.54 1.2 1.2l-.01 6.2c0 .66-.53 1.2-1.19 1.2-.66 0-1.2-.54-1.2-1.2V4.9zm6.5 6.1c0 3-2.54 5.1-5.3 5.1S6.7 14 6.7 11H5c0 3.41 2.72 6.23 6 6.72V21h2v-3.28c3.28-.48 6-3.3 6-6.72h-1.7z\"></path></g>\n<g id=\"mic-off\"><path d=\"M19 11h-1.7c0 .74-.16 1.43-.43 2.05l1.23 1.23c.56-.98.9-2.09.9-3.28zm-4.02.17c0-.06.02-.11.02-.17V5c0-1.66-1.34-3-3-3S9 3.34 9 5v.18l5.98 5.99zM4.27 3L3 4.27l6.01 6.01V11c0 1.66 1.33 3 2.99 3 .22 0 .44-.03.65-.08l1.66 1.66c-.71.33-1.5.52-2.31.52-2.76 0-5.3-2.1-5.3-5.1H5c0 3.41 2.72 6.23 6 6.72V21h2v-3.28c.91-.13 1.77-.45 2.54-.9L19.73 21 21 19.73 4.27 3z\"></path></g>\n<g id=\"movie\"><path d=\"M18 4l2 4h-3l-2-4h-2l2 4h-3l-2-4H8l2 4H7L5 4H4c-1.1 0-1.99.9-1.99 2L2 18c0 1.1.9 2 2 2h16c1.1 0 2-.9 2-2V4h-4z\"></path></g>\n<g id=\"music-video\"><path d=\"M21 3H3c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h18c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zm0 16H3V5h18v14zM8 15c0-1.66 1.34-3 3-3 .35 0 .69.07 1 .18V6h5v2h-3v7.03c-.02 1.64-1.35 2.97-3 2.97-1.66 0-3-1.34-3-3z\"></path></g>\n<g id=\"new-releases\"><path d=\"M23 12l-2.44-2.78.34-3.68-3.61-.82-1.89-3.18L12 3 8.6 1.54 6.71 4.72l-3.61.81.34 3.68L1 12l2.44 2.78-.34 3.69 3.61.82 1.89 3.18L12 21l3.4 1.46 1.89-3.18 3.61-.82-.34-3.68L23 12zm-10 5h-2v-2h2v2zm0-4h-2V7h2v6z\"></path></g>\n<g id=\"not-interested\"><path d=\"M12 2C6.48 2 2 6.48 2 12s4.48 10 10 10 10-4.48 10-10S17.52 2 12 2zm0 18c-4.42 0-8-3.58-8-8 0-1.85.63-3.55 1.69-4.9L16.9 18.31C15.55 19.37 13.85 20 12 20zm6.31-3.1L7.1 5.69C8.45 4.63 10.15 4 12 4c4.42 0 8 3.58 8 8 0 1.85-.63 3.55-1.69 4.9z\"></path></g>\n<g id=\"note\"><path d=\"M22 10l-6-6H4c-1.1 0-2 .9-2 2v12.01c0 1.1.9 1.99 2 1.99l16-.01c1.1 0 2-.89 2-1.99v-8zm-7-4.5l5.5 5.5H15V5.5z\"></path></g>\n<g id=\"pause\"><path d=\"M6 19h4V5H6v14zm8-14v14h4V5h-4z\"></path></g>\n<g id=\"pause-circle-filled\"><path d=\"M12 2C6.48 2 2 6.48 2 12s4.48 10 10 10 10-4.48 10-10S17.52 2 12 2zm-1 14H9V8h2v8zm4 0h-2V8h2v8z\"></path></g>\n<g id=\"pause-circle-outline\"><path d=\"M9 16h2V8H9v8zm3-14C6.48 2 2 6.48 2 12s4.48 10 10 10 10-4.48 10-10S17.52 2 12 2zm0 18c-4.41 0-8-3.59-8-8s3.59-8 8-8 8 3.59 8 8-3.59 8-8 8zm1-4h2V8h-2v8z\"></path></g>\n<g id=\"play-arrow\"><path d=\"M8 5v14l11-7z\"></path></g>\n<g id=\"play-circle-filled\"><path d=\"M12 2C6.48 2 2 6.48 2 12s4.48 10 10 10 10-4.48 10-10S17.52 2 12 2zm-2 14.5v-9l6 4.5-6 4.5z\"></path></g>\n<g id=\"play-circle-outline\"><path d=\"M10 16.5l6-4.5-6-4.5v9zM12 2C6.48 2 2 6.48 2 12s4.48 10 10 10 10-4.48 10-10S17.52 2 12 2zm0 18c-4.41 0-8-3.59-8-8s3.59-8 8-8 8 3.59 8 8-3.59 8-8 8z\"></path></g>\n<g id=\"playlist-add\"><path d=\"M14 10H2v2h12v-2zm0-4H2v2h12V6zm4 8v-4h-2v4h-4v2h4v4h2v-4h4v-2h-4zM2 16h8v-2H2v2z\"></path></g>\n<g id=\"playlist-add-check\"><path d=\"M14 10H2v2h12v-2zm0-4H2v2h12V6zM2 16h8v-2H2v2zm19.5-4.5L23 13l-6.99 7-4.51-4.5L13 14l3.01 3 5.49-5.5z\"></path></g>\n<g id=\"playlist-play\"><path d=\"M19 9H2v2h17V9zm0-4H2v2h17V5zM2 15h13v-2H2v2zm15-2v6l5-3-5-3z\"></path></g>\n<g id=\"queue\"><path d=\"M4 6H2v14c0 1.1.9 2 2 2h14v-2H4V6zm16-4H8c-1.1 0-2 .9-2 2v12c0 1.1.9 2 2 2h12c1.1 0 2-.9 2-2V4c0-1.1-.9-2-2-2zm-1 9h-4v4h-2v-4H9V9h4V5h2v4h4v2z\"></path></g>\n<g id=\"queue-music\"><path d=\"M15 6H3v2h12V6zm0 4H3v2h12v-2zM3 16h8v-2H3v2zM17 6v8.18c-.31-.11-.65-.18-1-.18-1.66 0-3 1.34-3 3s1.34 3 3 3 3-1.34 3-3V8h3V6h-5z\"></path></g>\n<g id=\"queue-play-next\"><path d=\"M21 3H3c-1.11 0-2 .89-2 2v12c0 1.1.89 2 2 2h5v2h8v-2h2v-2H3V5h18v8h2V5c0-1.11-.9-2-2-2zm-8 7V7h-2v3H8v2h3v3h2v-3h3v-2h-3zm11 8l-4.5 4.5L18 21l3-3-3-3 1.5-1.5L24 18z\"></path></g>\n<g id=\"radio\"><path d=\"M3.24 6.15C2.51 6.43 2 7.17 2 8v12c0 1.1.89 2 2 2h16c1.11 0 2-.9 2-2V8c0-1.11-.89-2-2-2H8.3l8.26-3.34L15.88 1 3.24 6.15zM7 20c-1.66 0-3-1.34-3-3s1.34-3 3-3 3 1.34 3 3-1.34 3-3 3zm13-8h-2v-2h-2v2H4V8h16v4z\"></path></g>\n<g id=\"recent-actors\"><path d=\"M21 5v14h2V5h-2zm-4 14h2V5h-2v14zM14 5H2c-.55 0-1 .45-1 1v12c0 .55.45 1 1 1h12c.55 0 1-.45 1-1V6c0-.55-.45-1-1-1zM8 7.75c1.24 0 2.25 1.01 2.25 2.25S9.24 12.25 8 12.25 5.75 11.24 5.75 10 6.76 7.75 8 7.75zM12.5 17h-9v-.75c0-1.5 3-2.25 4.5-2.25s4.5.75 4.5 2.25V17z\"></path></g>\n<g id=\"remove-from-queue\"><path d=\"M21 3H3c-1.11 0-2 .89-2 2v12c0 1.1.89 2 2 2h5v2h8v-2h5c1.1 0 1.99-.9 1.99-2L23 5c0-1.11-.9-2-2-2zm0 14H3V5h18v12zm-5-7v2H8v-2h8z\"></path></g>\n<g id=\"repeat\"><path d=\"M7 7h10v3l4-4-4-4v3H5v6h2V7zm10 10H7v-3l-4 4 4 4v-3h12v-6h-2v4z\"></path></g>\n<g id=\"repeat-one\"><path d=\"M7 7h10v3l4-4-4-4v3H5v6h2V7zm10 10H7v-3l-4 4 4 4v-3h12v-6h-2v4zm-4-2V9h-1l-2 1v1h1.5v4H13z\"></path></g>\n<g id=\"replay\"><path d=\"M12 5V1L7 6l5 5V7c3.31 0 6 2.69 6 6s-2.69 6-6 6-6-2.69-6-6H4c0 4.42 3.58 8 8 8s8-3.58 8-8-3.58-8-8-8z\"></path></g>\n<g id=\"replay-10\"><path d=\"M12 5V1L7 6l5 5V7c3.3 0 6 2.7 6 6s-2.7 6-6 6-6-2.7-6-6H4c0 4.4 3.6 8 8 8s8-3.6 8-8-3.6-8-8-8zm-1.1 11H10v-3.3L9 13v-.7l1.8-.6h.1V16zm4.3-1.8c0 .3 0 .6-.1.8l-.3.6s-.3.3-.5.3-.4.1-.6.1-.4 0-.6-.1-.3-.2-.5-.3-.2-.3-.3-.6-.1-.5-.1-.8v-.7c0-.3 0-.6.1-.8l.3-.6s.3-.3.5-.3.4-.1.6-.1.4 0 .6.1c.2.1.3.2.5.3s.2.3.3.6.1.5.1.8v.7zm-.9-.8v-.5s-.1-.2-.1-.3-.1-.1-.2-.2-.2-.1-.3-.1-.2 0-.3.1l-.2.2s-.1.2-.1.3v2s.1.2.1.3.1.1.2.2.2.1.3.1.2 0 .3-.1l.2-.2s.1-.2.1-.3v-1.5z\"></path></g>\n<g id=\"replay-30\"><path d=\"M12 5V1L7 6l5 5V7c3.3 0 6 2.7 6 6s-2.7 6-6 6-6-2.7-6-6H4c0 4.4 3.6 8 8 8s8-3.6 8-8-3.6-8-8-8zm-2.4 8.5h.4c.2 0 .4-.1.5-.2s.2-.2.2-.4v-.2s-.1-.1-.1-.2-.1-.1-.2-.1h-.5s-.1.1-.2.1-.1.1-.1.2v.2h-1c0-.2 0-.3.1-.5s.2-.3.3-.4.3-.2.4-.2.4-.1.5-.1c.2 0 .4 0 .6.1s.3.1.5.2.2.2.3.4.1.3.1.5v.3s-.1.2-.1.3-.1.2-.2.2-.2.1-.3.2c.2.1.4.2.5.4s.2.4.2.6c0 .2 0 .4-.1.5s-.2.3-.3.4-.3.2-.5.2-.4.1-.6.1c-.2 0-.4 0-.5-.1s-.3-.1-.5-.2-.2-.2-.3-.4-.1-.4-.1-.6h.8v.2s.1.1.1.2.1.1.2.1h.5s.1-.1.2-.1.1-.1.1-.2v-.5s-.1-.1-.1-.2-.1-.1-.2-.1h-.6v-.7zm5.7.7c0 .3 0 .6-.1.8l-.3.6s-.3.3-.5.3-.4.1-.6.1-.4 0-.6-.1-.3-.2-.5-.3-.2-.3-.3-.6-.1-.5-.1-.8v-.7c0-.3 0-.6.1-.8l.3-.6s.3-.3.5-.3.4-.1.6-.1.4 0 .6.1.3.2.5.3.2.3.3.6.1.5.1.8v.7zm-.8-.8v-.5c0-.1-.1-.2-.1-.3s-.1-.1-.2-.2-.2-.1-.3-.1-.2 0-.3.1l-.2.2s-.1.2-.1.3v2s.1.2.1.3.1.1.2.2.2.1.3.1.2 0 .3-.1l.2-.2s.1-.2.1-.3v-1.5z\"></path></g>\n<g id=\"replay-5\"><path d=\"M12 5V1L7 6l5 5V7c3.3 0 6 2.7 6 6s-2.7 6-6 6-6-2.7-6-6H4c0 4.4 3.6 8 8 8s8-3.6 8-8-3.6-8-8-8zm-1.3 8.9l.2-2.2h2.4v.7h-1.7l-.1.9s.1 0 .1-.1.1 0 .1-.1.1 0 .2 0h.2c.2 0 .4 0 .5.1s.3.2.4.3.2.3.3.5.1.4.1.6c0 .2 0 .4-.1.5s-.1.3-.3.5-.3.2-.4.3-.4.1-.6.1c-.2 0-.4 0-.5-.1s-.3-.1-.5-.2-.2-.2-.3-.4-.1-.3-.1-.5h.8c0 .2.1.3.2.4s.2.1.4.1c.1 0 .2 0 .3-.1l.2-.2s.1-.2.1-.3v-.6l-.1-.2-.2-.2s-.2-.1-.3-.1h-.2s-.1 0-.2.1-.1 0-.1.1-.1.1-.1.1h-.7z\"></path></g>\n<g id=\"shuffle\"><path d=\"M10.59 9.17L5.41 4 4 5.41l5.17 5.17 1.42-1.41zM14.5 4l2.04 2.04L4 18.59 5.41 20 17.96 7.46 20 9.5V4h-5.5zm.33 9.41l-1.41 1.41 3.13 3.13L14.5 20H20v-5.5l-2.04 2.04-3.13-3.13z\"></path></g>\n<g id=\"skip-next\"><path d=\"M6 18l8.5-6L6 6v12zM16 6v12h2V6h-2z\"></path></g>\n<g id=\"skip-previous\"><path d=\"M6 6h2v12H6zm3.5 6l8.5 6V6z\"></path></g>\n<g id=\"slow-motion-video\"><path d=\"M13.05 9.79L10 7.5v9l3.05-2.29L16 12zm0 0L10 7.5v9l3.05-2.29L16 12zm0 0L10 7.5v9l3.05-2.29L16 12zM11 4.07V2.05c-2.01.2-3.84 1-5.32 2.21L7.1 5.69c1.11-.86 2.44-1.44 3.9-1.62zM5.69 7.1L4.26 5.68C3.05 7.16 2.25 8.99 2.05 11h2.02c.18-1.46.76-2.79 1.62-3.9zM4.07 13H2.05c.2 2.01 1 3.84 2.21 5.32l1.43-1.43c-.86-1.1-1.44-2.43-1.62-3.89zm1.61 6.74C7.16 20.95 9 21.75 11 21.95v-2.02c-1.46-.18-2.79-.76-3.9-1.62l-1.42 1.43zM22 12c0 5.16-3.92 9.42-8.95 9.95v-2.02C16.97 19.41 20 16.05 20 12s-3.03-7.41-6.95-7.93V2.05C18.08 2.58 22 6.84 22 12z\"></path></g>\n<g id=\"snooze\"><path d=\"M7.88 3.39L6.6 1.86 2 5.71l1.29 1.53 4.59-3.85zM22 5.72l-4.6-3.86-1.29 1.53 4.6 3.86L22 5.72zM12 4c-4.97 0-9 4.03-9 9s4.02 9 9 9c4.97 0 9-4.03 9-9s-4.03-9-9-9zm0 16c-3.87 0-7-3.13-7-7s3.13-7 7-7 7 3.13 7 7-3.13 7-7 7zm-3-9h3.63L9 15.2V17h6v-2h-3.63L15 10.8V9H9v2z\"></path></g>\n<g id=\"sort-by-alpha\"><path d=\"M14.94 4.66h-4.72l2.36-2.36zm-4.69 14.71h4.66l-2.33 2.33zM6.1 6.27L1.6 17.73h1.84l.92-2.45h5.11l.92 2.45h1.84L7.74 6.27H6.1zm-1.13 7.37l1.94-5.18 1.94 5.18H4.97zm10.76 2.5h6.12v1.59h-8.53v-1.29l5.92-8.56h-5.88v-1.6h8.3v1.26l-5.93 8.6z\"></path></g>\n<g id=\"stop\"><path d=\"M6 6h12v12H6z\"></path></g>\n<g id=\"subscriptions\"><path d=\"M20 8H4V6h16v2zm-2-6H6v2h12V2zm4 10v8c0 1.1-.9 2-2 2H4c-1.1 0-2-.9-2-2v-8c0-1.1.9-2 2-2h16c1.1 0 2 .9 2 2zm-6 4l-6-3.27v6.53L16 16z\"></path></g>\n<g id=\"subtitles\"><path d=\"M20 4H4c-1.1 0-2 .9-2 2v12c0 1.1.9 2 2 2h16c1.1 0 2-.9 2-2V6c0-1.1-.9-2-2-2zM4 12h4v2H4v-2zm10 6H4v-2h10v2zm6 0h-4v-2h4v2zm0-4H10v-2h10v2z\"></path></g>\n<g id=\"surround-sound\"><path d=\"M20 4H4c-1.1 0-2 .9-2 2v12c0 1.1.9 2 2 2h16c1.1 0 2-.9 2-2V6c0-1.1-.9-2-2-2zM7.76 16.24l-1.41 1.41C4.78 16.1 4 14.05 4 12c0-2.05.78-4.1 2.34-5.66l1.41 1.41C6.59 8.93 6 10.46 6 12s.59 3.07 1.76 4.24zM12 16c-2.21 0-4-1.79-4-4s1.79-4 4-4 4 1.79 4 4-1.79 4-4 4zm5.66 1.66l-1.41-1.41C17.41 15.07 18 13.54 18 12s-.59-3.07-1.76-4.24l1.41-1.41C19.22 7.9 20 9.95 20 12c0 2.05-.78 4.1-2.34 5.66zM12 10c-1.1 0-2 .9-2 2s.9 2 2 2 2-.9 2-2-.9-2-2-2z\"></path></g>\n<g id=\"video-call\"><path d=\"M17 10.5V7c0-.55-.45-1-1-1H4c-.55 0-1 .45-1 1v10c0 .55.45 1 1 1h12c.55 0 1-.45 1-1v-3.5l4 4v-11l-4 4zM14 13h-3v3H9v-3H6v-2h3V8h2v3h3v2z\"></path></g>\n<g id=\"video-label\"><path d=\"M21 3H3c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h18c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zm0 13H3V5h18v11z\"></path></g>\n<g id=\"video-library\"><path d=\"M4 6H2v14c0 1.1.9 2 2 2h14v-2H4V6zm16-4H8c-1.1 0-2 .9-2 2v12c0 1.1.9 2 2 2h12c1.1 0 2-.9 2-2V4c0-1.1-.9-2-2-2zm-8 12.5v-9l6 4.5-6 4.5z\"></path></g>\n<g id=\"videocam\"><path d=\"M17 10.5V7c0-.55-.45-1-1-1H4c-.55 0-1 .45-1 1v10c0 .55.45 1 1 1h12c.55 0 1-.45 1-1v-3.5l4 4v-11l-4 4z\"></path></g>\n<g id=\"videocam-off\"><path d=\"M21 6.5l-4 4V7c0-.55-.45-1-1-1H9.82L21 17.18V6.5zM3.27 2L2 3.27 4.73 6H4c-.55 0-1 .45-1 1v10c0 .55.45 1 1 1h12c.21 0 .39-.08.54-.18L19.73 21 21 19.73 3.27 2z\"></path></g>\n<g id=\"volume-down\"><path d=\"M18.5 12c0-1.77-1.02-3.29-2.5-4.03v8.05c1.48-.73 2.5-2.25 2.5-4.02zM5 9v6h4l5 5V4L9 9H5z\"></path></g>\n<g id=\"volume-mute\"><path d=\"M7 9v6h4l5 5V4l-5 5H7z\"></path></g>\n<g id=\"volume-off\"><path d=\"M16.5 12c0-1.77-1.02-3.29-2.5-4.03v2.21l2.45 2.45c.03-.2.05-.41.05-.63zm2.5 0c0 .94-.2 1.82-.54 2.64l1.51 1.51C20.63 14.91 21 13.5 21 12c0-4.28-2.99-7.86-7-8.77v2.06c2.89.86 5 3.54 5 6.71zM4.27 3L3 4.27 7.73 9H3v6h4l5 5v-6.73l4.25 4.25c-.67.52-1.42.93-2.25 1.18v2.06c1.38-.31 2.63-.95 3.69-1.81L19.73 21 21 19.73l-9-9L4.27 3zM12 4L9.91 6.09 12 8.18V4z\"></path></g>\n<g id=\"volume-up\"><path d=\"M3 9v6h4l5 5V4L7 9H3zm13.5 3c0-1.77-1.02-3.29-2.5-4.03v8.05c1.48-.73 2.5-2.25 2.5-4.02zM14 3.23v2.06c2.89.86 5 3.54 5 6.71s-2.11 5.85-5 6.71v2.06c4.01-.91 7-4.49 7-8.77s-2.99-7.86-7-8.77z\"></path></g>\n<g id=\"web\"><path d=\"M20 4H4c-1.1 0-1.99.9-1.99 2L2 18c0 1.1.9 2 2 2h16c1.1 0 2-.9 2-2V6c0-1.1-.9-2-2-2zm-5 14H4v-4h11v4zm0-5H4V9h11v4zm5 5h-4V9h4v9z\"></path></g>\n<g id=\"web-asset\"><path d=\"M19 4H5c-1.11 0-2 .9-2 2v12c0 1.1.89 2 2 2h14c1.1 0 2-.9 2-2V6c0-1.1-.89-2-2-2zm0 14H5V8h14v10z\"></path></g>\n</defs></svg>\n</iron-iconset-svg>`;\n\ndocument.head.appendChild(template.content);\n","import { html } from 'lit';\nimport '@polymer/iron-icons/social-icons';\nimport '@polymer/iron-icons/av-icons';\nimport { component } from 'haunted';\n\n/**\n * @customElement\n * @polymer\n */\nconst Section = ({ icon, label }) => html`\n  <style>\n    :host {\n      display: var(--layout-vertical_-_display);\n      flex-direction: var(--layout-vertical_-_flex-direction);\n    }\n\n    .header {\n      color: var(--dash-section-color, black);\n      margin-bottom: 12px;\n      display: var(--layout-horizontal_-_display);\n      flex-direction: var(--layout-horizontal_-_flex-direction);\n      align-items: var(--layout-center-center_-_align-items);\n      justify-content: var(--layout-center-center_-_justify-content);\n    }\n\n    .icon {\n      width: 36px;\n      height: 36px;\n      margin-right: 4px;\n    }\n\n    .label {\n      font-weight: 900;\n      font-size: 36px;\n      text-transform: uppercase;\n    }\n  </style>\n\n  <div class=\"header\">\n    <iron-icon class=\"icon\" icon=\"${icon}\"></iron-icon>\n    <div class=\"label\">${label}</div>\n  </div>\n\n  <slot></slot>\n`;\n\nconst DashSection = component(Section, {\n  observedAttributes: ['icon', 'label'],\n});\n\ncustomElements.define('dash-section', DashSection);\n"],"names":["HASH_UNDEFINED","MAX_SAFE_INTEGER","argsTag","boolTag","dateTag","funcTag","genTag","mapTag","numberTag","objectTag","promiseTag","regexpTag","setTag","stringTag","symbolTag","weakMapTag","arrayBufferTag","dataViewTag","float32Tag","float64Tag","int8Tag","int16Tag","int32Tag","uint8Tag","uint8ClampedTag","uint16Tag","uint32Tag","reFlags","reIsHostCtor","reIsUint","cloneableTags","freeGlobal","$parcel$global","Object","freeSelf","self","root","Function","freeExports","exports","nodeType","freeModule","module","moduleExports","addMapEntry","map","pair","set","addSetEntry","value","add","arrayReduce","array","iteratee","accumulator","initAccum","index","length","isHostObject","result","toString","e","mapToArray","Array","size","forEach","key","overArg","func","transform","arg","setToArray","uid","arrayProto","prototype","funcProto","objectProto","coreJsData","maskSrcKey","exec","keys","IE_PROTO","funcToString","hasOwnProperty","objectToString","reIsNative","RegExp","call","replace","Buffer","undefined","Symbol","Uint8Array","getPrototype","getPrototypeOf","objectCreate","create","propertyIsEnumerable","splice","nativeGetSymbols","getOwnPropertySymbols","nativeIsBuffer","isBuffer","nativeKeys","DataView","getNative","Map","Promise","Set","WeakMap","nativeCreate","dataViewCtorString","toSource","mapCtorString","promiseCtorString","setCtorString","weakMapCtorString","symbolProto","symbolValueOf","valueOf","Hash","entries","this","clear","entry","ListCache","MapCache","Stack","__data__","arrayLikeKeys","inherited","isArray","isObjectLike","isArrayLike","isArrayLikeObject","isArguments","n","baseTimes","String","skipIndexes","isIndex","push","assignValue","object","objValue","eq","assocIndexOf","baseClone","isDeep","isFull","customizer","stack","isObject","isArr","constructor","input","initCloneArray","source","copyArray","tag","getTag","isFunc","buffer","slice","copy","cloneBuffer","isPrototype","proto","initCloneObject","copyObject","getSymbols","copySymbols","baseAssign","cloneFunc","Ctor","cloneArrayBuffer","dataView","byteOffset","byteLength","cloneDataView","typedArray","cloneTypedArray","cloneMap","regexp","lastIndex","cloneRegExp","cloneSet","symbol","initCloneByTag","stacked","get","props","keysFunc","symbolsFunc","values","offset","arrayPush","baseGetAllKeys","getAllKeys","arrayEach","subValue","baseIsNative","isFunction","test","arrayBuffer","newValue","getMapData","type","data","getValue","has","pop","hash","string","cache","pairs","LARGE_ARRAY_SIZE","e1","other","ArrayBuffer","resolve","ctorString","isLength","baseKeys","global","window","supportsAdoptingStyleSheets","ShadowRoot","ShadyCSS","nativeShadow","Document","CSSStyleSheet","constructionToken","cssTagCache","CSSResult","cssText","strings","safeToken","_$cssResult$","Error","_strings","styleSheet","_styleSheet","cacheable","replaceSync","css","reduce","acc","v","idx","adoptStyles","renderRoot","styles","adoptedStyleSheets","s","style","document","createElement","nonce","litNonce","setAttribute","textContent","appendChild","getCompatibleStyle","sheet","rule","cssRules","unsafeCSS","$35a3b8a79e7daf77$var$s","trustedTypes","emptyStringForBooleanAttribute","emptyScript","polyfillSupport","reactiveElementPolyfillSupport","defaultConverter","toAttribute","Boolean","JSON","stringify","fromAttribute","fromValue","Number","parse","notEqual","old","defaultPropertyDeclaration","attribute","converter","reflect","hasChanged","ReactiveElement","HTMLElement","super","__instanceProperties","isUpdatePending","hasUpdated","__reflectingProperty","_initialize","static","initializer","_a","_initializers","observedAttributes","finalize","attributes","elementProperties","p","attr","__attributeNameForProperty","__attributeToPropertyMap","name","options","state","noAccessor","descriptor","getPropertyDescriptor","defineProperty","oldValue","requestUpdate","configurable","enumerable","finalized","superCtor","properties","propKeys","getOwnPropertyNames","createProperty","elementStyles","finalizeStyles","flat","Infinity","reverse","unshift","toLowerCase","__updatePromise","res","enableUpdating","_$changedProperties","__saveInstanceProperties","i","addController","controller","__controllers","isConnected","_b","hostConnected","removeController","indexOf","_v","createRenderRoot","shadowRoot","attachShadow","shadowRootOptions","connectedCallback","c","_requestedUpdate","disconnectedCallback","hostDisconnected","attributeChangedCallback","_old","_$attributeToProperty","__propertyToAttribute","attrValue","removeAttribute","ctor","propName","getPropertyOptions","shouldRequestUpdate","__reflectingProperties","__enqueueUpdate","async","reject","scheduleUpdate","performUpdate","shouldUpdate","changedProperties","willUpdate","hostUpdate","update","__markUpdated","_$didUpdate","_changedProperties","hostUpdated","firstUpdated","updated","updateComplete","getUpdateComplete","k","$1148adc078c4965f$var$t","mode","_d","reactiveElementVersions","policy","createPolicy","createHTML","marker","Math","random","markerMatch","nodeMarker","d","createMarker","createComment","isPrimitive","isIterable","iterator","textEndRegex","commentEndRegex","comment2EndRegex","tagEndRegex","singleQuoteAttrEndRegex","doubleQuoteAttrEndRegex","rawTextElement","_$litType$","html","noChange","for","nothing","templateCache","render","container","partOwnerNode","renderBefore","part","_$litPart$","endNode","ChildPart","insertBefore","_$setValue","walker","createTreeWalker","getTemplateHtml","l","attrNames","rawTextEndRegex","regex","attrName","match","attrNameEndIndex","end","startsWith","htmlResult","Template","node","parts","nodeIndex","attrNameIndex","partCount","el","currentNode","content","svgElement","firstChild","remove","append","childNodes","nextNode","hasAttributes","attrsToRemove","getAttributeNames","endsWith","realName","statics","getAttribute","split","m","PropertyPart","BooleanAttributePart","EventPart","AttributePart","tagName","_options","innerHTML","resolveDirective","parent","attributeIndex","currentDirective","__directives","__directive","nextDirectiveConstructor","_$litDirective$","_$AO","_$initialize","_c","_$resolve","TemplateInstance","template","_parts","_$disconnectableChildren","_$template","_$parent","parentNode","_$isConnected","_clone","fragment","creationScope","importNode","partIndex","templatePart","nextSibling","ElementPart","_update","startNode","_$committedValue","_$startNode","_$endNode","__isConnected","directiveParent","_$clear","_commitText","_commitTemplateResult","_commitNode","_commitIterable","_insert","ref","createTextNode","_$getTemplate","h","instance","itemParts","itemPart","item","start","from","_$notifyConnectionChanged","setConnected","element","fill","valueIndex","noCommit","change","_commitValue","newListener","oldListener","shouldRemoveListener","capture","once","passive","shouldAddListener","removeEventListener","addEventListener","handleEvent","event","host","_$LH","_boundAttributeSuffix","_marker","_markerMatch","_HTML_RESULT","_getTemplateHtml","_TemplateInstance","_isIterable","_resolveDirective","_ChildPart","_AttributePart","_BooleanAttributePart","_EventPart","_PropertyPart","_ElementPart","litHtmlPolyfillSupport","$4e32d46d1d2dfb01$var$l","$4e32d46d1d2dfb01$var$o","litHtmlVersions","LitElement","renderOptions","__childPart","_$litElement$","globalThis","litElementHydrateSupport","litElementPolyfillSupport","$2a4e10c93b90ddf2$export$97aac956da55dae9","litElementVersions","$2a4e10c93b90ddf2$var$currentId","$2a4e10c93b90ddf2$export$5f80f094fd31fffd","$2a4e10c93b90ddf2$export$42ffd38884aecdac","$6b04fb41a95e9562$export$225ab0e0febd92b1","$6b04fb41a95e9562$export$819a7f3d5f1d869d","$6b04fb41a95e9562$export$e3a0ce117547085d","$6b04fb41a95e9562$export$c3840c26fe093fdb","$6b04fb41a95e9562$export$8e8d58c9b17fea3e","$6b04fb41a95e9562$export$db08efd2f456c5bf","$e2cc549e0204d858$export$7254cc27399e90bd","virtual","run","cb","_runEffects","phase","effects","effect","runEffects","runLayoutEffects","teardown","hook","$ab3d634d7743ba36$var$defer","then","bind","$ab3d634d7743ba36$var$runner","id","tasks","runTasks","t","len","task","$ab3d634d7743ba36$var$read","$ab3d634d7743ba36$var$write","$ab3d634d7743ba36$export$61cd7faa6f3316a3","renderer","_updateQueued","handlePhase","commit","$cab2b3cc86002d25$export$3bc26eec1cc2439f","Scheduler","frag","baseElementOrOptions","BaseElement","baseElement","useShadowDOM","shadowRootInit","Element","_scheduler","val","Reflect","_","char","toUpperCase","$cab2b3cc86002d25$var$toCamelCase","Proxy","target","receiver","desc","getOwnPropertyDescriptor","writable","initialValue","isSetup","freeze","reflectiveProp","setPrototypeOf","$4ac8d5e503ac7747$export$e594a57fbda5c090","$4ac8d5e503ac7747$var$use","Hook","args","hooks","$4ac8d5e503ac7747$export$1062a250c78723ea","$10d060ab3a4626de$export$7ea7134f704deda4","setEffects","callback","lastValues","_teardown","ignored1","ignored2","some","$ad0bec9c5c53dabd$export$2ff5f1970029d8ea","$ad0bec9c5c53dabd$export$6d9c69b0de29b591","$7078ae0cb5850703$export$fae74005e78b1a27","Context","_ranEffect","_unsubscribe","_updater","_subscribe","detail","dispatchEvent","CustomEvent","bubbles","cancelable","composed","unsubscribe","defaultValue","$954fec491e418491$export$2d2e2a019c76af3","component","Provider","listeners","_value","stopPropagation","delete","Consumer","$1d609cce7e71368c$export$1538c33de8887b59","fn","$fb004bfe1187afba$export$35808ee640e87ca7","inputs","$a39346d8bda5146a$export$60241385465d0a34","updater","makeArgs","updaterFn","previousValue","reducer","currentState","initialState","init","dispatch","action","PartType","ATTRIBUTE","CHILD","PROPERTY","BOOLEAN_ATTRIBUTE","EVENT","ELEMENT","directive","Directive","_partInfo","__part","__attributeIndex","_part","includes","$2786d0b17bf86dc7$export$d8556a2a8f973135","createContext","$2786d0b17bf86dc7$export$fd42f52fd3ae1109","$1148adc078c4965f$export$b3890eb0ae9dca99","classMap","partInfo","classInfo","filter","join","_previousClasses","_staticClasses","classList","$31aa462fa8d48902$export$7883484ee2325b68","replicantName","updateValue","replicantOptions","persistent","schemaPath","replicant","namespace","nodecg","Replicant","changeHandler","$parcel$interopDefault","$flzy3","on","removeListener","when","condition","trueCase","falseCase","items","f","UnsafeHTMLDirective","directiveName","_templateResult","raw","resultType","unsafeHTML","$af888fb8334a201f$export$4a90e6726f06f4d3","$af888fb8334a201f$var$nativeCssVariables_","$af888fb8334a201f$export$7e816ff4d2cdb570","$af888fb8334a201f$var$calcCssVariables","settings","navigator","userAgent","CSS","supports","cssBuild","$af888fb8334a201f$export$7ce5dd3f8ce8e132","disableRuntime","nativeCss","$af888fb8334a201f$export$63c364f56bccd92a","$645d40482b4817e1$export$bc59121b0a0fcbd3","$645d40482b4817e1$export$98e6a39c04603d36","text","$645d40482b4817e1$var$parseCss","$645d40482b4817e1$var$OPEN_BRACE","previous","$645d40482b4817e1$var$CLOSE_BRACE","$645d40482b4817e1$var$lex","$645d40482b4817e1$var$RX","comments","port","substring","trim","ss","code","arguments","repeat","$645d40482b4817e1$var$_expandUnicodeEscapes","multipleSpaces","lastIndexOf","$645d40482b4817e1$var$AT_START","$645d40482b4817e1$var$MEDIA_START","$645d40482b4817e1$export$b14ad400b1d09e0f","MEDIA_RULE","keyframesRule","KEYFRAMES_RULE","$645d40482b4817e1$var$VAR_START","MIXIN_RULE","STYLE_RULE","r$","r","$645d40482b4817e1$export$fac44ee5b035f737","preserveProperties","rules","$645d40482b4817e1$var$_hasMixinRules","mixinApply","varApply","$645d40482b4817e1$var$removeCustomPropApply","customProp","mixinProp","$645d40482b4817e1$export$43e64be558a183da","$645d40482b4817e1$var$removeCustomProps","$be9a984863348b5e$export$7039270532770a58","$be9a984863348b5e$export$68ba9553987a0c2","$be9a984863348b5e$export$8186af7aac27dcc6","$7ab9e91d0f0c2260$var$styleTextSet","$7ab9e91d0f0c2260$export$e41fb19aca232db","newStyle","head","$7ab9e91d0f0c2260$export$a713a8793437a73d","hasAttribute","$c600ba301194afaa$export$c345e6a171de6309","$c600ba301194afaa$export$92fb7bb44fa2125","$c600ba301194afaa$export$aeed5455e756845d","styleRuleCallback","keyframesRuleCallback","onlyActiveRules","skipRules","matchMedia","matches","$c600ba301194afaa$export$ab371b6e0062abdf","level","$c600ba301194afaa$export$1368c86087d56cf9","str","inner","prefix","suffix","comma","$c600ba301194afaa$export$c086ec6a21aaca25","localName","is","typeExtension","extends","$c600ba301194afaa$export$4fdb227ad78aa35","styleTextParts","querySelectorAll","removeChild","$c600ba301194afaa$export$bf7fb23156b4b0ba","__cssBuild","buildComment","Comment","commentParts","$c600ba301194afaa$export$2b34682f4fe02901","$c600ba301194afaa$var$removeBuildComment","$c600ba301194afaa$export$a346a1a2ce799899","$3cd312e1d42b6317$export$58ab2f7204fcd473","removeProperty","setProperty","$3cd312e1d42b6317$export$8279eff504af5afb","property","getComputedStyle","getPropertyValue","$3cd312e1d42b6317$export$b15f66667df2e822","$f4888b65dc10e4d1$var$APPLY_NAME_CLEAN","$f4888b65dc10e4d1$var$INITIAL_INHERIT","$f4888b65dc10e4d1$var$IMPORTANT","$f4888b65dc10e4d1$var$MixinMap","_map","dependants","$f4888b65dc10e4d1$var$invalidCallback","$f4888b65dc10e4d1$var$ApplyShim","_currentElement","_measureElement","detectMixin","gatherStyles","styleText","transformTemplate","elementName","_gatheredStyle","transformStyle","ast","transformRules","transformCustomStyle","transformRule","transformCssText","matchText","propertyName","valueProperty","valueMixin","_produceCssProperties","_consumeCssProperties","_getInitialValueForProperty","all","_fallbacksFromPreviousRules","startRule","topRule","fallbacks","seenStartRule","assign","_cssTextToMap","mixinName","applyPos","afterApplyPos","textBeforeApply","textAfterApply","defaults","replacement","_atApplyToCssProperties","vars","mixinEntry","_replaceInitialOrInherit","replaceInitialOrInherit","out","sp","_invalidateMixinEntry","mixinAsProperties","mixinValues","combinedProps","oldProps","needToInvalidate","$f4888b65dc10e4d1$export$2e2bcd8739ae039","$d74eb91a6d92851a$export$2e2bcd8739ae039","$858615f7dc5a0bcc$var$promise","$858615f7dc5a0bcc$export$6d6d6ad02cee4c8f","$858615f7dc5a0bcc$export$6758ecb09443efb9","$858615f7dc5a0bcc$export$c564e3b1fcd6a6bf","$858615f7dc5a0bcc$export$baef28bd45f8d150","$858615f7dc5a0bcc$export$5b42e9a4e500a42","_validating","$bc5588d84dcb6c95$var$resolveFn","$bc5588d84dcb6c95$var$readyPromise","$bc5588d84dcb6c95$var$whenReady","$bc5588d84dcb6c95$export$2e2bcd8739ae039","requestAnimationFrame","readyState","$18c310f6fbaff043$var$transformFn","$18c310f6fbaff043$var$validateFn","$18c310f6fbaff043$export$2e2bcd8739ae039","enqueueDocumentValidation","addCustomStyle","getStyleForCustomStyle","customStyle","processStyles","cs","styleToTransform","defineProperties","transformCallback","validateCallback","needsEnqueue","$1904a9dc2160b34c$var$applyShim","$1904a9dc2160b34c$var$ApplyShimInterface","customStyleInterface","ensure","CustomStyleInterface","flushCustomStyles","prepareTemplate","styleSubtree","styleElement","shadowChildren","children","i1","querySelector","styleDocument","body","ScopingShim","applyShimInterface","elementExtends","prepareTemplateStyles","prepareTemplateDom","getComputedStyleValue","ApplyShim","JSCompiler_renameProperty","prop","obj","$440672c84290ff57$var$workingURL","$440672c84290ff57$var$resolveDoc","$440672c84290ff57$var$CSS_URL_RX","$440672c84290ff57$var$ABS_URL","$440672c84290ff57$export$f85c16a6d62f7d63","url","baseURI","u","URL","pathname","href","location","implementation","createHTMLDocument","base","anchor","$440672c84290ff57$export$5e4a7063f4fe5655","pre","post","$440672c84290ff57$export$4deb3fcda9bf83bf","$17baa9c5677f5fe0$export$9406b7fb9400ca6b","ShadyDOM","inUse","$17baa9c5677f5fe0$export$b4d10f6001c083c2","customElements","polyfillWrapFlushCallback","$17baa9c5677f5fe0$export$2c2b629ee110b0c4","Polymer","rootPath","$17baa9c5677f5fe0$export$933597516e05b6ba","sanitizeDOMValue","$17baa9c5677f5fe0$export$5e78708f712c4732","setPassiveTouchGestures","$17baa9c5677f5fe0$export$acf5a474bddac04e","strictTemplatePolicy","$17baa9c5677f5fe0$export$5ae065bca0989b14","allowTemplateFromDomModule","$17baa9c5677f5fe0$export$3c94433b141a5935","legacyOptimizations","$17baa9c5677f5fe0$export$72c298ba1c0d71ac","legacyWarnings","$17baa9c5677f5fe0$export$2dab853be0f46432","syncInitialRender","$17baa9c5677f5fe0$export$1b6b9baa82f69fe4","legacyUndefined","$17baa9c5677f5fe0$export$f1157f27ba4ba240","orderedComputed","$17baa9c5677f5fe0$export$6f67f821d5faaed9","$17baa9c5677f5fe0$export$c522adfce8f3fd9f","removeNestedTemplates","$17baa9c5677f5fe0$export$29626a1dca9972f1","fastDomIf","$17baa9c5677f5fe0$export$a11cf105d91e2102","suppressTemplateNotifications","$17baa9c5677f5fe0$export$ffb029c44872e9db","legacyNoObservedAttributes","$17baa9c5677f5fe0$export$6b47557ba90d0c2c","useAdoptedStyleSheetsWithBuiltCSS","$2922c76e7ffc20c1$var$dedupeId","$2922c76e7ffc20c1$var$MixinFunction","__mixinApplications","__mixinSet","$2922c76e7ffc20c1$export$70650a0591802500","mixin","mixinApplications","mixinDedupeId","baseSet","extended","mixinSet","$9765bf7c4a1772a9$var$modules","$9765bf7c4a1772a9$var$lcModules","$9765bf7c4a1772a9$var$setModule","$9765bf7c4a1772a9$var$findModule","$9765bf7c4a1772a9$export$12f99acfce271a06","selector","register","assetpath","__assetpath","owner","HTMLImports","importForElement","ownerDocument","inst","console","warn","define","$905ff136d0962aa2$var$importModule","moduleId","import","$905ff136d0962aa2$var$styleForImport","importDoc","importCss","$905ff136d0962aa2$export$7892cca1f4661ba5","moduleIds","modules","$905ff136d0962aa2$export$322040fecb2f2d65","_styles","$905ff136d0962aa2$var$_stylesFromModuleImports","$905ff136d0962aa2$export$ef04dd434219bd72","e$","include","$905ff136d0962aa2$export$6d26d522fc319ace","p$","unscoped","_unscopedStyle","_style","$905ff136d0962aa2$export$f46bccbc9bbcbdb1","$905ff136d0962aa2$export$4f022a189641ad2d","_cssText","$905ff136d0962aa2$var$_cssFromModuleImports","$905ff136d0962aa2$export$e50c8e9c31fcb971","$2d0fdf74af24bec2$export$4997ffc0176396a6","$38b0024e523b1bfb$export$50ae7fb6f87de989","path","$38b0024e523b1bfb$export$e8e78c978b129247","dotIndex","$38b0024e523b1bfb$export$efcd07cb4d32b055","$38b0024e523b1bfb$export$8503f9d2928f9a64","$38b0024e523b1bfb$export$d73ee8ef04f5226a","newBase","$38b0024e523b1bfb$export$a3295358bff77e","j","$38b0024e523b1bfb$export$65980d18b75784e2","$38b0024e523b1bfb$export$3988ae62b71be9a3","info","$38b0024e523b1bfb$export$adaa4cf7ef1b65be","last","$3717577c0f37c129$var$caseMap","$3717577c0f37c129$var$DASH_TO_CAMEL","$3717577c0f37c129$var$CAMEL_TO_DASH","$3717577c0f37c129$export$138f9917dd6248b4","dash","$3717577c0f37c129$export$6e116da553d9a4d8","camel","$0fafb686e2de8a83$var$microtaskCurrHandle","$0fafb686e2de8a83$var$microtaskLastHandle","$0fafb686e2de8a83$var$microtaskCallbacks","$0fafb686e2de8a83$var$microtaskNodeContent","$0fafb686e2de8a83$var$microtaskScheduled","$0fafb686e2de8a83$var$microtaskNode","MutationObserver","setTimeout","observe","characterData","$0fafb686e2de8a83$export$7af46e4bd307f4ab","after","delay","cancel","handle","clearTimeout","$0fafb686e2de8a83$export$a5ff0d6a738703ca","$54bcf63178858cbb$var$microtask","$54bcf63178858cbb$export$56259f45ca2fb97a","superClass","_createPropertyAccessor","readOnly","_addPropertyToAttributeMap","__dataHasAccessor","_definePropertyAccessor","__dataAttributes","attributeNameForProperty","__data","_setPendingProperty","_invalidateProperties","__dataEnabled","__dataReady","__dataInvalid","__dataPending","__dataOld","__dataInstanceProps","__dataCounter","__serializing","_initializeProperties","ready","_flushProperties","_initializeInstanceProperties","_setProperty","_getProperty","ext","changed","_shouldPropertyChange","_isPropertyPending","_enableProperties","changedProps","_shouldPropertiesChange","_propertiesChanged","currentProps","_attributeToProperty","_deserializeValue","typeForProperty","_propertyToAttribute","_valueToNodeAttribute","_serializeValue","$5b32c65c41212adf$var$nativeProperties","$5b32c65c41212adf$var$proto","$5b32c65c41212adf$var$isTrustedType","isHTML","isScript","isScriptURL","$5b32c65c41212adf$export$46dc615e1ccbcbdc","a$","__dataProto","_initializeProtoProperties","_ensureAttribute","Date","x","outValue","x1","isNaN","model","$5b32c65c41212adf$var$saveAccessorValue","_hasAccessor","$35ad3d9e3aaf1a3c$var$templateExtensions","$35ad3d9e3aaf1a3c$var$placeholderBugDetect","$35ad3d9e3aaf1a3c$var$placeholderBug","$35ad3d9e3aaf1a3c$var$fixPlaceholder","placeholder","$35ad3d9e3aaf1a3c$var$hasPlaceholderBug","$35ad3d9e3aaf1a3c$var$copyAttributeWithTemplateEventPolicy","polymerTemplateEventAttributePolicy","createScript","dest","src","$35ad3d9e3aaf1a3c$var$wrapTemplateExtension","replaceChild","$35ad3d9e3aaf1a3c$var$findTemplateNode","nodeInfo","parentInfo","parentIndex","$35ad3d9e3aaf1a3c$var$applyIdToMap","$35ad3d9e3aaf1a3c$var$applyEventListener","events","_addMethodEventListenerToNode","$35ad3d9e3aaf1a3c$var$applyTemplateInfo","parentTemplateInfo","templateInfo","_templateInfo","_parentTemplateInfo","$35ad3d9e3aaf1a3c$export$85889746a726e3b2","outerTemplateInfo","nodeInfoList","nestedTemplate","stripWhiteSpace","_parseTemplateContent","_parseTemplateNode","noted","hasInsertionPoint","_parseTemplateNestedTemplate","_parseTemplateChildNodes","_parseTemplateNodeAttributes","next","Node","TEXT_NODE","childInfo","infoIndex","_parseTemplate","createDocumentFragment","attrs","a","_parseTemplateNodeAttribute","_stampTemplate","HTMLTemplateElement","decorate","dom","__noInsertionPoint","nodes","nodeList","$","eventName","methodName","context","handler","_methodHost","$35ad3d9e3aaf1a3c$var$createNodeEventHandler","_addEventListenerToNode","_removeEventListenerFromNode","$208cd430c2775861$var$dedupeId","$208cd430c2775861$var$NOOP","$208cd430c2775861$var$TYPES","COMPUTE","REFLECT","NOTIFY","PROPAGATE","OBSERVE","READ_ONLY","$208cd430c2775861$var$capitalAttributeRegex","$208cd430c2775861$var$ensureOwnEffectMap","cloneArrays","protoFx","instFx","$208cd430c2775861$var$runEffects","hasPaths","extraArgs","ran","fxs","fx","lastRun","$208cd430c2775861$var$pathMatchesTrigger","trigger","$208cd430c2775861$var$runEffectsForProperty","dedupeId","triggerPath","structured","wildcard","$208cd430c2775861$var$runObserverEffect","method","changedProp","dynamicFn","$208cd430c2775861$var$notifyPath","rootProperty","$208cd430c2775861$var$dispatchNotifyEvent","queueProperty","$208cd430c2775861$var$runNotifyEffect","$208cd430c2775861$var$runReflectEffect","$208cd430c2775861$var$runComputedEffects","computeEffects","order","ordered","__orderedComputedDeps","curr","counts","total","infoForComputed","computedDeps","literal","p1","$208cd430c2775861$var$dependencyCounts","shift","computedByCurr","computedProp","methodInfo","$208cd430c2775861$var$getComputedOrder","queue","$208cd430c2775861$var$enqueueEffectsFor","$208cd430c2775861$var$runComputedEffect","inputProps","$208cd430c2775861$var$insertEffect","mid","cmp","$208cd430c2775861$var$runMethodEffect","$208cd430c2775861$var$addBinding","kind","bindings","binding","isCompound","$208cd430c2775861$var$shouldAddListener","negate","listenerEvent","listenerNegate","compoundIndex","$208cd430c2775861$var$addEffectForBindingPart","dependencies","evaluator","$208cd430c2775861$var$parseArg","_addTemplatePropertyEffect","$208cd430c2775861$var$runBindingEffect","__isPropertyEffectsClient","_setPendingPropertyOrPath","_enqueueClient","value1","_evaluateBinding","storage","__dataCompoundStorage","$208cd430c2775861$var$computeBindingValue","_setUnmanagedPropertyToNode","$208cd430c2775861$var$applyBindingValue","$208cd430c2775861$var$setupCompoundStorage","literals","$208cd430c2775861$var$addNotifyListener","fromProp","toPath","fromPath","currentTarget","$208cd430c2775861$var$handleNotification","$208cd430c2775861$var$createMethodEffect","sig","effectFn","_addPropertyEffect","_marshalArgs","apply","$208cd430c2775861$var$emptyArray","$208cd430c2775861$var$bindingRegex","$208cd430c2775861$var$OPEN_BRACKET","$208cd430c2775861$var$literalFromParts","$208cd430c2775861$var$parseMethod","expression","argList","rawArg","$208cd430c2775861$var$parseArgs","fc","$208cd430c2775861$var$getArgValue","$208cd430c2775861$var$notifySplices","splices","splicesData","indexSplices","_overrideLegacyUndefined","notifyPath","$208cd430c2775861$var$notifySplice","addedCount","removed","$208cd430c2775861$export$5bc04800afa346a0","propertyEffectsBase","__dataClientsReady","__dataPendingClients","__dataToNotify","__dataLinkedPaths","__dataHasPaths","__dataHost","__dataTemp","__dataClientsInitialized","__computeEffects","__computeInfo","__reflectEffects","__notifyEffects","__propagateEffects","__observeEffects","__readOnly","__templateInfo","PROPERTY_EFFECT_TYPES","_registerHost","$208cd430c2775861$var$hostStack","_removePropertyEffect","_hasPropertyEffect","_hasReadOnlyEffect","_hasNotifyEffect","_hasReflectEffect","_hasComputedEffect","shouldNotify","isPathNotification","links","link","b","$208cd430c2775861$var$computeLinkedPaths","propIsPath","prevProps","client","_flushClients","__enableOrFlushClients","_readyClients","clients","setProperties","setReadOnly","notifyProps","_propagatePropertyChanges","notified","$208cd430c2775861$var$runNotifyEffects","_runEffectsForTemplate","baseRunEffects","propertyEffects","linkPaths","to","unlinkPaths","notifySplices","ret","hadLength","deleteCount","floor","propPath","_createReadOnlyProperty","protectedSetter","_createPropertyObserver","_createMethodObserver","_createNotifyingProperty","_createReflectedProperty","_createComputedProperty","pathValue","_bindTemplate","instanceBinding","wasPreBound","__preBoundTemplateInfo","lastChild","previousSibling","hostProps","$208cd430c2775861$var$setupBindings","_removeBoundDom","_parseBindings","origName","nestedTemplateInfo","isDomIf","isDomRepeat","hostProp","customEvent","notifyEvent","colon","signature","dynamicFns","$6e8046d8abdc7ba6$export$15a84f6b51e9d53e","$6e8046d8abdc7ba6$export$6503ec6e8aabbaf","$509fb8fc19719b7d$export$dbe246a3e2979375","superPropertiesClass","PropertiesMixin","ownProperties","output","o","$509fb8fc19719b7d$var$normalizeProperties","__ownProperties","_properties","__observedAttributes","__finalized","_finalizeClass","createProperties","__properties","$e81128f53e23ac1d$export$fc7755cfd5e297e6","$e81128f53e23ac1d$export$6154786385672f5d","polymerElementBase","processElementStyles","klass","templateStyles","stylesWithImports","linkedStyles","firstTemplateChild","firstElementChild","_processStyleText","templateStyleIndex","s1","templateStyle","cloneNode","polymerElementVersion","observers","__ownObservers","createObservers","_prepareTemplate","error","_template","allProps","computed","reflectToAttribute","notify","observer","protoTemplate","getTemplateFromDomModule","importPath","meta","importMeta","_importPath","_finalizeTemplate","__propertyDefaults","propertyDefaults","_canApplyPropertyDefault","__polymerFinalized","_attachDom","shadyUpgradeFragment","flushInitial","updateStyles","resolveUrl","$183488592d97166f$export$6714332a76d13d42","_asyncModule","_callback","_timer","setConfig","asyncModule","$183488592d97166f$var$debouncerQueue","isActive","_cancelAsync","flush","debouncer","$183488592d97166f$export$587cf0fefffc9700","$183488592d97166f$export$d2808eee61d0a316","didFlush","$d800fe3928b0ff4b$var$HAS_NATIVE_TA","touchAction","$d800fe3928b0ff4b$var$MOUSE_EVENTS","$d800fe3928b0ff4b$var$MOUSE_WHICH_TO_BUTTONS","$d800fe3928b0ff4b$var$MOUSE_HAS_BUTTONS","MouseEvent","buttons","$d800fe3928b0ff4b$var$isMouseEvent","$d800fe3928b0ff4b$var$supportsPassive","$d800fe3928b0ff4b$var$PASSIVE_TOUCH","opts","$d800fe3928b0ff4b$var$IS_TOUCH_ONLY","$d800fe3928b0ff4b$var$clickedLabels","$d800fe3928b0ff4b$var$labellable","button","keygen","meter","textarea","progress","select","$d800fe3928b0ff4b$var$canBeDisabled","command","fieldset","optgroup","option","$d800fe3928b0ff4b$var$matchingLabels","labels","getRootNode","matching","$d800fe3928b0ff4b$var$mouseCanceller","mouseEvent","sc","sourceCapabilities","firesTouchEvents","skip","clickFromLabel","$d800fe3928b0ff4b$var$getComposedPath","ELEMENT_NODE","ownerLabels","$d800fe3928b0ff4b$var$POINTERSTATE","mouse","preventDefault","$d800fe3928b0ff4b$var$setupTeardownMouseCanceller","setup","en","$d800fe3928b0ff4b$var$hasLeftMouseButton","ev","which","mouseIgnoreJob","touch","y","scrollDecided","$d800fe3928b0ff4b$var$trackDocument","stateObj","movefn","upfn","$d800fe3928b0ff4b$var$untrackDocument","debounce","noPatch","composedPath","$d800fe3928b0ff4b$export$f3d9d3cca4871e8f","$d800fe3928b0ff4b$export$b69882218eff453f","$d800fe3928b0ff4b$var$_findOriginalTarget","$d800fe3928b0ff4b$var$_handleNative","handled","gobj","gs","changedTouches","touches","identifier","clientX","clientY","ta","$d800fe3928b0ff4b$var$firstTouchAction","shouldPrevent","dx","abs","dy","$d800fe3928b0ff4b$export$7a90f3902ad9011","$d800fe3928b0ff4b$var$_handleTouchAction","flow","reset","r1","$d800fe3928b0ff4b$export$f03a6b845d3fb58b","evType","recognizer","deps","dep","gd","_count","$d800fe3928b0ff4b$export$b9a326c8b85a6ce","$d800fe3928b0ff4b$var$_add","$d800fe3928b0ff4b$export$b03e9483f936dccb","$d800fe3928b0ff4b$var$_remove","$d800fe3928b0ff4b$export$6503ec6e8aabbaf","recog","emits","$d800fe3928b0ff4b$var$_fire","Event","defaultPrevented","preventer","sourceEvent","evName","$d800fe3928b0ff4b$var$_findRecognizerByEvent","prevent","$d800fe3928b0ff4b$var$downupFire","$d800fe3928b0ff4b$var$trackHasMovedEnough","started","$d800fe3928b0ff4b$var$trackFire","ddx","secondlast","moves","lastmove","ddy","hover","elementFromPoint","oldNext","$d800fe3928b0ff4b$export$fbb82389c3d3d990","$d800fe3928b0ff4b$var$trackForward","bcr","getBoundingClientRect","pageX","pageY","left","right","top","bottom","$d800fe3928b0ff4b$var$isSyntheticClick","mousedown","touchstart","touchend","addMove","move","ct","touchmove","NaN","click","$ce6ca9c74c8d406e$export$c47e0e364a55d5a8","$6933cbc67acafb49$var$HOST_DIR","$6933cbc67acafb49$var$EL_DIR","$6933cbc67acafb49$var$DIR_CHECK","$6933cbc67acafb49$var$SHIM_SHADOW","$6933cbc67acafb49$var$DIR_INSTANCES","$6933cbc67acafb49$var$observer","$6933cbc67acafb49$var$documentDir","$6933cbc67acafb49$var$getRTL","documentElement","$6933cbc67acafb49$var$setRTL","__autoDirOptOut","$6933cbc67acafb49$var$updateDirection","$6933cbc67acafb49$export$3a742f608ed5193b","attributeFilter","elementBase","Dir","_replaceDirInCssText","__activateDir","replacedText","takeRecords","$a9a2cebff959784b$var$resolve","$985ed952f01d85e0$var$newSplice","$985ed952f01d85e0$var$calcSplices","current","currentStart","currentEnd","oldStart","oldEnd","prefixCount","suffixCount","minLength","min","searchLength","$985ed952f01d85e0$var$equals","$985ed952f01d85e0$var$sharedPrefix","index1","index2","count","$985ed952f01d85e0$var$sharedSuffix","ops","distances","edits","northWest","west","north","$985ed952f01d85e0$var$spliceOperationsFromEditDistances","rowCount","columnCount","j1","$985ed952f01d85e0$var$calcEditDistances","oldIndex","$985ed952f01d85e0$export$481c2b35e25e79f3","currentValue","$40e0e1d5f8446a2e$var$isSlot","$40e0e1d5f8446a2e$export$74371724d098aa78","wrapped","assignedNodes","flatten","concat","_shadyChildrenObserver","_nativeChildrenObserver","_connected","_target","_effectiveNodes","_observer","_scheduled","_boundSchedule","_schedule","connect","_listenSlots","observeChildren","mutations","_processMutations","childList","disconnect","_unlistenSlots","unobserveChildren","_processSlotMutations","mutation","addedNodes","removedNodes","newNodes","getFlattenedNodes","$9ed0f2151a3c6006$export$4909b86c8034bf73","shadyDOM","debouncers","$ac299b68007ae455$var$p","$ac299b68007ae455$var$normalizedMatchesSelector","matchesSelector","mozMatchesSelector","msMatchesSelector","oMatchesSelector","webkitMatchesSelector","$ac299b68007ae455$export$b06a2f5618961e1e","$ac299b68007ae455$var$DomApiNative","observeNodes","unobserveNodes","observerHandle","notifyObserver","deepContains","contains","doc","getOwnerRoot","getDistributedNodes","getDestinationInsertionPoints","ip$","assignedSlot","deep","getEffectiveChildNodes","queryDistributedElements","c$","list","activeElement","_activeElement","$ac299b68007ae455$var$forwardReadOnlyProperties","$ac299b68007ae455$export$93eb4f9737fcca43","rootTarget","localTarget","lastElementChild","nextElementSibling","previousElementSibling","$ac299b68007ae455$var$DomApiImpl","Wrapper","currentRoot","$ac299b68007ae455$export$df3a06d6289f983e","methods","$ac299b68007ae455$var$forwardMethods","$ac299b68007ae455$var$forwardProperties","helper","$b100fccc0e226311$var$ShadyDOM","$b100fccc0e226311$var$ShadyCSS","$b100fccc0e226311$var$sameScope","scope","$b100fccc0e226311$export$f4ad12bcaef9e3b2","shouldObserve","containerScope","scopify","elements","currentScope","mo","mxns","mxn","addedNode","subtree","$593a4a223d6588d6$export$7c4a5ce7fc39b031","observedAttributesGetter","__isUpgradeDisabled","$2118838bb5e89f30$var$styleInterface","$2118838bb5e89f30$export$a4f9c54f56491597","GesturesElement","legacyElementBase","DIRECTION_MAP","none","LegacyElement","isAttached","__boundListeners","_debouncers","__needsAttributesAtConnected","_legacyForceObservedAttributes","created","__attributeReaction","_takeAttributes","attached","detached","attributeChanged","_registered","__hasRegisterFinished","_applyListeners","_ensureAttributes","serialize","deserialize","reflectPropertyToAttribute","serializeValueToAttribute","extend","api","n$","pd","chainObject","__proto__","instanceTemplate","_contentForTemplate","fire","listen","hbl","bl","unlisten","setScrollDirection","direction","$$","slctr","domHost","DocumentFragment","distributeContent","domApi","getEffectiveChildren","getEffectiveTextContent","cn","tc","COMMENT_NODE","queryEffectiveChildren","queryAllEffectiveChildren","getContentChildNodes","getContentChildren","isLightDescendant","thisNode","isLocalDescendant","scopeSubtree","jobName","wait","isDebouncerActive","flushDebouncer","cancelDebouncer","waitTime","cancelAsync","elt","elementMatches","toggleAttribute","bool","toggleClass","transformText","webkitTransform","translate3d","z","arrayDelete","arrayOrPath","_logger","_log","_warn","_error","_logf","$d6e812ec69d88d9f$var$lifecycleProps","beforeRegister","registered","hostAttributes","$d6e812ec69d88d9f$var$excludeOnInfo","behaviors","_noAccessors","$d6e812ec69d88d9f$var$excludeOnBehaviors","$d6e812ec69d88d9f$var$applyInfo","lifecycle","excludeProps","noAccessors","propertyNames","$d6e812ec69d88d9f$var$copyProperties","$d6e812ec69d88d9f$var$flattenBehaviors","exclude","$d6e812ec69d88d9f$var$mergeProperties","targetInfo","sourceInfo","$d6e812ec69d88d9f$var$LegacyElement","$d6e812ec69d88d9f$var$GenerateClassFromInfo","Base","behaviorList","PolymerGenerated","generatedProto","copyPropertiesToProto","superBehaviors","$d6e812ec69d88d9f$var$applyBehaviors","generatedFrom","$b8a44d6edb96023a$export$873304029c9af456","Class","$8b90214dfffcc031$var$mutablePropertyChange","mutableData","shouldChange","$8b90214dfffcc031$export$7a02473fcc50534a","$8b90214dfffcc031$export$14b453e344e4d0b7","_mutablePropertyChange","$e1b339e429e60ddd$var$newInstance","$e1b339e429e60ddd$var$HTMLTemplateElementExtension","$e1b339e429e60ddd$var$DataTemplate","$e1b339e429e60ddd$var$MutableDataTemplate","$e1b339e429e60ddd$var$templateInstanceBase","$e1b339e429e60ddd$export$2f680825468947ff","hide","__hideTemplateChildren__","__polymerTextContent__","__polymerReplaced__","__polymerDisplay__","display","_showHideChildren","$e1b339e429e60ddd$export$d325f89c810f68ec","_configureProperties","__templatizeInstance","__templatizeOwner","__templatizeOptions","instanceProps","forwardHostProp","hprop","__hostProps","iprop","parentModel","templateHost","__parentModel","$e1b339e429e60ddd$var$MutableTemplateInstanceBase","$e1b339e429e60ddd$var$findMethodHost","$e1b339e429e60ddd$var$createTemplatizerClass","templatizerBase","$e1b339e429e60ddd$export$528486d340f30adf","userNotifyInstanceProp","notifyInstanceProp","$e1b339e429e60ddd$var$createNotifyInstancePropEffect","hasHostProps","$e1b339e429e60ddd$var$addNotifyEffects","$e1b339e429e60ddd$var$addPropagateEffects","methodHost","userForwardHostProp","isTemplate","templatizeTemplateClass","templatizedBase","TemplatizedTemplate","templatizedBase1","TemplatizedTemplateExtension","$e1b339e429e60ddd$var$createForwardHostPropEffect","declaredProps","$e1b339e429e60ddd$var$warnOnUndeclaredProperties","hostProps1","prop1","instProp","baseClass","templatizeInstanceClass","$e1b339e429e60ddd$export$e8eeae76eca81f5","$374292325343ff5a$var$elementsHidden","$374292325343ff5a$export$9b71de5179b7c593","$c6d3bbb0face8bd9$var$domBindBase","__children","__removeChildren","__insertChildren","$9aa1038e83332a2d$var$policy","$9aa1038e83332a2d$var$LiteralString","$9aa1038e83332a2d$var$assertValidTemplateStringParameters","$9aa1038e83332a2d$var$literalValue","$9aa1038e83332a2d$export$c0bb0b647f701bb5","$9aa1038e83332a2d$var$htmlValue","TypeError","$58dc3a2a1b054c3d$export$792c5fa268ce93ea","$784546ce128982b1$var$domRepeatBase","$784546ce128982b1$export$e439116c4bbdd820","as","indexAs","itemsIndexAs","sort","renderedItemCount","initialCount","targetFramerate","_targetFrameTime","notifyDomChange","reuseChunkedInstances","__instances","__renderDebouncer","__itemsIdxToInstIdx","__chunkCount","__renderStartTime","__itemsArrayChanged","__shouldMeasureChunk","__shouldContinueChunking","__chunkingId","__sortFn","__filterFn","__observePaths","__ctor","__isDetached","__detachInstance","cancelAnimationFrame","wrappedParent","__attachInstance","__render","__ensureTemplatized","thisAsTemplate","i$","__getMethodHost","__functionFromPropertyValue","functionOrMethodName","__sortChanged","__debounceRender","__filterChanged","__computeFrameTime","rate","ceil","__observeChanged","__handleObservedPaths","paths","__itemsChanged","__handleItemPath","isntIdxToItemsIdx","__sortAndFilterItems","limit","__calculateLimit","__updateInstances","__continueChunking","_setRenderedItemCount","filteredItemCount","currentCount","newCount","max","performance","now","renderTime","ratio","round","itemsIdxToInstIdx","instIdx","itemIdx","__insertInstance","__detachAndRemoveInstance","wrappedRoot","__stampInstance","beforeRow","beforeNode","hidden","itemsPath","dot","itemsIdx","parseInt","itemSubPath","itemPath","itemForElement","modelForElement","indexForElement","$0de851c7639a2255$var$DomIfBase","if","restamp","_lastIf","__template","DOCUMENT_FRAGMENT_NODE","__teardownInstance","__ensureTemplate","__ensureInstance","__hasInstance","__getInstanceNodes","__createAndInsertInstance","$0de851c7639a2255$export$47be2d8b3d117ab3","__instance","__syncInfo","syncInfo","rootProp","__syncHostProperties","__hidden","__invalidProps","$b87293720b8aff78$var$baseArraySelector","multi","selected","selectedItem","toggle","__lastItems","__lastMulti","__selectedMap","__updateSelection","itemsInfo","newItems","lastItems","clearSelection","__applySplices","__deselectChangedIdx","__updateLinks","sidx","isSelected","isIndexSelected","__selectedIndexForItemIndex","deselect","deselectIndex","selectIndex","$b87293720b8aff78$export$cc19ed65cfa9f1c6","$b87293720b8aff78$export$20c46cc30d85a5bb","$2213afd7f47a90f7$var$customStyleInterface","$c0b3bc0a72692273$var$CustomStyleInterface","$c0b3bc0a72692273$export$b08c72a6c2eb5358","getStyle","$37ea2e7eefab9e6c$var$mutablePropertyChange","$58e8309b0d651ac0$export$ef88aa0d34c34520","alt","crossorigin","preventLoad","sizing","position","preload","fade","loaded","loading","width","height","_resolvedSrc","_imgOnLoad","img","_resolveSrc","_setLoading","_setLoaded","_setError","_imgOnError","sizedImgDiv","backgroundImage","_computePlaceholderHidden","_computePlaceholderClassName","_computeImgDivHidden","_computeImgDivARIAHidden","_computeImgDivARIALabel","_computeImgHidden","_widthChanged","_heightChanged","_loadStateObserver","newResolvedSrc","_placeholderChanged","_transformChanged","sizedImgDivStyle","placeholderStyle","backgroundSize","backgroundPosition","backgroundRepeat","testSrc","resolved","baseURIAnchor","origin","protocol","$52d419a2a308e56f$var$DashTwitterTweet","tweet","avatarUrl","screenName","createdAt","images","profileUrl","setProfileUrl","tweetUrl","setTweetUrl","imageCount","setImageCount","$1148adc078c4965f$export$c0bb0b647f701bb5","$ddd238c3f8af656a$export$a55877ca9db47377","$87e146981f9fff03$export$b6e69390c23686fb","$5da4839074ebf6b1$export$871de8747c9eaa88","image","$25932408189163fb$var$extendStatics","$25932408189163fb$export$a8ba968b8961cb8a","__","$25932408189163fb$export$18ce0697a983be9b","$25932408189163fb$export$29e00dfd3077644b","decorators","$25932408189163fb$export$19a8beecd37a4c45","done","customElement","classOrDescriptor","clazz","finisher","standardProperty","placement","originalKey","protoOrDescriptor","decorateProperty","query","$e44fe87036d15a49$var$n","HTMLSlotElement","assignedElements","$c7d4e4039b9a5eac$export$9dd6ff9ea0189349","$9ec0e3003eb5a7d3$export$dbf350e5966cf602","$c22db2018f9fdcc1$export$f04a61298a47a40f","$4e32d46d1d2dfb01$export$3f2f9f5909897157","$bac0a3e7c68dd86f$export$de994efd351b291c","$f2ce47120ee3eccb$export$da64fc29f17f9d0e","$e17d600b43ac3a73$var$supportsPassive","$e17d600b43ac3a73$var$fn","$e17d600b43ac3a73$var$optionsBlock","$73b2065987dfb152$export$a1a7283d3ef4b3a1","mdcRoot","focus","createFoundation","mdcFoundation","destroy","mdcFoundationClass","createAdapter","$d5da53e6c337e0a5$export$a81b11d69c993162","MDCFoundation","adapter","$a31d51712c442b5e$export$c1c0562ec8379000","BG_FOCUSED","FG_ACTIVATION","FG_DEACTIVATION","ROOT","UNBOUNDED","$a31d51712c442b5e$export$21c51bc433c16634","VAR_FG_SCALE","VAR_FG_SIZE","VAR_FG_TRANSLATE_END","VAR_FG_TRANSLATE_START","VAR_LEFT","VAR_TOP","$a31d51712c442b5e$export$1f6c9cc012ebacae","DEACTIVATION_TIMEOUT_MS","FG_DEACTIVATION_MS","INITIAL_ORIGIN_SCALE","PADDING","TAP_DELAY_MS","$11d461557f456bd0$export$82f3563636a128ae","evt","pageOffset","clientRect","normalizedX","normalizedY","documentX","documentY","touchEvent","$31383b506641ec7a$var$ACTIVATION_EVENT_TYPES","$31383b506641ec7a$var$POINTER_DEACTIVATION_EVENT_TYPES","$31383b506641ec7a$var$activatedTargets","$31383b506641ec7a$export$fb5f028029d92ef5","_super","MDCRippleFoundation","_this","defaultAdapter","activationAnimationHasEnded","activationTimer","fgDeactivationRemovalTimer","fgScale","frame","initialSize","layoutFrame","maxRadius","unboundedCoords","activationState","defaultActivationState","activationTimerCallback","runDeactivationUXLogicIfReady","activateHandler","activateImpl","deactivateHandler","deactivateImpl","focusHandler","handleFocus","blurHandler","handleBlur","resizeHandler","layout","addClass","browserSupportsCssVars","computeBoundingRect","containsEventTarget","deregisterDocumentInteractionHandler","deregisterInteractionHandler","deregisterResizeHandler","getWindowPageOffset","isSurfaceActive","isSurfaceDisabled","isUnbounded","registerDocumentInteractionHandler","registerInteractionHandler","registerResizeHandler","removeClass","updateCssVariable","supportsPressRipple","registerRootHandlers","cssClasses","ROOT_1","UNBOUNDED_1","layoutInternal","ROOT_2","UNBOUNDED_2","removeCssVars","deregisterRootHandlers","deregisterDeactivationHandlers","activate","deactivate","setUnbounded","unbounded","activationEvent","hasDeactivationUXRun","isActivated","isProgrammatic","wasActivatedByPointer","wasElementMadeActive","ACTIVATION_EVENT_TYPES_1","ACTIVATION_EVENT_TYPES_1_1","evtType","registerDeactivationHandlers","POINTER_DEACTIVATION_EVENT_TYPES_1","POINTER_DEACTIVATION_EVENT_TYPES_1_1","ACTIVATION_EVENT_TYPES_2","ACTIVATION_EVENT_TYPES_2_1","POINTER_DEACTIVATION_EVENT_TYPES_2","POINTER_DEACTIVATION_EVENT_TYPES_2_1","rippleStrings","previousActivationEvent","resetActivationState","checkElementMadeActive","animateActivation","keyCode","numbers","translateStart","translateEnd","getFgTranslationCoordinates","startPoint","endPoint","rmBoundedActivationClasses","animateDeactivation","maxDim","sqrt","pow","updateLayoutCssVars","$31383b506641ec7a$export$2e2bcd8739ae039","styleMap","styleInfo","_previousStyleProperties","$bfb707e8006907a4$export$6ecc905fed2eeb50","primary","accent","disabled","activated","internalUseStateLayerCustomProperties","hovering","bgFocused","fgActivation","fgDeactivation","fgSize","leftPos","topPos","parentElement","className","varName","pageXOffset","pageYOffset","startPress","waitForFoundation","endPress","startFocus","endFocus","startHover","endHover","shouldActivateInPrimary","shouldSelectInPrimary","classes","$3dd74a11c44b021f$export$56cc687933817664","$75a484b89e0365ea$export$1e5b4ce2fa884e6a","$8bd70df7af8b079e$export$2fa187e846a241c4","$fb15cf9d18c49140$export$d541bacb2bda4494","$f245eba952c45879$export$ca000e230c0caa3e","$4d2012c47613fff7$export$9dd6ff9ea0189349","$5eced499e9bd2002$export$9e9146f7e027fdaa","$405d6c2e21d5d5dc$export$9a192fb0d53f68ea","rippleFn","$14aadb2967812d8b$export$b0bb876e969289cd","raised","unelevated","outlined","dense","trailingIcon","fullwidth","icon","label","expandContent","shouldRenderRipple","rippleHandlers","ripple","renderOverlay","renderRipple","filled","buttonElement","blur","getRenderClasses","ariaHasPopup","handleRippleFocus","handleRippleBlur","handleRippleActivate","handleRippleMouseEnter","handleRippleMouseLeave","handleRippleDeactivate","renderIcon","flex","onUp","delegatesFocus","litInternalPropertyKey","propDescriptor","dispatchWizEvent","wrappedDescriptor","$9b5d3422b660ab48$var$tsDecorator","_name","$6bd10d58d5181485$export$9dd6ff9ea0189349","$588371c589af3d1b$export$353f5b6fc5456de1","$1de402fbce1732e1$var$DashTwitter","isPaused","onHold","tweetDuration","setDuration","stream","sendMessage","stop","pause","resume","hold","duration","active","$94b1e3813f9ce609$var$DashNowplaying","currentSong","artUrl","title","artist","album","setTitle","minVal","maxVal","$94b1e3813f9ce609$var$getRandomIntInclusive","$846338c5a70149a2$var$template","$846338c5a70149a2$var$style","$963dcaec391f34e0$export$a81a403c95c8dfae","types","$963dcaec391f34e0$var$metaDatas","byKey","__meta","__computeMeta","_selfChanged","theme","_meta","_DEFAULT_ICONSET","_iconChanged","_iconName","_iconsetName","_updateIcon","_srcChanged","_usesIconset","_img","_iconset","removeIcon","applyIcon","draggable","rtlMirroring","useGlobalRtlAttribute","getIconNames","_icons","_createIconMap","iconName","svg","_cloneIcon","_targetIsRTL","pde","_svgIcon","__targetIsRTL","globalElement","_nameChanged","icons","mirrorAllowed","_prepareSvgClone","sourceSvg","createElementNS","viewBox","$2a798ba288d43086$var$template","$08b6d0fca0632faf$var$template","$8621ca1bcf65e014$var$DashSection"],"version":3,"file":"live-controls.2c35ee52.js.map"}